<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>üè† –ò–Ω—Ç–µ—Ä–Ω–µ—Ç –í—Å–µ–≥–æ üöó - Embedded</title><link href="https://mazko.github.io/" rel="alternate"></link><link href="https://mazko.github.io/feeds/embedded.atom.xml" rel="self"></link><id>https://mazko.github.io/</id><updated>2022-09-01T00:00:00+03:00</updated><entry><title>–û–±—É—á–µ–Ω–∏–µ —Å –ø–æ–¥–∫—Ä–µ–ø–ª–µ–Ω–∏–µ–º –¥–ª—è –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤</title><link href="https://mazko.github.io/blog/posts/2022/09/01/obuchenie-s-podkrepleniem-dlia-mikrokontrollerov/" rel="alternate"></link><published>2022-09-01T00:00:00+03:00</published><updated>2022-09-01T00:00:00+03:00</updated><author><name>Oleg Mazko</name></author><id>tag:mazko.github.io,2022-09-01:/blog/posts/2022/09/01/obuchenie-s-podkrepleniem-dlia-mikrokontrollerov/</id><summary type="html">&lt;p&gt;–¢—É—Ç –º—ã –æ–±—É—á–∏–º –∏ —Ä–∞–∑–≤–µ—Ä–Ω–µ–º &lt;a href="https://mazko.github.io/blog/posts/2021/03/28/neiroseti-dlia-mikrokontrollerov-pertseptron/"&gt;–ø–µ—Ä—Ü–µ–ø—Ç—Ä–æ–Ω&lt;/a&gt;, –∫–æ—Ç–æ—Ä—ã–π —É–º–µ–µ—Ç –∏–≥—Ä–∞—Ç—å –≤ –∏–≥—Ä—É ¬´–∑–º–µ–π–∫–∞¬ª –Ω–∞ &lt;a href="https://mazko.github.io/blog/posts/2017/06/22/s-dlia-mikrokontrollerov-upravlenie-pamiatiu/"&gt;–º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–µ&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;–î–∞–≤–∞–π—Ç–µ –ø–æ—Ñ–∞–Ω—Ç–∞–∑–∏—Ä—É–µ–º. –†–æ–±–æ—Ç –ø–æ–ª—É—á–∏–ª –∑–∞–¥–∞–Ω–∏–µ –¥–æ—Å—Ç–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ã –∏–∑ –æ–¥–Ω–æ–π –∫–æ—Ä–æ–±–∫–∏ –∏ –ø–µ—Ä–µ–ª–æ–∂–∏—Ç—å –∏—Ö –≤ –¥—Ä—É–≥—É—é. –í —Ç–µ—á–µ–Ω–∏–µ –Ω–æ—á–∏ –º–∞–≥–∏—á–µ—Å–∫–∏–π —Å—É–ø–µ—Ä—Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º –±—É–¥–µ—Ç —Å–∞–º –ø—ã—Ç–∞—Ç—å—Å—è –ø–æ–Ω—è—Ç—å, –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—É—é –∑–∞–¥–∞—á—É. –ö —É—Ç—Ä—É, –ø–æ–∫–∞ –∏–Ω–∂–µ–Ω–µ—Ä—ã —Å–ø–∞–ª–∏, –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä —É–∂–µ ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;–¢—É—Ç –º—ã –æ–±—É—á–∏–º –∏ —Ä–∞–∑–≤–µ—Ä–Ω–µ–º &lt;a href="https://mazko.github.io/blog/posts/2021/03/28/neiroseti-dlia-mikrokontrollerov-pertseptron/"&gt;–ø–µ—Ä—Ü–µ–ø—Ç—Ä–æ–Ω&lt;/a&gt;, –∫–æ—Ç–æ—Ä—ã–π —É–º–µ–µ—Ç –∏–≥—Ä–∞—Ç—å –≤ –∏–≥—Ä—É ¬´–∑–º–µ–π–∫–∞¬ª –Ω–∞ &lt;a href="https://mazko.github.io/blog/posts/2017/06/22/s-dlia-mikrokontrollerov-upravlenie-pamiatiu/"&gt;–º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–µ&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;–î–∞–≤–∞–π—Ç–µ –ø–æ—Ñ–∞–Ω—Ç–∞–∑–∏—Ä—É–µ–º. –†–æ–±–æ—Ç –ø–æ–ª—É—á–∏–ª –∑–∞–¥–∞–Ω–∏–µ –¥–æ—Å—Ç–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ã –∏–∑ –æ–¥–Ω–æ–π –∫–æ—Ä–æ–±–∫–∏ –∏ –ø–µ—Ä–µ–ª–æ–∂–∏—Ç—å –∏—Ö –≤ –¥—Ä—É–≥—É—é. –í —Ç–µ—á–µ–Ω–∏–µ –Ω–æ—á–∏ –º–∞–≥–∏—á–µ—Å–∫–∏–π —Å—É–ø–µ—Ä—Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º –±—É–¥–µ—Ç —Å–∞–º –ø—ã—Ç–∞—Ç—å—Å—è –ø–æ–Ω—è—Ç—å, –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—É—é –∑–∞–¥–∞—á—É. –ö —É—Ç—Ä—É, –ø–æ–∫–∞ –∏–Ω–∂–µ–Ω–µ—Ä—ã —Å–ø–∞–ª–∏, –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä —É–∂–µ –æ—Å–≤–æ–∏—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏, –∫–∞–∫ –µ—Å–ª–∏ –±—ã –æ–Ω –±—ã–ª –∑–∞–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω —Ç–æ–ª–∫–æ–≤—ã–º —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º. –ó–≤—É—á–∏—Ç –∏–Ω—Ç—Ä–∏–≥—É—é—â–µ, –Ω–µ —Ç–∞–∫ –ª–∏?&lt;/p&gt;
&lt;p&gt;–û–¥–∏–Ω –∏–∑ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø—É—Ç–µ–π –¥–ª—è —Ä–µ—à–µ–Ω–∏—è —Ç–∞–∫–∏—Ö –∑–∞–¥–∞—á —ç—Ç–æ &lt;strong&gt;–æ–±—É—á–µ–Ω–∏–µ —Å –ø–æ–¥–∫—Ä–µ–ø–ª–µ–Ω–∏–µ–º&lt;/strong&gt;. –í —á–µ–º –µ–≥–æ —Å—É—Ç—å? –¢–∞–∫–æ–π –º–µ—Ç–æ–¥ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏—Å–ø—ã—Ç—É–µ–º–æ–π —Å–∏—Å—Ç–µ–º–µ (–∞–≥–µ–Ω—Ç—É) –æ–±—É—á–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –æ–∫—Ä—É–∂–∞—é—â–µ–π —Å—Ä–µ–¥–æ–π. –°–∞–º–æ–µ –≥–ª–∞–≤–Ω–æ–µ ‚Äì —Ä–æ–±–æ—Ç —Å–º–æ–∂–µ—Ç —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –≤—ã—è—Å–Ω–∏—Ç—å, –∫–∞–∫ –≤—ã–ø–æ–ª–Ω—è—Ç—å –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥ –Ω–∏–º –∑–∞–¥–∞—á–∏. –ê —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –º–µ—Ö–∞–Ω–∏–∑–º—ã –ø–æ–∑–≤–æ–ª—è—Ç —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–º—É —Ä–µ—à–µ–Ω–∏—é –∫–∞–∂–¥—ã–π —Ä–∞–∑ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å —É—Å–ø–µ—à–Ω–æ—Å—Ç—å —Å–≤–æ–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π. –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã –≥–ª—É–±–æ–∫–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è —Å –ø–æ–¥–∫—Ä–µ–ø–ª–µ–Ω–∏–µ–º —Å–ø–æ—Å–æ–±–Ω—ã —Ä–µ—à–∞—Ç—å –∑–∞–¥–∞—á–∏ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞ –º–µ—Ç–æ–¥–æ–º –ø—Ä–æ–± –∏ –æ—à–∏–±–æ–∫ –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–∞–∫–∏—Ö-–ª–∏–±–æ –∞–ø—Ä–∏–æ—Ä–Ω—ã—Ö –∑–Ω–∞–Ω–∏–π –æ —Ä–µ—à–∞–µ–º–æ–π –∑–∞–¥–∞—á–µ.&lt;/p&gt;
&lt;p&gt;–ë—Ä–æ—Å–∞–µ–º –±–µ–¥–Ω–æ–≥–æ —Ä–æ–±–æ—Ç–∞ –≤ —Ä–µ–∞–ª—å–Ω—É—é –∂–∏–∑–Ω—å, –±—É–¥–µ–º —à—Ç—Ä–∞—Ñ–æ–≤–∞—Ç—å –µ–≥–æ –∑–∞ –æ—à–∏–±–∫–∏ –∏ –Ω–∞–≥—Ä–∞–∂–¥–∞—Ç—å –∑–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø–æ—Å—Ç—É–ø–∫–∏. –ù–∞ –ª—é–¥—è—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø–æ—á–µ–º—É –±—ã –Ω–∞ –∏ —Ä–æ–±–æ—Ç–∞—Ö –Ω–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å? –í—ã–∂–∏–≤–∞–Ω–∏–µ –≤ —Å—Ä–µ–¥–µ –∏ –µ—Å—Ç—å –∏–¥–µ—è –æ–±—É—á–µ–Ω–∏—è —Å –ø–æ–¥–∫—Ä–µ–ø–ª–µ–Ω–∏–µ–º. –£–º–Ω—ã–µ –º–æ–¥–µ–ª–∏ —Ä–æ–±–æ—Ç–æ–≤-–ø—ã–ª–µ—Å–æ—Å–æ–≤ –∏ —Å–∞–º–æ—É–ø—Ä–∞–≤–ª—è–µ–º—ã–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ –æ–±—É—á–∞—é—Ç—Å—è –∏–º–µ–Ω–Ω–æ —Ç–∞–∫: –∏–º —Å–æ–∑–¥–∞—é—Ç –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –≥–æ—Ä–æ–¥ (—á–∞—Å—Ç–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–∞—Ä—Ç –Ω–∞—Å—Ç–æ—è—â–∏—Ö –≥–æ—Ä–æ–¥–æ–≤), –Ω–∞—Å–µ–ª—è—é—Ç —Å–ª—É—á–∞–π–Ω—ã–º–∏ –ø–µ—à–µ—Ö–æ–¥–∞–º–∏ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç —É—á–∏—Ç—å—Å—è –≤—ã–∂–∏–≤–∞—Ç—å. –ö–æ–≥–¥–∞ —Ä–æ–±–æ—Ç –Ω–∞—á–∏–Ω–∞–µ—Ç —Ö–æ—Ä–æ—à–æ —Å–µ–±—è —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π —Å—Ä–µ–¥–µ, –µ–≥–æ –≤—ã–ø—É—Å–∫–∞—é—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ —É–ª–∏—Ü—ã.&lt;/p&gt;
&lt;p&gt;–í –∫–∞—á–µ—Å—Ç–≤–µ –¥–µ–º–∫–∏ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä —Å–∞–º –∏–≥—Ä–µ—Ç –≤ –∏–≥—Ä—É &lt;a href="https://mazko.github.io/blog/posts/2017/06/22/s-dlia-mikrokontrollerov-upravlenie-pamiatiu/"&gt;–∑–º–µ–π–∫–∞&lt;/a&gt;. –° –ø–æ–º–æ—â—å—é –∞–ª–≥–æ—Ä–∏—Ç–º–∞ &lt;code&gt;Q-learning&lt;/code&gt; –∑–º–µ–π–∫–∞ –≤—ã–±–∏—Ä–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–π –∏–∑ —Ç–∞–±–ª–∏—Ü—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π. –ß—Ç–æ —ç—Ç–æ –∑–∞ –∞–ª–≥–æ—Ä–∏—Ç–º —Ç–∞–∫–æ–π –∏ –∫–∞–∫–∏–µ —É –Ω–µ–≥–æ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã —Ä–∞—Å–ø–∏—Å–∞–Ω–æ —á—É—Ç—å –Ω–∏–∂–µ.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://mazko.github.io/MSP430.js/9bab9e9bc8bbb15c0f11e2db7eff110d"&gt;MSP430.js&lt;/a&gt; | &lt;a href="https://mazko.github.io/blog/posts/2022/09/01/obuchenie-s-podkrepleniem-dlia-mikrokontrollerov/Q_Snake_msp430.html"&gt;–Ω–æ—É—Ç–±—É–∫&lt;/a&gt; | &lt;a href="https://mazko.github.io/blog/posts/2022/09/01/obuchenie-s-podkrepleniem-dlia-mikrokontrollerov/snake.msp430.js.zip"&gt;–∏—Å—Ö–æ–¥–Ω–∏–∫–∏&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2022/09/01/obuchenie-s-podkrepleniem-dlia-mikrokontrollerov/ui-msp430.gif" style="width:55%; margin: 0 auto; display:block;"&gt;&lt;/p&gt;
&lt;p&gt;–ü–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –ø–æ–≥—Ä—É–∂–∞—Ç—å—Å—è –≤ –∞–ª–≥–æ—Ä–∏—Ç–º—ã –æ–±—É—á–µ–Ω–∏—è —Å –ø–æ–¥–∫—Ä–µ–ø–ª–µ–Ω–∏–µ–º, –ø–æ–∂–∞–ª—É–π —Å—Ç–æ–∏—Ç –Ω–µ–º–Ω–æ–≥–æ –ø—Ä–æ–±–µ–∂–∞—Ç—å—Å—è –ø–æ —Ç–µ—Ä–º–∏–Ω–æ–ª–æ–≥–∏–∏. –í—Å–µ–≥–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç —Ç—Ä–∏ –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è. –° –æ–¥–Ω–æ–π –º—ã —É–∂–µ —Å—Ç–∞–ª–∫–∏–≤–∞–ª–∏—Å—å &lt;a href="https://mazko.github.io/blog/posts/2021/03/28/neiroseti-dlia-mikrokontrollerov-pertseptron/"&gt;—Ä–∞–Ω–µ–µ&lt;/a&gt;, –∫–æ–≥–¥–∞ –æ–±—É—á–∞–ª–∏ –ø–µ—Ä—Ü–µ–ø—Ç—Ä–æ–Ω –≤—ã–ø–æ–ª–Ω—è—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é XOR:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Supervised learning&lt;/strong&gt; (–æ–±—É—á–µ–Ω–∏–µ —Å —É—á–∏—Ç–µ–ª–µ–º): –ú–∞—à–∏–Ω–∞ —É—á–∏—Ç—Å—è –ø–æ –æ–±—É—á–∞—é—â–µ–π –≤—ã–±–æ—Ä–∫–µ, –≤ –∫–æ—Ç–æ—Ä–æ–π –µ—Å—Ç—å –≤—Ö–æ–¥–Ω—ã–µ –∏ –≤—ã—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –≠—Ç–æ –Ω–∞–∏–±–æ–ª–µ–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã–π –∏ –∏–∑—É—á–µ–Ω–Ω—ã–π —Ç–∏–ø –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è. –ù–∞–ø—Ä–∏–º–µ—Ä –∑–∞–¥–∞—á–∏ &lt;a href="https://mazko.github.io/blog/posts/2021/03/28/neiroseti-dlia-mikrokontrollerov-pertseptron/"&gt;—Ä–µ–≥—Ä–µ—Å—Å–∏–∏&lt;/a&gt; / –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∫–æ—Ç–∏–∫–æ–≤ –∏ —Å–æ–±–∞—á–µ–∫ –≤—Ö–æ–¥—è—Ç –≤ –¥–∞–Ω–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Unsupervised learning&lt;/strong&gt; (–æ–±—É—á–µ–Ω–∏–µ –±–µ–∑ —É—á–∏—Ç–µ–ª—è): –ï—Å—Ç—å –Ω–∞–±–æ—Ä –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö, –Ω–æ –Ω–µ—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö, —Ç.–µ. —Å—Ä–µ–¥–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç ¬´–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ¬ª –æ—Ç–≤–µ—Ç–∞, –º–∞—à–∏–Ω–∞ –¥–æ–ª–∂–Ω–∞ —Å–∞–º–∞ –Ω–∞–π—Ç–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –º–µ–∂–¥—É –æ–±—ä–µ–∫—Ç–∞–º–∏ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –æ–±—É—á–µ–Ω–∏—è. –ù–∞–ø—Ä–∏–º–µ—Ä –∑–∞–¥–∞—á–∞ –∫–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü–∏–∏ –∏–ª–∏ –∞–≤—Ç–æ—ç–Ω–∫–æ–¥–µ—Ä—ã –¥–ª—è –ø–æ–¥–∞–≤–ª–µ–Ω–∏—è —à—É–º–æ–≤ / —Å–∂–∞—Ç–∏—è –¥–∞–Ω–Ω—ã—Ö —Å –ø–æ—Ç–µ—Ä—è–º–∏&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Reinforcement learning&lt;/strong&gt; (–æ–±—É—á–µ–Ω–∏–µ —Å –ø–æ–¥–∫—Ä–µ–ø–ª–µ–Ω–∏–µ–º): –ú–∞—à–∏–Ω–∞ —É—á–∏—Ç—Å—è, –Ω–µ –∏–º–µ—è –ø–æ–ª–Ω—ã—Ö —Å–≤–µ–¥–µ–Ω–∏–π –æ —Å–∏—Å—Ç–µ–º–µ, –Ω–æ –∏–º–µ—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –Ω–∞–±–ª—é–¥–∞—Ç—å –∫–∞–∫–∏–µ-—Ç–æ –ø—Ä–∏–∑–Ω–∞–∫–∏ –∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å –∫–∞–∫–∏–µ-–ª–∏–±–æ –¥–µ–π—Å—Ç–≤–∏—è –≤ –Ω–µ–π. –î–µ–π—Å—Ç–≤–∏—è –ø–µ—Ä–µ–≤–æ–¥—è—Ç —Å–∏—Å—Ç–µ–º—É –≤ –Ω–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –º–æ–¥–µ–ª—å –ø–æ–ª—É—á–∞–µ—Ç –æ—Ç —Å–∏—Å—Ç–µ–º—ã –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ / —à—Ç—Ä–∞—Ñ. –û–±—É—á–µ–Ω–∏–µ —Å –ø–æ–¥–∫—Ä–µ–ø–ª–µ–Ω–∏–µ–º –∏—Å–ø–æ–ª—å–∑—É—é—Ç —Ç–∞–º, –≥–¥–µ –∑–∞–¥–∞—á–µ–π —Å—Ç–æ–∏—Ç –Ω–µ –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö, –∞ –≤—ã–∂–∏–≤–∞–Ω–∏–µ –≤ —Ä–µ–∞–ª—å–Ω–æ–π —Å—Ä–µ–¥–µ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è (–∫—É–º—É–ª—è—Ç–∏–≤–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞ ‚Äì —Å—É–º–º–∞ –Ω–∞–≥—Ä–∞–¥ –∑–∞ –∫–∞–∂–¥–æ–µ –ø—Ä–∏–Ω—è—Ç–æ–µ —Ä–µ—à–µ–Ω–∏–µ)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2022/09/01/obuchenie-s-podkrepleniem-dlia-mikrokontrollerov/RL_Environment.png" style="width:55%; margin: 0 auto; display:block;"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;–ê–≥–µ–Ω—Ç–æ–º&lt;/strong&gt; –º—ã –±—É–¥–µ–º –Ω–∞–∑—ã–≤–∞—Ç—å –Ω–∞—à –∞–ª–≥–æ—Ä–∏—Ç–º, –∫–æ—Ç–æ—Ä—ã–π —É–º–µ–µ—Ç –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å—Ä–µ–¥—ã –∏ —Å–æ–≤–µ—Ä—à–∞—Ç—å –≤ –Ω–µ–π –∫–∞–∫–∏–µ-—Ç–æ –¥–µ–π—Å—Ç–≤–∏—è&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;–°—Ä–µ–¥–∞&lt;/strong&gt; ‚Äì –º–∏—Ä –≤ –∫–æ—Ç–æ—Ä–æ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–∞—à –ê–≥–µ–Ω—Ç –∏ —Å–≤–æ–∏–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏ –º–æ–∂–µ—Ç –º–µ–Ω—è—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;–ù–∞–≥—Ä–∞–¥–∞&lt;/strong&gt; ‚Äì –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –æ—Ç –°—Ä–µ–¥—ã –∫ –ê–≥–µ–Ω—Ç—É –∫–∞–∫ –æ—Ç–≤–µ—Ç –Ω–∞ –µ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;–í –∫–∞–∂–¥—ã–π –º–æ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏ &lt;code&gt;t&lt;/code&gt; –Ω–∞—à –∞–≥–µ–Ω—Ç –Ω–∞–±–ª—é–¥–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å—Ä–µ–¥—ã ‚Äì &lt;code&gt;S(t)&lt;/code&gt;, –≤—ã–ø–æ–ª–Ω—è–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ ‚Äì &lt;code&gt;a(t)&lt;/code&gt;, –∑–∞ —á—Ç–æ –ø–æ–ª—É—á–∞–µ—Ç –æ—Ç —Å—Ä–µ–¥—ã –Ω–∞–≥—Ä–∞–¥—É ‚Äì &lt;code&gt;r(t)&lt;/code&gt;, –ø–æ–ª–µ —á–µ–≥–æ —Å—Ä–µ–¥–∞ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ &lt;code&gt;S(t+1)&lt;/code&gt;. –ó–∞—Ç–µ–º –∞–≥–µ–Ω—Ç –æ–ø—è—Ç—å –≤—ã–ø–æ–ª–Ω—è–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ ‚Äì &lt;code&gt;a(t+1)&lt;/code&gt;, –∑–∞ —á—Ç–æ –ø–æ–ª—É—á–∞–µ—Ç –æ—Ç —Å—Ä–µ–¥—ã –Ω–∞–≥—Ä–∞–¥—É ‚Äì &lt;code&gt;r(t+1)&lt;/code&gt; –∏ —Ç–∞–∫–∏—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π t —É –Ω–∞—Å –º–æ–∂–µ—Ç –±—ã—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–æ &lt;code&gt;n&lt;/code&gt; –¥–æ —Ç–µ—Ö –ø–æ—Ä –ø–æ–∫–∞ —ç–ø–∏–∑–æ–¥ (–∏–≥—Ä–∞) –Ω–µ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è. –¢–∞–∫–∂–µ –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –¥–∞–ª–µ–µ –±—É–¥–µ–º —Å—á–∏—Ç–∞—Ç—å —Å–∏–Ω–æ–Ω–∏–º–∞–º–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ, —Ö–æ—Ç—è —Ñ–æ—Ä–º–∞–ª—å–Ω–æ —ç—Ç–æ —Ä–∞–∑–Ω—ã–µ –≤–µ—â–∏ —Ç–∞–∫ –∫–∞–∫ –∞–≥–µ–Ω—Ç –º–æ–∂–µ—Ç –Ω–∞–±–ª—é–¥–∞—Ç—å –Ω–µ –≤—Å–µ –æ—Ç—Å—Ç–æ—è–Ω–∏–µ —Å—Ä–µ–¥—ã –∞ —Ç–æ–ª—å–∫–æ –µ–µ —á–∞—Å—Ç—å.&lt;/p&gt;
&lt;p&gt;–í –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ —Å –∏–≥—Ä–æ–π ¬´–∑–º–µ–π–∫–∞¬ª –Ω–∞–≥—Ä–∞–¥–∞ &lt;code&gt;+1&lt;/code&gt; –µ—Å–ª–∏ –∑–º–µ–π–∫–∞ —Å–∫—É—à–∞–ª–∞ —è–±–ª–æ–∫–æ, &lt;code&gt;-1&lt;/code&gt; –µ—Å–ª–∏ –∏–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞. –í –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö –Ω–∞–≥—Ä–∞–¥–∞ &lt;code&gt;0&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;REINFORCE&lt;/h2&gt;
&lt;p&gt;–ù–∞—á–Ω–µ–º —Å —Å–∞–º–æ–≥–æ –ø—Ä–æ—Å—Ç–æ–≥–æ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –æ–±—É—á–µ–Ω–∏—è —Å –ø–æ–¥–∫—Ä–µ–ø–ª–µ–Ω–∏–µ–º ‚Äì &lt;code&gt;Reinforce&lt;/code&gt;, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –∫ —Å–µ–º–µ–π—Å—Ç–≤—É &lt;code&gt;Policy Gradient&lt;/code&gt; (–≥—Ä–∞–¥–∏–µ–Ω—Ç –ø–æ–ª–∏—Ç–∏–∫–∏). –ó–¥–µ—Å—å –±—É–¥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –Ω–µ–π—Ä–æ—Å–µ—Ç–∏, –ø–æ—ç—Ç–æ–º—É –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–≥–æ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –Ω—É–∂–Ω–æ —É–∂–µ –∏–º–µ—Ç—å –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —á—Ç–æ —ç—Ç–æ –∏ –∫–∞–∫ –∏—Ö –æ–±—É—á–∞—Ç—å.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mazko.github.io/blog/posts/2022/09/01/obuchenie-s-podkrepleniem-dlia-mikrokontrollerov/R_Snake.html"&gt;–Ω–æ—É—Ç–±—É–∫&lt;/a&gt; | &lt;a href="https://mazko.github.io/blog/posts/2022/09/01/obuchenie-s-podkrepleniem-dlia-mikrokontrollerov/snake_reinfirce.zip"&gt;–∏—Å—Ö–æ–¥–Ω–∏–∫–∏&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2022/09/01/obuchenie-s-podkrepleniem-dlia-mikrokontrollerov/ui_reinforce.gif" style="width:55%; margin: 0 auto; display:block; border:1px solid #ddd;"&gt;&lt;/p&gt;
&lt;p&gt;–ê–ª–≥–æ—Ä–∏—Ç–º &lt;code&gt;Reinforce&lt;/code&gt; –±—ã–ª –ø—Ä–µ–¥–ª–æ–∂–µ–Ω –†–æ–Ω–∞–ª—å–¥–æ–º –î–∂. –í–∏–ª—å—è–º—Å–æ–º –≤ 1992 –≥–æ–¥—É. –°–ø–æ—Å–æ–±–µ–Ω –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∫–∞–∫ –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ —Å –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–π, —Ç–∞–∫ –∏ –¥–∏—Å–∫—Ä–µ—Ç–Ω–æ–µ. –ê–ª–≥–æ—Ä–∏—Ç–º —Å—Ç—Ä–æ–∏—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–ª—É—á–∞–µ—Ç &lt;strong&gt;–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ –¥–µ–π—Å—Ç–≤–∏–π&lt;/strong&gt; –ø–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è–º —Å—Ä–µ–¥—ã. –ê–≥–µ–Ω—Ç—ã –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç —ç—Ç—É —Å—Ç—Ä–∞—Ç–µ–≥–∏—é, —á—Ç–æ–±—ã –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Å—Ä–µ–¥–µ. –û—Å–Ω–æ–≤–Ω–æ–π —Å–º—ã—Å–ª –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –≤ —Ç–æ–º, —á—Ç–æ –≤–æ –≤—Ä–µ–º—è –æ–±—É—á–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏–≤–æ–¥—è—Ç –∫ —Ö–æ—Ä–æ—à–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º, –¥–æ–ª–∂–Ω—ã –∏–º–µ—Ç—å –±–æ–ª—å—à—É—é –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å ‚Äì –æ–Ω–∏ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ –ø–æ–¥–∫—Ä–µ–ø–ª—è—é—Ç—Å—è. –í –ø—Ä–æ—Ç–∏–≤–æ–≤–µ—Å —ç—Ç–æ–º—É –¥–µ–π—Å—Ç–≤–∏—è, –ø—Ä–∏–≤–æ–¥—è—â–∏–µ –∫ –ø–ª–æ—Ö–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º, –¥–æ–ª–∂–Ω—ã –∏–º–µ—Ç—å –º–µ–Ω—å—à—É—é –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å. –ï—Å–ª–∏ –æ–±—É—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ, —Ç–æ –∑–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∏—Ç–µ—Ä–∞—Ü–∏–π —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏–µ–π –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π –¥–µ–π—Å—Ç–≤–∏–π —Å—Ç–∞–Ω–µ—Ç —Ç–∞–∫–∏–º, –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ –ø–æ–≤—ã—à–µ–Ω–∏—é –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤ —Å—Ä–µ–¥–µ.&lt;/p&gt;
&lt;p&gt;–û–ø—Ç–∏–º–∞–ª—å–Ω–∞ —Ç–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è, –∫–æ—Ç–æ—Ä–∞—è –º–∞–∫—Å–∏–º–∏–∑–∏—Ä—É–µ—Ç —Å—É–º–º–∞—Ä–Ω–æ–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ. –û—Å–Ω–æ–≤–Ω–æ–π —Å–º—ã—Å–ª –∞–ª–≥–æ—Ä–∏—Ç–º–∞ ‚Äì –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Ö–æ—Ä–æ—à—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é, –∞ —ç—Ç–æ –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞–µ—Ç –∞–ø–ø—Ä–æ–∫—Å–∏–º–∞—Ü–∏—é —Ñ—É–Ω–∫—Ü–∏–∏. –ù–µ–π—Ä–æ–Ω–Ω—ã–µ —Å–µ—Ç–∏ ‚Äì —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π –∏ –≥–∏–±–∫–∏–π –º–µ—Ç–æ–¥ –∞–ø–ø—Ä–æ–∫—Å–∏–º–∞—Ü–∏–∏ —Ñ—É–Ω–∫—Ü–∏–π, —Ç–∞–∫ —á—Ç–æ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∞ –∫–∞–∫ –≥–ª—É–±–æ–∫–∞—è –Ω–µ–π—Ä–æ–Ω–Ω–∞—è —Å–µ—Ç—å.&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2022/09/01/obuchenie-s-podkrepleniem-dlia-mikrokontrollerov/reinforce_nn.png" style="width:75%; margin: 0 auto; display:block;"&gt;&lt;/p&gt;
&lt;p&gt;–ù–∞ –≤—Ö–æ–¥ –Ω–µ–π—Ä–æ–Ω–Ω–æ–π —Å–µ—Ç–∏ –±—É–¥–µ–º –ø–æ–¥–∞–≤–∞—Ç—å –Ω–∞–±–ª—é–¥–µ–Ω–∏—è &lt;code&gt;S(t)&lt;/code&gt;, –∞ –≤—ã—Ö–æ–¥ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ —Å–∫–æ–Ω—Å—Ç—Ä—É–∏—Ä—É–µ–º —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —á—Ç–æ–±—ã –≤ –≤—ã—Ö–æ–¥–Ω—ã–º —Å–ª–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã—Ö–æ–¥–æ–≤ –±—ã–ª–æ —Ä–∞–≤–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –¥–µ–π—Å—Ç–≤–∏–π –≤–æ–∑–º–æ–∂–Ω—ã—Ö –¥–ª—è –∞–≥–µ–Ω—Ç–∞ –≤ –Ω–∞—à–µ–π —Å—Ä–µ–¥–µ. –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –ø—Ä–æ–ø—É—Å—Ç–∏–≤ —á–µ—Ä–µ–∑ —Å–ª–æ–∏ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ &lt;code&gt;S(t)&lt;/code&gt; –Ω–∞ –≤—ã—Ö–æ–¥–µ –º—ã –ø–æ–ª—É—á–∏–º –Ω–µ–∫–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π –∞–≥–µ–Ω—Ç–∞ ‚Äì &lt;strong&gt;Policy Function&lt;/strong&gt;. –û–Ω–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞–º –Ω–∞—Å–∫–æ–ª—å–∫–æ –¥–µ–π—Å—Ç–≤–∏–µ &lt;code&gt;a(t)&lt;/code&gt; –ø—Ä–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ / –Ω–∞–±–ª—é–¥–µ–Ω–∏–∏ &lt;code&gt;S(t)&lt;/code&gt; –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ. –ï—Å–ª–∏ –ø—Ä–æ–≥–Ω–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–ª–æ–π –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ —á–µ—Ä–µ–∑ –∞–∫—Ç–∏–≤–∞—Ü–∏—è &lt;code&gt;Softmax&lt;/code&gt; –∞–∫—Ç–∏–≤–∞—Ü–∏—é, —Ç–æ –ø–æ–ª—É—á–∏—Ç—Å—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ &lt;code&gt;p(a|s)&lt;/code&gt; ‚Äì —Ñ—É–Ω–∫—Ü–∏—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ—Å—Ç–∏ –¥–µ–π—Å—Ç–≤–∏—è &lt;code&gt;a(t)&lt;/code&gt; –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å—Ä–µ–¥—ã.&lt;/p&gt;
&lt;p&gt;–ê–ª–≥–æ—Ä–∏—Ç–º &lt;code&gt;Reinforce&lt;/code&gt; –≤ —Å–æ—á–µ—Ç–∞–Ω–∏–∏ —Å –Ω–µ–π—Ä–æ–Ω–Ω—ã–º–∏ —Å–µ—Ç—è–º–∏ –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å &lt;code&gt;Policy Function&lt;/code&gt; —á–µ—Ä–µ–∑ –∞–ª–≥–æ—Ä–∏—Ç–º –æ–±—Ä–∞—Ç–Ω–æ–≥–æ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –æ—à–∏–±–∫–∏, –æ–±—É—á–∞—è –Ω–∞—à—É –Ω–µ–π—Ä–æ—Å–µ—Ç—å –∏—Ç–µ—Ä–∞—Ç–∏–≤–Ω–æ. –í—Å–µ –æ—á–µ–Ω—å –ø–æ—Ö–æ–∂–µ –Ω–∞ –æ–±—ã—á–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ —Å —É—á–∏—Ç–µ–ª–µ–º. –ù—É–∂–µ–Ω –Ω–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö, –Ω–µ–π—Ä–æ—Å–µ—Ç—å, —Ñ—É–Ω–∫—Ü–∏—è –ø–æ—Ç–µ—Ä—å (Loss) –∏ –º–µ—Ç–æ–¥ –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω–æ–≥–æ —Å–ø—É—Å–∫–∞ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è.&lt;/p&gt;
&lt;h3&gt;Loss&lt;/h3&gt;
&lt;p&gt;–ö–∞–∫ –æ–±—É—á–∞—é—Ç –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –æ—Ç–ª–∏—á–∞—Ç—å –∫–æ—à–µ—á–µ–∫ –æ—Ç —Å–æ–±–∞—á–µ–∫? –ü–æ—Å–ª–µ–¥–Ω–∏–π —Å–ª–æ–π –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –∏–º–µ–µ—Ç –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ &lt;code&gt;SoftMax&lt;/code&gt;, –¥–ª—è –æ–±—É—á–µ–Ω–∏—è —Å–µ—Ç–∏ –ø—Ä–∏–º–µ–Ω—è—é—Ç &lt;code&gt;Categorical Cross Entropy Loss&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2022/09/01/obuchenie-s-podkrepleniem-dlia-mikrokontrollerov/reinforce_cross_enropy_loss.png" style="width:55%; margin: 0 auto; display:block; border:1px solid #ddd;"&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;–ù–∞ –∫–∞—Ä—Ç–∏–Ω–∫–µ: y —Å–ª–µ–≤–∞ –∏—Å—Ç–∏–Ω–Ω—ã–µ –º–µ—Ç–∫–∏, y —Å–ø—Ä–∞–≤–∞ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–Ω—ã–µ –º–µ—Ç–∫–∏&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;–û–¥–Ω–∞–∫–æ –≤ —Å–ª—É—á–∞–µ –æ–±—É—á–µ–Ω–∏—è —Å –ø–æ–¥–∫—Ä–µ–ø–ª–µ–Ω–∏–µ–º —É –Ω–∞—Å –Ω–µ—Ç –∏—Å—Ç–∏–Ω–Ω—ã—Ö –º–µ—Ç–æ–∫ –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π –∞–≥–µ–Ω—Ç–∞ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏—è—Ö &lt;code&gt;S(0..n)&lt;/code&gt;, –∫–∞–∫ –∂–µ –Ω–∞–º –æ–±—É—á–∞—Ç—å –Ω–µ–π—Ä–æ—Å–µ—Ç—å –≤ —ç—Ç–æ–º —Å–ª—É—á–∞–µ? –ú–æ–∂–µ–º –ª–∏ –º—ã –≤–º–µ—Å—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö (–∏—Å—Ç–∏–Ω–Ω—ã—Ö) –º–µ—Ç–æ–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞–≥—Ä–∞–¥—É, –∫–æ—Ç–æ—Ä—É—é –∞–≥–µ–Ω—Ç –ø–æ–ª—É—á–∏–ª –æ—Ç —Å—Ä–µ–¥—ã –≤—ã–ø–æ–ª–Ω–∏–≤ –¥–µ–π—Å—Ç–≤–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –µ–º—É –ø—Ä–µ–¥—Å–∫–∞–∑–∞–ª–∞ –Ω–µ–π—Ä–æ—Å–µ—Ç—å? –§—É–Ω–∫—Ü–∏—é –ø–æ—Ç–µ—Ä—å, –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é –ø–æ–¥ –æ–±—É—á–µ–Ω–∏–µ —Å –ø–æ–¥–∫—Ä–µ–ø–ª–µ–Ω–∏–µ–º, –º–æ–∂–Ω–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å —Ç–∞–∫:&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2022/09/01/obuchenie-s-podkrepleniem-dlia-mikrokontrollerov/reinforce_loss.png" style="width:55%; margin: 0 auto; display:block; border:1px solid #ddd;"&gt;&lt;/p&gt;
&lt;p&gt;–ò–º–µ–µ–º –ø—Ä–∞–≤–æ —Ç–∞–∫ —Å–¥–µ–ª–∞—Ç—å –ø–æ—Ç–æ–º—É, —á—Ç–æ &lt;code&gt;yj&lt;/code&gt; –¥–ª—è &lt;code&gt;Categorical Cross Entropy Loss&lt;/code&gt; ‚Äì —ç—Ç–æ –∏—Å—Ç–∏–Ω–Ω—ã–µ –º–µ—Ç–∫–∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ –∏ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞ –æ–Ω–∏ —Ä–∞–≤–Ω—ã –µ–¥–∏–Ω–∏—Ü–µ, –∞ &lt;code&gt;rj&lt;/code&gt; –¥–ª—è &lt;code&gt;Policy Function Loss&lt;/code&gt; ‚Äì –Ω–∞–≥—Ä–∞–¥–∞ –∫–æ—Ç–æ—Ä—É—é —Å—Ä–µ–¥–∞ –Ω–∞—á–∏—Å–ª–∏–ª–∞ –∞–≥–µ–Ω—Ç—É –∑–∞ –¥–µ–π—Å—Ç–≤–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –æ–Ω —Å–æ–≤–µ—Ä—à–∏–ª. –¢–æ –µ—Å—Ç—å &lt;code&gt;rj&lt;/code&gt; —Å–ª—É–∂–∏—Ç –∫–∞–∫ –±—ã –≤–µ—Å–æ–º –¥–ª—è –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–≤ –ø—Ä–∏ –æ–±—Ä–∞—Ç–Ω–æ–º —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–∏ –æ—à–∏–±–∫–∏ –∫–æ–≥–¥–∞ –º—ã –æ–±—É—á–∞–µ–º –Ω–µ–π—Ä–æ—Å–µ—Ç—å. –ù–∞–≥—Ä–∞–¥—ã —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –æ–±—É—á–∞—é—â–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏. –ï—Å–ª–∏ –ø–æ–ª—É—á–µ–Ω–∞ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞, –∏–º–µ–µ—Ç —Å–º—ã—Å–ª —Å—á–∏—Ç–∞—Ç—å –≤—Å–µ –ø—Ä–µ–¥–ø—Ä–∏–Ω—è—Ç—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –±–æ–ª–µ–µ-–º–µ–Ω–µ–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ ‚Äì –∞ –∑–Ω–∞—á–∏—Ç, –º–æ–∂–Ω–æ –ø–æ—Å—á–∏—Ç–∞—Ç—å –≥—Ä–∞–¥–∏–µ–Ω—Ç—ã —Ç–æ—á–Ω–æ —Ç–∞–∫–∏–º –∂–µ –º–µ—Ç–æ–¥–æ–º, –∫–∞–∫–∏–º –º—ã —Å—á–∏—Ç–∞–ª–∏ –±—ã –∏—Ö –≤ –æ–±—É—á–µ–Ω–∏–∏ —Å —É—á–∏—Ç–µ–ª–µ–º. –¢–æ –∂–µ —Å–∞–º–æ–µ –≤–µ—Ä–Ω–æ –≤ —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –ø–æ–ª—É—á–µ–Ω–∞ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞ ‚Äì —Ç–æ–ª—å–∫–æ –≤–º–µ—Å—Ç–æ —É–≤–µ–ª–∏—á–µ–Ω–∏—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ —Å–æ–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –≤ –±—É–¥—É—â–µ–º, –µ–µ —Å–ª–µ–¥—É–µ—Ç —É–º–µ–Ω—å—à–∞—Ç—å. –ì—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–π —Å–ø—É—Å–∫ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–≤ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —á—Ç–æ–±—ã –¥–µ–π—Å—Ç–≤–∏—è, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—â–∏–µ –≤—ã—Å–æ–∫—É—é –Ω–∞–≥—Ä–∞–¥—É –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏, –∏–º–µ–ª–∏ –≤—ã—Å–æ–∫—É—é –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å, –∞ –¥–µ–π—Å—Ç–≤–∏—è —Å –Ω–∏–∑–∫–æ–π –Ω–∞–≥—Ä–∞–¥–æ–π ‚Äì –Ω–∏–∑–∫—É—é.&lt;/p&gt;
&lt;h3&gt;Rollout&lt;/h3&gt;
&lt;p&gt;–°–æ–∑–¥–∞–µ–º –∑–º–µ–π–∫—É &lt;code&gt;env = SnakeGame()&lt;/code&gt;, –ø—Ä–æ–≥–æ–Ω—è–µ–º —ç–ø–∏–∑–æ–¥—ã, —Å–æ–±–∏—Ä–µ–º –¥–∞—Ç–∞—Å–µ—Ç. –ü—Ä–æ–≥–æ–Ω –æ–¥–Ω–æ–≥–æ —ç–ø–∏–∑–æ–¥–∞ –≤ –æ–±—É—á–µ–Ω–∏–∏ —Å –ø–æ–¥–∫—Ä–µ–ø–ª–µ–Ω–∏–µ–º —á–∞—Å—Ç–æ –Ω–∞–∑—ã–≤–∞—é—Ç &lt;code&gt;Rollout&lt;/code&gt;. –î–∞—Ç–∞—Å–µ—Ç —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –Ω–∞–±–ª—é–¥–µ–Ω–∏–π, –¥–µ–π—Å—Ç–≤–∏–π –∏ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –Ω–∞–≥—Ä–∞–¥.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;play_game&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
  &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reset&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="n"&gt;game_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
  &lt;span class="n"&gt;done&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
  &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;features&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;extract_features&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;action&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expand_dims&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;training&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;action&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;squeeze&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;categorical&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;action&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;reward&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;info&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;action&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;game_data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;action&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1e-2&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;reward&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;reward&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;game_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;score&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–î–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –∏ —Å–∫–æ—Ä–æ—Å—Ç–∏ –æ–±—É—á–µ–Ω–∏—è –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ &lt;code&gt;features&lt;/code&gt; —Å–æ—Å—Ç–æ–∏—Ç —Ç–æ–ª—å–∫–æ –∏–∑ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –≥–æ–ª–æ–≤—ã –∑–º–µ–π–∫–∏ –∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –µ–¥—ã, —Ç.–µ. –≥–µ–æ–º–µ—Ç—Ä–∏—é —Ç–µ–ª–∞ –∑–º–µ–π–∫–∏ –ø–æ–∫–∞ –Ω–µ —É—á–∏—Ç—ã–≤–∞–µ–º. –¢–∞–∫–∂–µ –≤ –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –ø–æ–ø–∞–¥–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è—Ö –ø–æ –æ—Ç–Ω–æ—à–µ–Ω–∏–∏ –∫ –≥–æ–ª–æ–≤–µ –∑–º–µ–π–∫–∏ ‚Äì –µ—Å—Ç—å –ª–∏ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–µ —Å–ª–µ–≤–∞, —Å–ø—Ä–∞–≤–∞, —Å–≤–µ—Ä—Ö—É –∏–ª–∏ —Å–Ω–∏–∑—É.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;extract_features&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;game&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;obsticle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;deepcopy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;game&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;done&lt;/span&gt;
  &lt;span class="n"&gt;snake&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;food&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;game&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_state&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="n"&gt;food&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;game&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;board_height&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;snake&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
  &lt;span class="n"&gt;obs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obsticle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;game&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ACTION&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="nb"&gt;max&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;game&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;board_height&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;game&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;board_width&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;obs&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mb"&gt;0b1111&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;food&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nb"&gt;max&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–¢–∞–∫–∏–µ –∂–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –Ω–∞–∫–ª–∞–¥—ã–≤–∞—é—Ç—Å—è –∏ –Ω–∞ –ø—Ä–∏–∑–Ω–∞–∫–∏ &lt;code&gt;Q-learning&lt;/code&gt;, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –æ–ø–∏—Å–∞–Ω–æ –Ω–∏–∂–µ. –≠—Ç–æ –ø–æ–∑–≤–æ–ª–∏—Ç —Ä–∞–≤–Ω–æ—Ü–µ–Ω–Ω–æ —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ –æ–±–æ–∏—Ö –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ &lt;code&gt;Reinforce&lt;/code&gt; –∏ &lt;code&gt;Q-learning&lt;/code&gt; –Ω–∞ –ø—Ä–∏–º–µ—Ä–µ –∑–º–µ–π–∫–∏.&lt;/p&gt;
&lt;h3&gt;Exploration vs Exploitation&lt;/h3&gt;
&lt;p&gt;–û—á–µ–≤–∏–¥–Ω–æ —á—Ç–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π —Å—Ä–µ–¥—ã –Ω–∞–¥–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å (—Ä–∞–∑–≤–µ–¥–∞—Ç—å), —á—Ç–æ–±—ã –∏–º–µ—Ç—å –ø–æ–Ω—è—Ç–∏–µ –æ —Ç–æ–º, –∫–∞–∫–æ–π –≤–∞—Ä–∏–∞–Ω—Ç —Ä–µ–∞–∫—Ü–∏–∏ –Ω–∞ —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∞–º—ã–π –ª—É—á—à–∏–π. –ï—Å–ª–∏ –º—ã —Å–Ω–∞—á–∞–ª–∞ –æ–±–Ω–∞—Ä—É–∂–∏–ª–∏ —ç—Ç–æ—Ç —Å–∞–º—ã–π –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç, –∞ –ø–æ—Ç–æ–º –≤—Å–µ –≤—Ä–µ–º—è –µ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º ‚Äì –º—ã –º–∞–∫—Å–∏–º–∏–∑–∏—Ä—É–µ–º —Å—É–º–º–∞—Ä–Ω—É—é –Ω–∞–≥—Ä–∞–¥—É, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞–º –¥–æ—Å—Ç—É–ø–Ω–∞ –∏–∑ –æ–∫—Ä—É–∂–∞—é—â–µ–π —Å—Ä–µ–¥—ã? –° –¥—Ä—É–≥–æ–π —Å—Ç–æ—Ä–æ–Ω—ã, –º—ã —Ç–∞–∫–∂–µ —Ö–æ—Ç–∏–º –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å –¥—Ä—É–≥–∏–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã ‚Äì –≤–¥—Ä—É–≥ –æ–Ω–∏ –≤ –±—É–¥—É—â–µ–º –æ–∫–∞–∂—É—Ç—Å—è –ª—É—á—à–µ, –∞ –º—ã –ø—Ä–æ—Å—Ç–æ —ç—Ç–æ–≥–æ –ø–æ–∫–∞ –Ω–µ –∑–Ω–∞–µ–º? –í –ø—Ä–æ—Ü–µ—Å—Å–µ –æ–±—É—á–µ–Ω–∏—è –Ω—É–∂–µ–Ω –∫–æ–º–ø—Ä–æ–º–∏—Å—Å –º–µ–∂–¥—É –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ–º –∏ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–µ–π (Exploration vs Exploitation).&lt;/p&gt;
&lt;p&gt;–ù–∞ –Ω–∞—á–∞–ª—å–Ω–æ–º —ç—Ç–∞–ø–µ –Ω–µ–π—Ä–æ—Å–µ—Ç—å –Ω–∏—á–µ–≥–æ –Ω–µ –∑–Ω–∞–µ—Ç –æ —Å—Ä–µ–¥–µ, –æ–Ω–∞ –¥–∞—ë—Ç –Ω–∞ –≤—ã—Ö–æ–¥–µ —Å–ª—É—á–∞–π–Ω—ã–µ, —Ö–æ—Ç—å –∏ –¥–µ—Ç–µ—Ä–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è. –í –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ –æ–Ω–∞ –Ω–∞ –ª—é–±—ã–µ –¥–∞–Ω–Ω—ã–µ –±—É–¥–µ—Ç –≤—ã–¥–∞–≤–∞—Ç—å –ø—Ä–∏–º–µ—Ä–Ω–æ –æ–¥–∏–Ω–∞–∫–æ–≤—É—é –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –¥–ª—è –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –∑–º–µ–π–∫–∏, —Ç.–µ. –º—ã –±—É–¥–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å —Å—Ä–µ–¥—É. –ü–æ –º–µ—Ä–µ –æ–±—É—á–µ–Ω–∏—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ–¥–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è –±—É–¥–µ—Ç –ø—Ä–µ–æ–±–ª–∞–¥–∞—Ç—å –Ω–∞–¥ –¥—Ä—É–≥–∏–º–∏. –ï—Å–ª–∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ–¥–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è –¥–æ—Å—Ç–∏–≥–Ω–µ—Ç &lt;code&gt;1&lt;/code&gt;, –∑–Ω–∞—á–∏—Ç –Ω–µ–π—Ä–æ—Å–µ—Ç—å –∞–±—Å–æ–ª—é—Ç–Ω–æ —É–≤–µ—Ä–µ–Ω–∞ –≤ —Å–≤–æ–µ–º –¥–µ–π—Å—Ç–≤–∏–∏ –∏ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å —É–∂–µ –Ω–µ—á–µ–≥–æ. –ó–∞ –±–∞–ª–∞–Ω—Å –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –∏ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –æ–±—É—á–µ–Ω–∏—è –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –æ—Ç–≤–µ—á–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—è &lt;code&gt;tf.random.categorical&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Discount&lt;/h3&gt;
&lt;p&gt;–ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–∞—è –∏–ª–∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞ —É –∞–≥–µ–Ω—Ç–∞ –º–æ–∂–µ—Ç —Å–ª—É—á–∞–µ—Ç—Å—è –∫—Ä–∞–π–Ω–µ —Ä–µ–¥–∫–æ, –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –∂–µ –Ω–∞–≥—Ä–∞–¥–∞ –≤–Ω–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –µ–≥–æ –¥–µ–π—Å—Ç–≤–∏–π —Ä–∞–≤–Ω–∞ –Ω—É–ª—é. –ö–∞–∫ –∂–µ –æ–±—É—á–∞—Ç—å –ê–≥–µ–Ω—Ç–∞ –∫–æ–¥–∞ –æ—Å–Ω–æ–≤–Ω–æ–µ –≤—Ä–µ–º—è –æ–Ω –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç –æ—Ç–∫–ª–∏–∫–∞ –æ—Ç —Å—Ä–µ–¥—ã –Ω–∞ —Å–≤–æ–∏ –¥–µ–π—Å—Ç–≤–∏—è? –í–µ–¥—å –µ—Å–ª–∏ –Ω–∞–≥—Ä–∞–¥–∞ –æ—Ç —Å—Ä–µ–¥—ã —Ä–∞–≤–Ω–∞ –Ω—É–ª—é, —Ç–æ –∏ –≥—Ä–∞–¥–∏–µ–Ω—Ç—ã –ø—Ä–∏ –æ–±—Ä–∞—Ç–Ω–æ–º —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–∏ –æ—à–∏–±–∫–∏ —á–µ—Ä–µ–∑ –Ω–µ–π—Ä–æ—Å–µ—Ç—å –≤ —ç—Ç–æ–º —Å–ª—É—á–∞–µ —Ä–∞–≤–Ω–∞ –Ω—É–ª—é, –≤–µ—Å–∞–º –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –º–µ–Ω—è—Ç—å—Å—è –±—É–¥–µ—Ç –Ω–µ–∫—É–¥–∞, –∑–Ω–∞—á–∏—Ç –∏ –Ω–∞—à –∞–≥–µ–Ω—Ç –Ω–∏—á–µ–º—É –Ω–µ –±—É–¥–µ—Ç —É—á–∏—Ç—å—Å—è. –ö–∞–∫ –∂–µ —Ä–µ—à–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É —Å –Ω—É–ª–µ–≤–æ–π –Ω–∞–≥—Ä–∞–¥–æ–π –≤ –±–æ–ª—å—à–µ–π —á–∞—Å—Ç–∏ –¥–∞—Ç–∞—Å–µ—Ç–∞ –∫–æ—Ç–æ—Ä—ã–π —Å–æ–±–∏—Ä–∞–µ—Ç—Å—è –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –∞–≥–µ–Ω—Ç–∞?&lt;/p&gt;
&lt;p&gt;–û–±—ã—á–Ω–æ –≤–≤–æ–¥–∏—Ç—Å—è –¥–∏—Å–∫–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞ –∑–∞ –¥–µ–π—Å—Ç–≤–∏–µ —Å —É–±—ã–≤–∞–Ω–∏–µ–º –ø–æ –º–µ—Ä–µ —É–¥–∞–ª–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è –æ—Ç —Ñ–∏–Ω–∞–ª–∞ —ç–ø–∏–∑–æ–¥–∞. –¢–µ–º —Å–∞–º—ã–º –º—ã –¥–∞–µ–º –ê–≥–µ–Ω—Ç—É –ø–æ–Ω—è—Ç—å, —á—Ç–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è –∫–æ—Ç–æ—Ä—ã–µ –æ–Ω –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞–ª, –±–æ–ª–µ–µ –≤–∞–∂–Ω—ã –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç —ç–ø–∏–∑–æ–¥–∞ –∏–≥—Ä—ã, —á–µ–º —Ç–µ –¥–µ–π—Å—Ç–≤–∏—è –∫–æ—Ç–æ—Ä—ã–µ –æ–Ω –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞–ª –≤–Ω–∞—á–∞–ª–µ.&lt;/p&gt;
&lt;h3&gt;Train&lt;/h3&gt;
&lt;p&gt;–°–æ–∑–¥–∞–¥–∏–º –ø—Ä–æ—Å—Ç—É—é –Ω–µ–π—Ä–æ–Ω–Ω—É—é —Å–µ—Ç—å ‚Äì –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –º–Ω–æ–≥–æ—Å–ª–æ–π–Ω—ã–π –ø–µ—Ä—Ü–µ–ø—Ç—Ä–æ–Ω –≤–ø–æ–ª–Ω–µ –ø–æ–¥–æ–π–¥–µ—Ç. –û–±—É—á–∞—Ç—å –±—É–¥–µ–º –Ω–∞ &lt;strong&gt;Keras / Tensorflow&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;x_in&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;keras&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,))&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;keras&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;layers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Dense&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;activation&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;relu&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;keras&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;layers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Dense&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;activation&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;relu&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;keras&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;layers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Dense&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ACTION&lt;/span&gt;&lt;span class="p"&gt;))(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;keras&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x_in&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;keras&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;losses&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SparseCategoricalCrossentropy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;from_logits&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
              &lt;span class="n"&gt;optimizer&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Nadam&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ –æ—Ç–ª–∏—á–∏–µ –æ—Ç –ø—Ä–∏–≤—ã—á–Ω–æ–≥–æ –Ω–∞–º –æ–±—É—á–µ–Ω–∏—è —Å —É—á–∏—Ç–µ–ª–µ–º —ç—Ç–æ –ø–∞—Ä–∞–º–µ—Ç—Ä &lt;code&gt;sample_weight&lt;/code&gt;, –≤ –∫–æ—Ç–æ—Ä—ã–π –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –¥–∏—Å–∫–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;history&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;history&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;episodes_to_play&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;score&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;play_game&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;R&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;zip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
  &lt;span class="n"&gt;history&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;train_on_batch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sample_weight&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;disc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="n"&gt;score&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–î–∏—Å–∫–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã –≤—ã—Å—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –ø–æ –æ–∫–æ–Ω—á–∞–Ω–∏–∏ —ç–ø–∏–∑–æ–¥–∞ –∏ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –º–æ–∂–Ω–æ –æ–±–Ω–æ–≤–ª—è—Ç—å –≤–µ—Å–∞ –Ω–µ–π—Ä–æ—Å—Ç–µ—Ç–∏. –≠—Ç–æ –æ–¥–∏–Ω –∏–∑ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–æ–≤ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ &lt;code&gt;Reinforce&lt;/code&gt; —Ç–∞–∫ –∫–∞–∫ —ç–ø–∏–∑–æ–¥ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—á–µ–Ω—å —Ä–∞—Å—Ç—è–Ω—É—Ç—ã–º –≤–æ –≤—Ä–µ–º–µ–Ω–∏, –∞ –≤—Ä–µ–º—è –∫–∞–∫ –∏–∑–≤–µ—Å—Ç–Ω–æ —Å—Ç–æ–∏—Ç –¥–µ–Ω–µ–≥.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;disc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scan&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ó–º–µ–π–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ –æ–±–ª–∞–¥–∞–µ—Ç –ø—Ä–∏–∑–Ω–∞–∫–∞–º–∏ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞, –Ω–æ —è–≤–Ω–æ –∏–º –Ω–µ –±–ª–µ—â–µ—Ç. –û–Ω–∞ –Ω–µ –≤—Å–µ–≥–¥–∞ –≤—ã–±–∏—Ä–∞–µ—Ç –Ω–∞–∏–±–æ–ª–µ–µ –∫–æ—Ä–æ—Ç–∫–∏–π –ø—É—Ç—å, –∏–Ω–æ–≥–¥–∞ –ø–µ—Ä–µ—Å—Ç–∞–µ—Ç –∫—É—à–∞—Ç—å. –í –æ–±—â–µ–º –º–Ω–æ–≥–æ –¥–µ–Ω–µ–≥ –Ω–∞ —Ç–∞–∫–æ–π –∑–º–µ–π–∫–µ –º—ã –Ω–µ –∑–∞—Ä–∞–±–æ—Ç–∞–µ–º, –Ω–æ –¥–ª—è –ø–æ–≥—Ä—É–∂–µ–Ω–∏—è –≤ –æ–±—É—á–µ–Ω–∏–µ —Å –ø–æ–¥–∫—Ä–µ–ø–ª–µ–Ω–∏–µ–º –º–µ—Ç–æ–¥ &lt;code&gt;Reinforce&lt;/code&gt; —Ç–æ—á–Ω–æ –≥–æ–¥–∏—Ç—Å—è, —Ç–µ–º –±–æ–ª–µ–µ —á—Ç–æ –µ—Å—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–∞–Ω–Ω–æ–≥–æ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –∏ —Å–æ—á–µ—Ç–∞–Ω–∏—è —Å –¥—Ä—É–≥–∏–º–∏.&lt;/p&gt;
&lt;h2&gt;Q-LEARNING&lt;/h2&gt;
&lt;p&gt;–ê–ª–≥–æ—Ä–∏—Ç–º &lt;code&gt;Reinforce&lt;/code&gt;  –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ &lt;code&gt;policy-based&lt;/code&gt; –º–µ—Ç–æ–¥–∞–º –æ–±—É—á–µ–Ω–∏—è —Å –ø–æ–¥–∫—Ä–µ–ø–ª–µ–Ω–∏–µ–º. –ï—Å—Ç—å –∏ –¥—Ä—É–≥–æ–π –ø–æ–¥—Ö–æ–¥ –∫ —Ä–µ—à–µ–Ω–∏—é –∑–∞–¥–∞—á–∏, &lt;code&gt;value-based&lt;/code&gt;, –≤ –∫–æ—Ç–æ—Ä–æ–º –∞–ª–≥–æ—Ä–∏—Ç–º –∏—â–µ—Ç –Ω–µ —Å–∞–º—É —Å—Ç—Ä–∞—Ç–µ–≥–∏—é, –∞ –Ω–µ–∫–æ—Ç–æ—Ä—É—é –æ–ø—Ç–∏–º–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–ª–µ–∑–Ω–æ—Å—Ç–∏ –¥–µ–π—Å—Ç–≤–∏—è &lt;code&gt;Q-function&lt;/code&gt;. –ì–æ–≤–æ—Ä—è –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–º —è–∑—ã–∫–æ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–µ–∫–∞—è —Ñ—É–Ω–∫—Ü–∏—è &lt;code&gt;Q&lt;/code&gt;, –∫–æ—Ç–æ—Ä–∞—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è &lt;code&gt;s&lt;/code&gt; –∏ –¥–µ–π—Å—Ç–≤–∏—è &lt;code&gt;a&lt;/code&gt; –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫—É–º—É–ª—è—Ç–∏–≤–Ω–æ–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ &lt;code&gt;R&lt;/code&gt; –∏ –æ–±–æ–∑–Ω–∞—á–∞–µ—Ç—Å—è &lt;code&gt;Q(s|a)&lt;/code&gt;. –ó–¥–µ—Å—å –Ω–∞–¥–æ –æ–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ &lt;code&gt;Q-—Ñ—É–Ω–∫—Ü–∏—è&lt;/code&gt; –Ω–µ –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ, —Ç.–µ. &lt;code&gt;R != r(t)&lt;/code&gt;. –û–Ω–∞ –ª–∏—à—å –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–∂–∏–¥–∞–µ–º–æ–µ (–∫—É–º—É–ª—è—Ç–∏–≤–Ω–æ–µ) –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–∞–Ω–∏–∏ –ø—Ä–æ—à–ª–æ–≥–æ –æ–ø—ã—Ç–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –∞–≥–µ–Ω—Ç–∞ —Å–æ —Å—Ä–µ–¥–æ–π –≤ —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –º—ã –±—É–¥–µ–º –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–º –æ–±—Ä–∞–∑–æ–º. –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ –∞–≥–µ–Ω—Ç—É –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞ —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è, –Ω–æ –µ—Å–ª–∏ –æ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Ç–æ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å–æ —Å—Ä–µ–¥–æ–π, –ø–æ–≤—Ç–æ—Ä—è—è –¥–µ–π—Å—Ç–≤–∏—è –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑, –º—ã –º–æ–∂–µ–º –µ—ë –∞–ø–ø—Ä–æ–∫—Å–∏–º–∏—Ä–æ–≤–∞—Ç—å —Å –ø—Ä–∏–µ–º–ª–µ–º–æ–π –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å—é.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mazko.github.io/blog/posts/2022/09/01/obuchenie-s-podkrepleniem-dlia-mikrokontrollerov/Q_Snake.html"&gt;–Ω–æ—É—Ç–±—É–∫&lt;/a&gt; | &lt;a href="https://mazko.github.io/blog/posts/2022/09/01/obuchenie-s-podkrepleniem-dlia-mikrokontrollerov/snake_qtable.zip"&gt;–∏—Å—Ö–æ–¥–Ω–∏–∫–∏&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2022/09/01/obuchenie-s-podkrepleniem-dlia-mikrokontrollerov/ui_q_learning.gif" style="width:55%; margin: 0 auto; display:block; border:1px solid #ddd;"&gt;&lt;/p&gt;
&lt;p&gt;–¶–µ–ª—å –æ–±—É—á–µ–Ω–∏—è –Ω–∞—à–µ–≥–æ –∞–≥–µ–Ω—Ç–∞ ‚Äì –º–∞–∫—Å–∏–º–∏–∑–∞—Ü–∏—è —Å–æ–≤–æ–∫—É–ø–Ω–æ–π –Ω–∞–≥—Ä–∞–¥—ã. –ù–∞ —Ä–∏—Å—É–Ω–∫–µ –Ω–∏–∂–µ  –∞–≥–µ–Ω—Ç—É –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç –ø–µ—Ä–µ–π—Ç–∏ –∏–∑ –∫–ª–µ—Ç–∫–∏ &lt;code&gt;Start&lt;/code&gt; –≤ –∫–ª–µ—Ç–∫—É &lt;code&gt;Finish&lt;/code&gt;. –ù–∞–≥—Ä–∞–¥—É –∞–≥–µ–Ω—Ç –ø–æ–ª—É—á–∞–µ—Ç –æ–¥–Ω–æ—Ä–∞–∑–æ–≤–æ –ø—Ä–∏ –ø–æ–ø–∞–¥–∞–Ω–∏–∏ –≤ –∫–ª–µ—Ç–∫—É &lt;code&gt;Finish&lt;/code&gt;. –í–æ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏—è—Ö –Ω–∞–≥—Ä–∞–¥–∞ –Ω—É–ª–µ–≤–∞—è.&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2022/09/01/obuchenie-s-podkrepleniem-dlia-mikrokontrollerov/bellman_discount.png" style="width:55%; margin: 0 auto; display:block;"&gt;&lt;/p&gt;
&lt;p&gt;–û—á–µ–≤–∏–¥–Ω–æ, —á—Ç–æ –æ—Ä–∞–Ω–∂–µ–≤—ã–π –ø—É—Ç—å –∫–æ—Ä–æ—á–µ –∏ –±–æ–ª–µ–µ –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª–µ–Ω. –ù–æ —Å —Ç–æ—á–∫–∏ –∑—Ä–µ–Ω–∏—è –º–∞–∫—Å–∏–º–∏–∑–∞—Ü–∏—è –Ω–∞–≥—Ä–∞–¥—ã –æ–Ω–∏ —Ä–∞–≤–Ω–æ–∑–Ω–∞—á–Ω—ã. –î–ª—è —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã –≤–≤–æ–¥–∏—Ç—Å—è —Ñ–∞–∫—Ç–æ—Ä –¥–∏—Å–∫–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è &lt;code&gt;…£&lt;/code&gt;, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —É–º–µ–Ω—å—à–∞—Ç—å —Ü–µ–Ω–Ω–æ—Å—Ç—å –±—É–¥—É—â–∏—Ö –Ω–∞–≥—Ä–∞–¥.&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2022/09/01/obuchenie-s-podkrepleniem-dlia-mikrokontrollerov/reward_cum.png" style="width:55%; margin: 0 auto; display:block;"&gt;&lt;/p&gt;
&lt;p&gt;–§–∞–∫—Ç–æ—Ä –¥–∏—Å–∫–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è &lt;code&gt;…£&lt;/code&gt; –≤—ã–±–∏—Ä–∞–µ—Ç—Å—è –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç &lt;code&gt;0&lt;/code&gt; –¥–æ &lt;code&gt;1&lt;/code&gt;. –í —Ç–∞–∫–æ–º —Å–ª—É—á–∞–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ &lt;code&gt;Start&lt;/code&gt; –∫—É–º—É–ª—è—Ç–∏–≤–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞ –¥–ª—è –¥–µ–π—Å—Ç–≤–∏—è &lt;code&gt;–≤–≤–µ—Ä—Ö&lt;/code&gt; –±—É–¥–µ—Ç –º–µ–Ω—å—à–µ —á–µ–º –¥–ª—è –¥–µ–π—Å—Ç–≤–∏—è &lt;code&gt;–≤–ø—Ä–∞–≤–æ&lt;/code&gt;. –ú—ã –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞–µ–º –¥–µ–π—Å—Ç–≤–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –∏–º–µ—é—Ç –Ω–∞–∏–±–æ–ª—å—à—É—é —Ü–µ–Ω–Ω–æ—Å—Ç—å –≤ –∫–∞–∂–¥–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏. –ö–æ–≥–¥–∞ –º—ã –¥–µ–ª–∞–µ–º —ç—Ç–æ, –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—à–∏ &lt;code&gt;Q-values&lt;/code&gt; –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª–∏—Ç–∏–∫–∏. –≠—Ç–æ –±—É–¥–µ—Ç &lt;strong&gt;–∂–∞–¥–Ω–∞—è –ø–æ–ª–∏—Ç–∏–∫–∞&lt;/strong&gt;, –ø–æ—Ç–æ–º—É —á—Ç–æ –º—ã –≤—Å–µ–≥–¥–∞ –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞–µ–º –¥–µ–π—Å—Ç–≤–∏—è, –∫–æ—Ç–æ—Ä—ã–µ, –ø–æ –Ω–∞—à–µ–º—É –º–Ω–µ–Ω–∏—é, –ª—É—á—à–µ –≤—Å–µ–≥–æ –≤ –∫–∞–∂–¥–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏, –ø–æ—ç—Ç–æ–º—É –≥–æ–≤–æ—Ä–∏—Ç—Å—è, —á—Ç–æ –º—ã –¥–µ–π—Å—Ç–≤—É–µ–º –∂–∞–¥–Ω–æ. –í—ã–±–∏—Ä–∞—è –Ω–∞ –∫–∞–∂–¥–æ–º —à–∞–≥–µ –¥–µ–π—Å—Ç–≤–∏–µ —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ–º –º—ã –ø–æ–ª—É—á–∏–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –∫—É–º—É–ª—è—Ç–∏–≤–Ω—É—é –Ω–∞–≥—Ä–∞–¥—É.&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2022/09/01/obuchenie-s-podkrepleniem-dlia-mikrokontrollerov/bellman.png" style="width:55%; margin: 0 auto; display:block;"&gt;&lt;/p&gt;
&lt;p&gt;–î–∞–Ω–Ω–æ–µ —É—Ä–∞–≤–Ω–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω–∞–∑—ã–≤–∞—é—Ç —É—Ä–∞–≤–Ω–µ–Ω–∏–µ–º –ë–µ–ª–ª–º–∞–Ω–∞, —É—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç —á—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ &lt;code&gt;Q&lt;/code&gt; –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –ø–∞—Ä—ã —Å–æ—Å—Ç–æ—è–Ω–∏–µ-–¥–µ–π—Å—Ç–≤–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–∞–≥—Ä–∞–¥–æ–π &lt;code&gt;r&lt;/code&gt;, –ø–æ–ª—É—á–µ–Ω–Ω–æ–π –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –≤ –Ω–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–ø—É—Ç–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è), –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–π –∫ –∑–Ω–∞—á–µ–Ω–∏—é &lt;code&gt;Q&lt;/code&gt; –Ω–∞–∏–ª—É—á—à–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è –≤ —Å–ª–µ–¥—É—é—â–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Å –∫–∞–∫–∏–º-—Ç–æ –¥–∏—Å–∫–æ–Ω—Ç–æ–º.&lt;/p&gt;
&lt;p&gt;–°—É—Ç—å &lt;code&gt;Q-learning&lt;/code&gt; —Å–≤–æ–¥–∏—Ç—Å—è –∫ —Ç–æ–º—É, —Ç–æ –º—ã –º–æ–∂–µ–º –∏—Ç–µ—Ä–∞—Ç–∏–≤–Ω–æ –∞–ø–ø—Ä–æ–∫—Å–∏–º–∏—Ä–æ–≤–∞—Ç—å &lt;code&gt;Q-—Ñ—É–Ω–∫—Ü–∏—é&lt;/code&gt; –∏—Å–ø–æ–ª—å–∑—É—è —É—Ä–∞–≤–Ω–µ–Ω–∏–µ –ë–µ–ª–ª–º–∞–Ω–∞. –î—Ä—É–≥–∏–º–∏ —Å–ª–æ–≤–∞–º–∏, –º—ã —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–Ω–∞—á–µ–Ω–∏—è—Ö –¥–µ–π—Å—Ç–≤–∏–π –ø–æ –æ–¥–Ω–æ–º—É —à–∞–≥—É –∑–∞ —Ä–∞–∑.&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2022/09/01/obuchenie-s-podkrepleniem-dlia-mikrokontrollerov/bellman_update.png" style="width:100%; margin: 0 auto; display:block;"&gt;&lt;/p&gt;
&lt;p&gt;–¢–µ–ø–µ—Ä—å, –∫–æ–≥–¥–∞ —É –Ω–∞—Å –µ—Å—Ç—å –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –æ —Ç–æ–º, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç &lt;code&gt;Q-learning&lt;/code&gt;, –º—ã –º–æ–∂–µ–º –Ω–∞—á–∞—Ç—å –¥—É–º–∞—Ç—å –æ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –≤—Å–µ–≥–æ —ç—Ç–æ–≥–æ. –ú—ã —Å–æ–∑–¥–∞–¥–∏–º —Ç–∞–±–ª–∏—Ü—É –¥–ª—è –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π –∏ –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –∑–º–µ–π–∫–∏ &lt;code&gt;env = SnakeGame()&lt;/code&gt;. –ü—Ä–æ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –º–æ–∂–Ω–æ –ª—é–±—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞–º –Ω—Ä–∞–≤—è—Ç—Å—è ‚Äì –æ–Ω–∏ –º–æ–≥—É—Ç –±—ã—Ç—å —Å–ª—É—á–∞–π–Ω—ã–º–∏, –æ–Ω–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –∫–∞–∫–∏–º–∏-—Ç–æ –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–º–∏. –ú—ã —Å–æ–∑–¥–∞–¥–∏–º —Ç–∞–±–ª–∏—Ü—É, –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—É—é —Å–ª—É—á–∞–π–Ω—ã–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏, —Ç.–µ. –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ –≤—Å–µ—Ö —á–µ—Ç—ã—Ä–µ—Ö –¥–µ–π—Å—Ç–≤–∏–π —Ç–∞–º –ø—Ä–∏–º–µ—Ä–Ω–æ –ø–æ—Ä–æ–≤–Ω—É, —á—Ç–æ –≤ —Å–≤–æ—é –æ—á–µ—Ä–µ–¥—å –ø–æ–∑–≤–æ–ª–∏—Ç –∏–∑–±–µ–∂–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—ã –¥–∏—Å–±–∞–ª–∞–Ω—Å–∞ –∫–ª–∞—Å—Å–æ–≤ –≤ —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –Ω–∞–º –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è —Å–∂–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É —Å –ø–æ–º–æ—â—å—é –Ω–µ–π—Ä–æ—Å–µ—Ç–∏.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;action_space_size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ACTION&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;qtable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;action_space_size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;board_height&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;board_width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;board_height&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;board_width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="n"&gt;action_space_size&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–º–µ–π–∫–∏ –≤ –∫–∞–∫–æ–π-–ª–∏–±–æ –º–æ–º–µ–Ω—Ç –±–µ—Ä–µ—Ç—Å—è —É–ø—Ä–æ—â–µ–Ω–Ω–æ–µ ‚Äì –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≥–æ–ª–æ–≤—ã, —è–±–ª–æ–∫–∞, –Ω–∞–ª–∏—á–∏–µ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–π —Å–ª–µ–≤–∞, —Å–ø—Ä–∞–≤–∞, —Å–≤–µ—Ä—Ö—É, —Å–Ω–∏–∑—É. –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–µ–ª–∞ –Ω–µ —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;extract_features&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;game&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;snake&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;food&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;game&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_state&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="n"&gt;obsticle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;deepcopy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;game&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;done&lt;/span&gt;
  &lt;span class="n"&gt;obs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obsticle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;game&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ACTION&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;obs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;snake&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;snake&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ï—Å–ª–∏ –±—ã –º—ã –∑–∞—Ö–æ—Ç–µ–ª–∏ —É—á–∏—Ç—ã–≤–∞—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —á–∞—Å—Ç–µ–π —Ç–µ–ª–∞ –∑–º–µ–π–∫–∏, —Ç–æ–≥–¥–∞, —Ä–∞–∑–º–µ—Ä —Ç–∞–±–ª–∏—Ü—ã —Ä–µ–∑–∫–æ –≤–æ–∑—Ä–∞—Å—Ç–µ—Ç. –î–∞–∂–µ –µ—Å–ª–∏ –∏—Å—Ö–æ–¥–∏—Ç—å –∏–∑ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç —á–∞—Å—Ç–µ–π —Ç–µ–ª–∞ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö, —Ç–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∫–∞–∂–¥–æ–π –∏–∑ –Ω–∏—Ö —É–º–Ω–æ–∂–∞—é—Ç —Ä–∞–∑–º–µ—Ä —Ç–∞–±–ª–∏—Ü—ã –Ω–∞ 5 (–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, —Å–ª–µ–≤–∞, —Å–ø—Ä–∞–≤–∞, —Å–≤–µ—Ä—Ö—É, —Å–Ω–∏–∑—É). –ß–∞—Å—Ç–µ–π —Ç–µ–ª–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å &lt;code&gt;32 * 16 - 2 = 510&lt;/code&gt;. –ü–æ–ª—É—á–∞–µ–º &lt;code&gt;5**510&lt;/code&gt; —ç—Ç–æ –æ—á–µ–Ω—å –±–æ–ª—å—à–æ–µ —á–∏—Å–ª–æ –≥–∞–ª–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –º–∞—Å—à—Ç–∞–±–æ–≤, –Ω–∏ –æ–¥–∏–Ω –∫–æ–º–ø—å—é—Ç–µ—Ä –≤ –º–∏—Ä–µ –Ω–µ –æ–±–ª–∞–¥–∞–µ—Ç —Ç–∞–∫–∏–º —Ä–∞–∑–º–µ—Ä–æ–º –ø–∞–º—è—Ç–∏.&lt;/p&gt;
&lt;p&gt;–í–∞–∂–Ω–æ–π –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å—é &lt;code&gt;Q-learning&lt;/code&gt; —è–≤–ª—è–µ—Ç—Å—è —Ç–æ, —á—Ç–æ –æ–±—É—á–µ–Ω–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –Ω–µ –¥–æ–∂–∏–¥–∞—è—Å—å –æ–∫–æ–Ω—á–∞–Ω–∏—è —ç–ø–∏–∑–æ–¥–∞ –≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç &lt;code&gt;Reinforce&lt;/code&gt; –∞–ª–≥–æ—Ä–∏—Ç–º–∞. –ì–∏–ø–µ—Ä–ø–∞—Ä–∞–º–µ—Ç—Ä—ã &lt;code&gt;ALPHA&lt;/code&gt;, &lt;code&gt;GAMMA&lt;/code&gt; –∏ &lt;code&gt;epsilon&lt;/code&gt; –≤–ª–∏—è—é—Ç –Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç—å –∏ –∫–∞—á–µ—Å—Ç–≤–æ –æ–±—É—á–µ–Ω–∏—è. –¢–∞–∫ –∂–µ –∫–∞–∫ –∏ –≤ —Å–ª—É—á–∞–µ —Å &lt;code&gt;Reinforce&lt;/code&gt; –Ω—É–∂–µ–Ω –∫–æ–º–ø—Ä–æ–º–∏—Å—Å –º–µ–∂–¥—É —Ä–∞–∑–≤–µ–¥–∫–æ–π –∏ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–µ–π. –ó–∞ —ç—Ç–æ –æ—Ç–≤–µ—á–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è &lt;code&gt;epsilon&lt;/code&gt;. –ù–∞ –Ω–∞—á–∞–ª—å–Ω–æ–º —ç—Ç–∞–ø–µ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –¥–µ–π—Å—Ç–≤–∏–π –∞–≥–µ–Ω—Ç–∞ —è–≤–ª—è—é—Ç—Å—è —Å–ª—É—á–∞–π–Ω—ã–º–∏. –í –ø—Ä–æ—Ü–µ—Å—Å–µ –æ–±—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å –º–µ–Ω—è–µ—Ç—Å—è –≤ –æ–±—Ä–∞—Ç–Ω—É—é —Å—Ç–æ—Ä–Ω—É.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Until learning is stopped&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;history&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;total_episodes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

  &lt;span class="c1"&gt;# Reset the environment&lt;/span&gt;
  &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reset&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="n"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;extract_features&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="n"&gt;done&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;

  &lt;span class="c1"&gt;# Reduce epsilon (because we need less and less exploration)&lt;/span&gt;
  &lt;span class="n"&gt;epsilon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_epsilon&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;min_epsilon&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;epsilon_decay&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;history&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="n"&gt;epsilon&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;min_epsilon&lt;/span&gt;

  &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

    &lt;span class="c1"&gt;# Choose an action a in the current world state (s)&lt;/span&gt;
    &lt;span class="c1"&gt;# First we randomize a number&lt;/span&gt;
    &lt;span class="n"&gt;exp_exp_tradeoff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="c1"&gt;# If this number &amp;gt; greater than epsilon --&amp;gt;&lt;/span&gt;
    &lt;span class="c1"&gt;# exploitation (taking the biggest Q value for this state)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;exp_exp_tradeoff&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;epsilon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="n"&gt;action&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argmax&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;qtable&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

    &lt;span class="c1"&gt;# Else doing a random choice --&amp;gt; exploration&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="n"&gt;action&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random_action&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="c1"&gt;# Take the action (a) and observe the outcome state(s&amp;#39;) and reward (r)&lt;/span&gt;
    &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;reward&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;info&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;action&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;new_state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;extract_features&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="c1"&gt;# Update Q(s,a):= Q(s,a) + lr * [R(s,a) + GAMMA * max Q(s&amp;#39;,a&amp;#39;) - Q(s,a)]&lt;/span&gt;
    &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;action&lt;/span&gt;&lt;span class="p"&gt;,)&lt;/span&gt;
    &lt;span class="n"&gt;qtable&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;ALPHA&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;reward&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;GAMMA&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;qtable&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;new_state&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;qtable&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

    &lt;span class="c1"&gt;# Our new state is state&lt;/span&gt;
    &lt;span class="n"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new_state&lt;/span&gt;

  &lt;span class="n"&gt;history&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;score&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ê–ª–≥–æ—Ä–∏—Ç–º &lt;code&gt;Q-learning&lt;/code&gt; —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –≤ —Å–æ—á–µ—Ç–∞–Ω–∏–∏ —Å –Ω–µ–π—Ä–æ–Ω–Ω—ã–º–∏ —Å–µ—Ç—è–º–∏. –í —Å–∞–º–æ–º –ø—Ä–æ—Å—Ç–µ–π—à–µ–º —Å–ª—É—á–∞–µ —Ç–∞–±–ª–∏—Ü—É &lt;code&gt;Q-table&lt;/code&gt; –º–æ–∂–Ω–æ —Å–Ω–∞—á–∞–ª–∞ –æ–±—É—á–∏—Ç—å, –∞ –∑–∞—Ç–µ–º —Å–∂–∞—Ç—å –∏—Å–ø–æ–ª—å–∑—É—è –µ–µ –¥–∞–Ω–Ω—ã–µ –∫–∞–∫ –≥–æ—Ç–æ–≤—ã–π –¥–∞—Ç–∞—Å–µ—Ç –¥–ª—è –æ–±—É—á–µ–Ω–∏—è —Å —É—á–∏—Ç–µ–ª–µ–º. –û–¥–Ω–∞–∫–æ —á–∞—Å—Ç–æ —Å—Ä–µ–¥–∞ –∏–º–µ–µ—Ç —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏–π –∏ –¥–µ–π—Å—Ç–≤–∏–π, –ø–æ—ç—Ç–æ–º—É —Å–æ—Å—Ç–∞–≤–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É –≤ —è–≤–Ω–æ–º –≤–∏–¥–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ. –î–ª—è —Ä–µ—à–µ–Ω–∏—è —ç—Ç–æ–π –ø—Ä–æ–±–ª–µ–º—ã —Ç–∞–∫–∂–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –Ω–µ–π—Ä–æ–Ω–Ω—ã–µ —Å–µ—Ç–∏, —á—Ç–æ–±—ã –Ω–µ —Ö—Ä–∞–Ω–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª–µ–∑–Ω–æ—Å—Ç–∏, –∞ –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞—Ç—å –∏—Ö. –ù–∞ –≤—Ö–æ–¥ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –ø–æ—Å—Ç—É–ø–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å—Ä–µ–¥—ã, –∞ –Ω–∞ –≤—ã—Ö–æ–¥ –æ–Ω–∞ –¥–∞–µ—Ç –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ–º—É—é –Ω–∞–≥—Ä–∞–¥—É –¥–ª—è –≤—Å–µ—Ö –¥–µ–π—Å—Ç–≤–∏–π. –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è &lt;code&gt;Q-value&lt;/code&gt; –º—ã –æ–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–µ–π—Ä–æ–Ω–Ω–æ–π —Å–µ—Ç–∏, —á—Ç–æ–±—ã –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞—Ç—å –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è. –¢–∞–∫–∏–µ –Ω–µ–π—Ä–æ–Ω–Ω—ã–µ —Å–µ—Ç–∏ –Ω–∞–∑—ã–≤–∞—é—Ç DQN (Deep Q Networks).&lt;/p&gt;
&lt;h2&gt;DEEP Q-NETWORK (DQN)&lt;/h2&gt;
&lt;p&gt;–ó–∞–º–µ–Ω–∏–≤ —Ç–∞–±–ª–∏—Ü—É –∑–Ω–∞—á–µ–Ω–∏–π &lt;code&gt;Q-table&lt;/code&gt; –Ω–∞ –Ω–µ–π—Ä–æ–Ω–Ω—É—é —Å–µ—Ç—å, –º—ã –ø–æ–ª—É—á–∞–µ–º DQN. –í DQN –Ω–∞ –≤—Ö–æ–¥ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –ø–æ–¥–∞–µ—Ç—Å—è —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –∞ –Ω–∞ –≤—ã—Ö–æ–¥–µ –Ω–µ–π—Ä–æ—Å–µ—Ç—å –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç —Ü–µ–Ω–Ω–æ—Å—Ç—å &lt;code&gt;Q-value&lt;/code&gt; –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è —ç—Ç–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è.&lt;/p&gt;
&lt;p&gt;–í –ø—Ä–æ—Ü–µ—Å—Å–µ –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–∏ –∞–≥–µ–Ω—Ç –¥–µ–π—Å—Ç–≤—É–µ—Ç –≤ –æ–∫—Ä—É–∂–∞—é—â–µ–π —Å—Ä–µ–¥–µ –∏ —Ö—Ä–∞–Ω–∏—Ç –≤—Å–µ –ø–µ—Ä–µ—Ö–æ–¥—ã, –≤—ã–ø–æ–ª–Ω—è–µ–º—ã–µ –∏–º, –≤ –±—É—Ñ–µ—Ä–µ –ø—Ä–∏–º–µ—Ä–æ–≤ &lt;code&gt;replay buffer&lt;/code&gt;. –î–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –æ—à–∏–±–∫–∏ –º—ã —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ –≤—ã–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –±—É—Ñ–µ—Ä–∞ ‚Äì —Ç–∞–∫ –∂–µ, –∫–∞–∫ –º—ã –±—ã –¥–µ–ª–∞–ª–∏ —ç—Ç–æ –≤ —Ö–æ–¥–µ –æ–±—ã—á–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è —Å —É—á–∏—Ç–µ–ª–µ–º –∏ —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è —Ç–µ–∫—É—â–∏—Ö –≤—ã—Ö–æ–¥–Ω—ã—Ö &lt;code&gt;Q-value&lt;/code&gt; –∏–∑ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ —Å —Ü–µ–ª–µ–≤—ã–º–∏ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–Ω—ã–º–∏ –ø–æ —É—Ä–∞–≤–Ω–µ–Ω–∏—é –ë–µ–ª–ª–º–∞–Ω–∞.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mazko.github.io/blog/posts/2022/09/01/obuchenie-s-podkrepleniem-dlia-mikrokontrollerov/tf2-ddqn-snake-cnn.html"&gt;–Ω–æ—É—Ç–±—É–∫&lt;/a&gt; | &lt;a href="https://mazko.github.io/blog/posts/2022/09/01/obuchenie-s-podkrepleniem-dlia-mikrokontrollerov/snake_dqn_tflite.zip"&gt;–∏—Å—Ö–æ–¥–Ω–∏–∫–∏&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2022/09/01/obuchenie-s-podkrepleniem-dlia-mikrokontrollerov/ui_dqn.gif" style="width:55%; margin: 0 auto; display:block; border:1px solid #ddd;"&gt;&lt;/p&gt;
&lt;p&gt;–ù–∞ –≤—Ö–æ–¥ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –ø–æ—Å—Ç—É–ø–∞–µ—Ç –≤—Å–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–º–µ–π–∫–∏ —Å —É—á–µ—Ç–æ–º –≥–µ–æ–º–µ—Ç—Ä–∏–∏ —Ç–µ–ª–∞. –î–µ–π—Å—Ç–≤–∏—è –Ω–∞ –≤—ã—Ö–æ–¥–µ DQN –∑–º–µ–π–∫–∏ –±–æ–ª–µ–µ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã —á–µ–º –ø—Ä–∏ –∞–ª–≥–æ—Ä–∏—Ç–º–µ &lt;code&gt;Reinforce&lt;/code&gt; ‚Äì –ø–æ—Å–ª–µ–¥–Ω–∏–π –∑–∞—É—á–∏–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –¥–≤–∞ –¥–µ–π—Å—Ç–≤–∏—è –∏–∑ —á–µ—Ç—ã—Ä–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Ç.–µ. –≤–ø–∞–¥–∞–µ—Ç –≤ –ª–æ–∫–∞–ª—å–Ω—ã–π –º–∏–Ω–∏–º—É–º.&lt;/p&gt;
&lt;p&gt;–û–±—É—á–µ–Ω–∏–µ DQN —ç—Ç–æ –¥–ª–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å, –ø–æ—ç—Ç–æ–º—É –ª—É—á—à–µ —ç—Ç–æ –¥–µ–ª–∞—Ç—å –≤ –æ–±–ª–∞–∫–µ. –í –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ  –∑–º–µ–π–∫–∞ –∂–∏–≤–µ—Ç –∏ —É—á–∏—Ç—Å—è –≤ &lt;a href="https://www.kaggle.com/code/olehmazko/tf2-ddqn-snake-cnn"&gt;kaggle&lt;/a&gt;, —Ç–∞–º –∂–µ –≤—Å–µ–≥–¥–∞ –º–æ–∂–Ω–æ —Å–∫–∞—á–∞—Ç—å –±–æ–ª–µ–µ –∞–∫—Ç—É–∞–ª—å–Ω—É—é –º–æ–¥–µ–ª—å –Ω–∞ —Ç–µ–∫—É—â–∏–π –º–æ–º–µ–Ω—Ç.&lt;/p&gt;</content><category term="msp430"></category><category term="ai"></category><category term="rl"></category></entry><entry><title>–ù–µ–π—Ä–æ—Å–µ—Ç–∏ –¥–ª—è –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤ - ¬´–ü–µ—Ä—Ü–µ–ø—Ç—Ä–æ–Ω¬ª</title><link href="https://mazko.github.io/blog/posts/2021/03/28/neiroseti-dlia-mikrokontrollerov-pertseptron/" rel="alternate"></link><published>2021-03-28T00:00:00+02:00</published><updated>2021-03-28T00:00:00+02:00</updated><author><name>Oleg Mazko</name></author><id>tag:mazko.github.io,2021-03-28:/blog/posts/2021/03/28/neiroseti-dlia-mikrokontrollerov-pertseptron/</id><summary type="html">&lt;p&gt;–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–µ –Ω–µ–π—Ä–æ–Ω–Ω—ã–µ —Å–µ—Ç–∏ (–ò–ù–°) ‚Äî —ç—Ç–æ —É–ø—Ä–æ—â–µ–Ω–Ω—ã–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –º–æ–¥–µ–ª–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ —Ä–µ–∞–ª—å–Ω—ã—Ö –±–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –Ω–µ–π—Ä–æ–Ω–Ω—ã—Ö —Å–µ—Ç–µ–π (–ë–ù–°). –ü–æ–∫–∞ —á—Ç–æ –ò–ù–° –µ—â–µ –æ—á–µ–Ω—å –¥–∞–ª–µ–∫–∏ –æ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ –º–æ–∑–≥–∞ –∏ –º—ã—à–ª–µ–Ω–∏—è, –æ–¥–Ω–∞–∫–æ —É–∂–µ —Å–µ–π—á–∞—Å –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è –≤–æ –º–Ω–æ–≥–∏—Ö —Å—Ñ–µ—Ä–∞—Ö –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —á–µ–ª–æ–≤–µ–∫–∞ —Ç–∞–∫–∏—Ö –∫–∞–∫ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ, –∞ —Ç–∞–∫–∂–µ —Å–∏–Ω—Ç–µ–∑ —Ä–µ—á–∏ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π, —Ä–æ–±–æ—Ç—ã-–∫—É—Ä—å–µ—Ä—ã, –±–µ—Å–ø–∏–ª–æ—Ç–Ω—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç, –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–µ –Ω–µ–π—Ä–æ–Ω–Ω—ã–µ —Å–µ—Ç–∏ (–ò–ù–°) ‚Äî —ç—Ç–æ —É–ø—Ä–æ—â–µ–Ω–Ω—ã–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –º–æ–¥–µ–ª–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ —Ä–µ–∞–ª—å–Ω—ã—Ö –±–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –Ω–µ–π—Ä–æ–Ω–Ω—ã—Ö —Å–µ—Ç–µ–π (–ë–ù–°). –ü–æ–∫–∞ —á—Ç–æ –ò–ù–° –µ—â–µ –æ—á–µ–Ω—å –¥–∞–ª–µ–∫–∏ –æ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ –º–æ–∑–≥–∞ –∏ –º—ã—à–ª–µ–Ω–∏—è, –æ–¥–Ω–∞–∫–æ —É–∂–µ —Å–µ–π—á–∞—Å –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è –≤–æ –º–Ω–æ–≥–∏—Ö —Å—Ñ–µ—Ä–∞—Ö –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —á–µ–ª–æ–≤–µ–∫–∞ —Ç–∞–∫–∏—Ö –∫–∞–∫ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ, –∞ —Ç–∞–∫–∂–µ —Å–∏–Ω—Ç–µ–∑ —Ä–µ—á–∏ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π, —Ä–æ–±–æ—Ç—ã-–∫—É—Ä—å–µ—Ä—ã, –±–µ—Å–ø–∏–ª–æ—Ç–Ω—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç, –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ä—è–¥–æ–≤ –∏ –¥—Ä.&lt;/p&gt;
&lt;p&gt;–ë–∞–∑–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ ‚Äî –Ω–µ–π—Ä–æ–Ω. –ö–∞–∫ –º—ã –≤–∏–¥–∏–º –Ω–∞ —Ä–∏—Å—É–Ω–∫–µ –Ω–∏–∂–µ, —Å—Ç—Ä—É–∫—Ç—É—Ä—É –±–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –Ω–µ–π—Ä–æ–Ω–∞ –º–æ–∂–Ω–æ —É–ø—Ä–æ—Å—Ç–∏—Ç—å –¥–æ —Å–ª–µ–¥—É—é—â–µ–π: –¥–µ–Ω–¥—Ä–∏—Ç—ã, —Ç–µ–ª–æ –Ω–µ–π—Ä–æ–Ω–∞ –∏ –∞–∫—Å–æ–Ω. –î–µ–Ω–¥—Ä–∏—Ç—ã ‚Äî –≤–µ—Ç–≤—è—â–∏–µ—Å—è –æ—Ç—Ä–æ—Å—Ç–∫–∏, —Å–æ–±–∏—Ä–∞—é—â–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å–æ –≤—Ö–æ–¥–∞ –≤ –Ω–µ–π—Ä–æ–Ω (—ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤–Ω–µ—à–Ω—è—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å —Ä–µ—Ü–µ–ø—Ç–æ—Ä–æ–≤, –∏–ª–∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç –¥—Ä—É–≥–æ–≥–æ –Ω–µ–π—Ä–æ–Ω–∞). –í —Ç–æ–º —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –≤—Ö–æ–¥—è—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∞ –Ω–µ–π—Ä–æ–Ω (–≤ –±–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–º —Å–ª—É—á–∞–µ ‚Äî –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª —Å—Ç–∞–ª –≤—ã—à–µ –∫–∞–∫–æ–≥–æ-—Ç–æ –ø–æ—Ä–æ–≥–∞), —Ä–æ–∂–¥–∞–µ—Ç—Å—è –≤–æ–ª–Ω–∞ –≤–æ–∑–±—É–∂–¥–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–∞—è —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ—Ç—Å—è –ø–æ –º–µ–º–±—Ä–∞–Ω–µ —Ç–µ–ª–∞ –Ω–µ–π—Ä–æ–Ω–∞, –∞ –∑–∞—Ç–µ–º —á–µ—Ä–µ–∑ –∞–∫—Å–æ–Ω, –ø–æ—Å—Ä–µ–¥—Å—Ç–≤–æ–º –≤—ã–±—Ä–æ—Å–∞ –Ω–µ–π—Ä–æ–º–µ–¥–∏–∞—Ç–æ—Ä–∞, –ø–µ—Ä–µ–¥–∞–µ—Ç —Å–∏–≥–Ω–∞–ª –¥—Ä—É–≥–∏–º –Ω–µ—Ä–≤–Ω—ã–º –∫–ª–µ—Ç–∫–∞–º–∏ –∏–ª–∏ —Ç–∫–∞–Ω—è–º.&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2021/03/28/neiroseti-dlia-mikrokontrollerov-pertseptron/neuron.png" style="width:100%; display:block; border:1px solid #ddd;"&gt;&lt;/p&gt;
&lt;p&gt;–°–Ω–∞—á–∞–ª–∞ –±—É–¥–µ—Ç –Ω–µ–º–Ω–æ–≥–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏, –ø–æ—Ç–æ–º —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ –∫–æ–¥.&lt;/p&gt;
&lt;h2&gt;–¢–ï–û–†–ò–Ø&lt;/h2&gt;
&lt;p&gt;–£–æ—Ä—Ä–µ–Ω –ú–∞–∫-–ö–∞–ª–ª–æ–∫ –∏ –£–æ–ª—Ç–µ—Ä –ü–∏—Ç—Ç—Å –≤ 1943 –≥–æ–¥—É –ø—Ä–µ–¥–ª–æ–∂–∏–ª–∏ –º–æ–¥–µ–ª—å –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –Ω–µ–π—Ä–æ–Ω–∞. –ê –≤ 1958 –≥–æ–¥—É –§—Ä–µ–Ω–∫ –†–æ–∑–µ–Ω–±–ª–∞—Ç—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–µ–π—Ä–æ–Ω–∞ –ú–∞–∫-–ö–∞–ª–ª–æ–∫–∞-–ü–∏—Ç—Ç—Å–∞ —Å–æ–∑–¥–∞–ª –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É, –∞ –∑–∞—Ç–µ–º –∏ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ ‚Äî &lt;strong&gt;–ø–µ—Ä—Ü–µ–ø—Ç—Ä–æ–Ω&lt;/strong&gt;. –° —ç—Ç–æ–≥–æ –∏ –Ω–∞—á–∞–ª–∞—Å—å –∏—Å—Ç–æ—Ä–∏—è –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã—Ö –Ω–µ–π—Ä–æ–Ω–Ω—ã—Ö —Å–µ—Ç–µ–π. –¢–µ–ø–µ—Ä—å —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫—É—é –º–æ–¥–µ–ª—å –Ω–µ–π—Ä–æ–Ω–∞, —Å –∫–æ—Ç–æ—Ä—ã–º –º—ã –±—É–¥–µ–º –∏–º–µ—Ç—å –¥–µ–ª–æ –¥–∞–ª—å—à–µ. –ù–∞ –≤—Ö–æ–¥ –ø–æ–¥–∞—é—Ç—Å—è —á–∏—Å–ª–∞ (—Å–∏–≥–Ω–∞–ª—ã), –ø–æ—Å–ª–µ –æ–Ω–∏ —É–º–Ω–æ–∂–∞—é—Ç—Å—è –Ω–∞ –≤–µ—Å–∞ (–∫–∞–∂–¥—ã–π —Å–∏–≥–Ω–∞–ª ‚Äì –Ω–∞ —Å–≤–æ–π –≤–µ—Å) –∏ —Å—É–º–º–∏—Ä—É—é—Ç—Å—è. –ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É —Å—É–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω–æ–≥–¥–∞ –µ—â–µ –¥–æ–±–∞–≤–ª—è—é—Ç –∫–∞–∫—É—é-—Ç–æ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É —Å–º–µ—â–µ–Ω–∏—è (–¥–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è –Ω–∞ —Ä–∏—Å—É–Ω–∫–µ —Å–º–µ—â–µ–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç). –ó–∞—Ç–µ–º —Ñ—É–Ω–∫—Ü–∏—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≤—ã—Å—á–∏—Ç—ã–≤–∞–µ—Ç –≤—ã—Ö–æ–¥–Ω–æ–π —Å–∏–≥–Ω–∞–ª –∏ –ø–æ–¥–∞–µ—Ç –µ–≥–æ –Ω–∞ –≤—ã—Ö–æ–¥.&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2021/03/28/neiroseti-dlia-mikrokontrollerov-pertseptron/perceptron.png" style="width:100%; display:block; border:1px solid #ddd;"&gt;&lt;/p&gt;
&lt;p&gt;–ò–¥–µ—è —Ñ—É–Ω–∫—Ü–∏–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ç–∞–∫–∂–µ –≤–∑—è—Ç–∞ –∏–∑ –±–∏–æ–ª–æ–≥–∏–∏. –§—É–Ω–∫—Ü–∏—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –∏–ª–∏ –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å —Å–∏–≥–Ω–∞–ª–∞–º –æ—Ç –Ω–µ–π—Ä–æ–Ω–∞ –∫ –Ω–µ–π—Ä–æ–Ω–∞–º –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä—É—é –æ–Ω–∏ –ø–µ—Ä–µ–¥–∞—é—Ç. –¢.–µ. –µ—Å–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —è–≤–ª—è–µ—Ç—Å—è –≤–∞–∂–Ω–æ–π, —Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç –µ–µ, –∞ –µ—Å–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –º–∞–ª–æ –∏–ª–∏ –æ–Ω–∞ –Ω–µ–¥–æ—Å—Ç–æ–≤–µ—Ä–Ω–∞, —Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –Ω–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –µ–π –ø—Ä–æ–π—Ç–∏ –¥–∞–ª—å—à–µ.&lt;/p&gt;
&lt;p&gt;–§—É–Ω–∫—Ü–∏–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –±—ã–≤–∞—é—Ç –æ—á–µ–Ω—å —Ä–∞–∑–Ω—ã–µ, –≤—ã–±–æ—Ä –æ–±—É—Å–ª–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –æ–±–ª–∞—Å—Ç—å—é –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –ò–ù–° –∏ —è–≤–ª—è–µ—Ç—Å—è –≤–∞–∂–Ω–æ–π –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π –∑–∞–¥–∞—á–µ–π –¥–ª—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –ø–æ –º–∞—à–∏–Ω–Ω–æ–º—É –æ–±—É—á–µ–Ω–∏—é. –í–æ—Ç —Ç–∞–∫ –Ω–∞–ø—Ä–∏–º–µ—Ä –≤—ã–≥–ª—è–¥—è—Ç –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–∑ –Ω–∏—Ö:&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2021/03/28/neiroseti-dlia-mikrokontrollerov-pertseptron/activation.png" style="width:100%; display:block; border:1px solid #ddd;"&gt;&lt;/p&gt;
&lt;p&gt;–û—á–µ–≤–∏–¥–Ω–æ, —á—Ç–æ –≤ —Å–∞–º–æ–º –ø—Ä–æ—Å—Ç–æ–º —Å–ª—É—á–∞–µ –≤—Å—è –Ω–µ–π—Ä–æ—Å–µ—Ç—å –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∞ –æ–¥–Ω–∏–º –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–º –Ω–µ–π—Ä–æ–Ω–æ–º. –ü—Ä–∏ —ç—Ç–æ–º –¥–∞–∂–µ –æ–¥–∏–Ω –Ω–µ–π—Ä–æ–Ω —Ö–æ—Ä–æ—à–æ —Å–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å –∑–∞–¥–∞—á–µ–π  —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –∫–ª–∞—Å—Å–∞ –æ–±—ä–µ–∫—Ç–∞ –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ, –≤ –∫–æ—Ç–æ—Ä–æ–º –æ–±—ä–µ–∫—Ç—ã —ç—Ç–∏—Ö –∫–ª–∞—Å—Å–æ–≤ —è–≤–ª—è—é—Ç—Å—è –ª–∏–Ω–µ–π–Ω–æ —Å–µ–ø–∞—Ä–∞–±–µ–ª—å–Ω—ã–º–∏. –ü—Ä–æ—Å—Ç—ã–º –ø—Ä–∏–º–µ—Ä–æ–º –ª–∏–Ω–µ–π–Ω–æ–π —Å–µ–ø–∞—Ä–∞–±–µ–ª—å–Ω–æ—Å—Ç–∏ —è–≤–ª—è—é—Ç—Å—è –±—É–ª–µ–≤—ã —Ñ—É–Ω–∫—Ü–∏–∏ OR –∏ AND, –¥–ª—è —Ç–∞–∫–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π –≤—Å–µ–≥–¥–∞ –º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ –ø—Ä—è–º—É—é (–∏–ª–∏ –≥–∏–ø–µ—Ä–ø–ª–æ—Å–∫–æ—Å—Ç—å –≤ –º–Ω–æ–≥–æ–º–µ—Ä–Ω–æ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ), –æ—Ç–¥–µ–ª—è—é—â—É—é 0 –∑–Ω–∞—á–µ–Ω–∏—è –æ—Ç 1. –ê –≤–æ—Ç —Å —Ñ—É–Ω–∫—Ü–∏–µ–π XOR –¥–µ–ª–∞ –æ–±—Å—Ç–æ—è—Ç –Ω–µ–º–Ω–æ–≥–æ —Å–ª–æ–∂–Ω–µ–µ –∏ —Å–µ—Ç—å –∏–∑ –æ–¥–Ω–æ–≥–æ –Ω–µ–π—Ä–æ–Ω–∞ —Å —Ç–∞–∫–æ–π –∑–∞–¥–∞—á–µ–π —É–≤—ã –Ω–µ —Å–ø—Ä–∞–≤–∏—Ç—Å—è.&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2021/03/28/neiroseti-dlia-mikrokontrollerov-pertseptron/or_xor.png" style="width:100%; display:block; border:1px solid #ddd;"&gt;&lt;/p&gt;
&lt;p&gt;–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ –æ–¥–Ω—É –ø—Ä—è–º—É—é —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —á—Ç–æ–±—ã —Ä–∞–∑–¥–µ–ª–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –∏—Å–∫–ª—é—á–∞—é—â–µ–≥–æ –ò–õ–ò. –ö —Å—á–∞—Å—Ç—å—é, —Ä–µ—à–µ–Ω–∏–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–æ—Å—Ç–æ–µ. –î–ª—è —ç—Ç–æ–≥–æ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –Ω–µ–π—Ä–æ–Ω–Ω—ã—Ö —Å–µ—Ç–µ–π, —Å–æ—Å—Ç–æ—è—â–∏–µ –∏–∑ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ —Ç–∞–∫–∏—Ö –Ω–µ–π—Ä–æ–Ω–æ–≤, –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã—Ö –≤ —Å–ª–æ–∏. –¢–∞–∫–∏–µ –º–Ω–æ–≥–æ—Å–ª–æ–π–Ω—ã–µ —Å–µ—Ç–∏ –µ—â–µ –Ω–∞–∑—ã–≤–∞—é—Ç –≥–ª—É–±–æ–∫–∏–º–∏. –ò–º –ø–æ–¥ —Å–∏–ª—É —Ä–µ—à–∞—Ç—å —Å–ª–æ–∂–Ω—ã–µ –∑–∞–¥–∞—á–∏, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ –Ω–µ –º–æ–∂–µ—Ç —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è –ø–µ—Ä—Ü–µ–ø—Ç—Ä–æ–Ω. –í —á–∞—Å—Ç–Ω–æ—Å—Ç–∏, –ª–∏–Ω–µ–π–Ω–æ –Ω–µ—Ä–∞–∑–¥–µ–ª–∏–º—ã–µ –∑–∞–¥–∞—á–∏. –ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏ &lt;strong&gt;–º–Ω–æ–≥–æ—Å–ª–æ–π–Ω—ã–π –ø–µ—Ä—Ü–µ–ø—Ç—Ä–æ–Ω&lt;/strong&gt; —Å –æ–¥–Ω–∏–º —Å–∫—Ä—ã—Ç—ã–º —Å–ª–æ–µ–º –≤—ã–≥–ª—è–¥–∏—Ç –≤–æ—Ç —Ç–∞–∫:&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2021/03/28/neiroseti-dlia-mikrokontrollerov-pertseptron/dog_cat.gif" style="width:100%; display:block; border:1px solid #ddd;"&gt;&lt;/p&gt;
&lt;p&gt;–ü–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ –ø—Ä–∞–∫—Ç–∏–∫–µ –ø–∞—Ä—É —Å–ª–æ–≤ –æ —Ç–æ–º –∫–∞–∫ –æ–±—É—á–∏—Ç—å –Ω–µ–π—Ä–æ—Å–µ—Ç—å. –ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–æ–¥–æ–±—Ä–∞—Ç—å –≤–µ—Å–∞ –¥–ª—è –Ω–µ–π—Ä–æ–Ω–æ–≤ —Ç–∞–∫, —á—Ç–æ–±—ã –æ—à–∏–±–∫–∞ –Ω–∞ –≤—ã—Ö–æ–¥–µ –±—ã–ª–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π ? –û–±—ã—á–Ω–æ –≤–µ—Å–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—Ç—Å—è —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º. –í –ø—Ä–æ—Ü–µ—Å—Å–µ –æ–±—É—á–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –≤–µ—Å–æ–≤ –º–µ–Ω—è—é—Ç—Å—è. –ù–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ —Å–µ–π—á–∞—Å –Ω–∞–∏–±–æ–ª–µ–µ —á–∞—Å—Ç–æ –ø—Ä–∏–º–µ–Ω—è—é—Ç –º–µ—Ç–æ–¥ –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω–æ–≥–æ —Å–ø—É—Å–∫–∞ –∏ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –æ—à–∏–±–∫–∏. –ú–Ω–æ–∂–µ—Å—Ç–≤–æ –±–∏–±–ª–∏–æ—Ç–µ–∫ –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è –Ω–∞–ø—Ä–∏–º–µ—Ä Tensorflow, Pytorch –∏ –¥—Ä. –¥–∞—é—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å –ª–µ–≥–∫–æ—Å—Ç—å—é —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ —ç—Ç–∏–º –º–µ—Ç–æ–¥–æ–º, –Ω–µ –≤–¥–∞–≤–∞—è—Å—å –≤ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –µ–≥–æ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏. –ì—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–π —Å–ø—É—Å–∫ ‚Äî –º–µ—Ç–æ–¥ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ –æ—à–∏–±–∫–∏ (—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ –≤–∏–¥–æ–≤ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏). –ú–∏–Ω–∏–º–∏–∑–∞—Ü–∏—è –ª—é–±–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –æ–∑–Ω–∞—á–∞–µ—Ç –ø–æ–∏—Å–∫ —Å–∞–º–æ–π –≥–ª—É–±–æ–∫–æ–π –≤–ø–∞–¥–∏–Ω—ã –≤ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2021/03/28/neiroseti-dlia-mikrokontrollerov-pertseptron/gradient.gif" style="width:100%; display:block; border:1px solid #ddd; padding: 10px 0;"&gt;&lt;/p&gt;
&lt;p&gt;–ò—Ç–∞–∫ —É –Ω–∞—Å –µ—Å—Ç—å –∏—Å—Ö–æ–¥–Ω—ã–µ –º–∞—Ç—Ä–∏—Ü—ã –≤–µ—Å–æ–≤, –º—ã —Ö–æ—Ç–∏–º –≤–Ω–µ—Å—Ç–∏ –≤ –Ω–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –¥–µ–ª–∞—é—Ç –Ω–∞—à—É –º–æ–¥–µ–ª—å –ª—É—á—à–µ, —É–º–µ–Ω—å—à–∞—é—Ç –æ—à–∏–±–∫—É. –ï—â–µ —É –Ω–∞—Å –µ—Å—Ç—å –Ω–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±—É—á–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–π —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö, –∏ —Ç–æ–≥–æ —á—Ç–æ –º—ã —Ö–æ—Ç–∏–º –ø–æ–ª—É—á–∞—Ç—å –Ω–∞ –≤—ã—Ö–æ–¥–µ –Ω–µ–π—Ä–æ–Ω–Ω–æ–π —Å–µ—Ç–∏. –¢–∞–∫–∂–µ –µ—Å—Ç—å –Ω–µ–∫–∞—è —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —á–∏—Å–ª–µ–Ω–Ω–æ–π –æ—Ü–µ–Ω–∫–∏ –æ—à–∏–±–∫–∏ –Ω–∞ –≤—ã—Ö–æ–¥–µ. –ï—Å–ª–∏ –±—É–¥–µ—Ç –∏–∑–≤–µ—Å—Ç–Ω–æ, –Ω–∞—Å–∫–æ–ª—å–∫–æ –≤–ª–∏—è—é—Ç –≤–µ—Å–∞ –Ω–∞ —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é, —Ç–æ –±—É–¥–µ—Ç –∏–∑–≤–µ—Å—Ç–Ω–æ, –Ω–∞—Å–∫–æ–ª—å–∫–æ –∏—Ö –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å. –¢—É—Ç –Ω–∞–º –ø–æ–º–æ–∂–µ—Ç —á–∞—Å—Ç–Ω–∞—è &lt;a href="https://mazko.github.io/blog/posts/2016/11/30/ngspicejs-analogovye-integrator-i-differentsiator/"&gt;–ø—Ä–æ–∏–∑–≤–æ–¥–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏–∏&lt;/a&gt; –æ—à–∏–±–∫–∏ ‚Äî –≥—Ä–∞–¥–∏–µ–Ω—Ç. –ü—Ä–æ–∏–∑–≤–æ–¥–Ω–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫—Ä—É—Ç–∏–∑–Ω—É –∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–∏ –∑–∞–¥–∞–Ω–Ω–æ–º –∞—Ä–≥—É–º–µ–Ω—Ç–µ. –ï—Å–ª–∏ —á–∞—Å—Ç–Ω–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–Ω–∞—è –∏–∑–≤–µ—Å—Ç–Ω–∞, –º–æ–∂–Ω–æ –ø—Ä–∏—Å—Ç—É–ø–∞—Ç—å –∫ –æ–±—É—á–µ–Ω–∏—é —Å–µ—Ç–∏, –∫–æ—Ç–æ—Ä–æ–µ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –¥–≤—É—Ö —à–∞–≥–æ–≤:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;–ø—Ä—è–º–æ–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ ‚Äî –æ–±—É—á–∞—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–¥–∞—é—Ç—Å—è –Ω–∞ –≤—Ö–æ–¥ —Å–µ—Ç–∏, –ø—Ä–æ—Ö–æ–¥—è—Ç —á–µ—Ä–µ–∑ –≤—Å–µ –≤–µ—Å–∞, —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å—Ä–∞–≤–Ω–∏–≤–∞—é—Ç—Å—è —Å –∂–µ–ª–∞–µ–º—ã–º–∏ —Ü–µ–ª–µ–≤—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏–º–∏ –∏ —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –≤—ã—á–∏—Å–ª—è–µ—Ç—Å—è —Ç–µ–∫—É—â–∞—è –æ—à–∏–±–∫–∞ —Å–µ—Ç–∏&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;–æ–±—Ä–∞—Ç–Ω–æ–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ ‚Äî –∑–Ω–∞—è –≤–µ–ª–∏—á–∏–Ω—É –æ—à–∏–±–∫–∏ —Å–µ—Ç–∏ –∏ —á–∞—Å—Ç–Ω—É—é –ø—Ä–æ–∏–∑–≤–æ–¥–Ω—É—é, –∫–æ—Ç–æ—Ä–∞—è  –≤—ã—á–∏—Å–ª—è–µ—Ç—Å—è –ø–æ –∫–∞–∂–¥–æ–º—É –≤–µ—Å—É, –≤–µ—Å–∞ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É—é—Ç—Å—è —Å —É—á–µ—Ç–æ–º –Ω–µ–∫–æ–µ–≥–æ –Ω–µ–±–æ–ª—å—à–æ–≥–æ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞ –Ω–∞—á–∏–Ω–∞—è —Å –≤–µ—Å–æ–≤ –≤—ã—Ö–æ–¥–Ω—ã—Ö –Ω–µ–π—Ä–æ–Ω–æ–≤&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;–ü–æ–≤—Ç–æ—Ä—è—Ç—å —ç—Ç–∏ —à–∞–≥–∏ –Ω—É–∂–Ω–æ –∏—Ç–µ—Ä–∞—Ç–∏–≤–Ω–æ, –¥–æ —Ç–µ—Ö –ø–æ—Ä –ø–æ–∫–∞ –æ—à–∏–±–∫–∞ –Ω–µ –ø–µ—Ä–µ—Å—Ç–∞–Ω–µ—Ç —É–º–µ–Ω—å—à–∞—Ç—å—Å—è. –î–≤–∏–≥–∞—è—Å—å –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é –≥—Ä–∞–¥–∏–µ–Ω—Ç–∞ –º—ã –±—É–¥–µ–º –ø–ª–∞–≤–Ω–æ —Å–∫–∞—Ç—ã–≤–∞—Ç—å—Å—è –≤ –Ω–∏–∑–∏–Ω—É, –∞ –¥–∏–Ω–∞–º–∏–∫–∞ –æ–±—É—á–µ–Ω–∏—è –Ω–µ–π—Ä–æ–Ω–Ω–æ–π —Å–µ—Ç–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–µ—Ç —à–∞—Ä–∏–∫, –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ —Å–∫–∞—Ç—ã–≤–∞—é—â–∏–π—Å—è –≤ –ª–æ–∫–∞–ª—å–Ω—ã–π –º–∏–Ω–∏–º—É–º.&lt;/p&gt;
&lt;h2&gt;–ü–†–ê–ö–¢–ò–ö–ê&lt;/h2&gt;
&lt;p&gt;–¢—É—Ç –º—ã –æ–±—É—á–∏–º –º–Ω–æ–≥–æ—Å–ª–æ–π–Ω—ã–π –ø–µ—Ä—Ü–µ–ø—Ç—Ä–æ–Ω –≤—ã–ø–æ–ª–Ω—è—Ç—å —Ñ—É–Ω–∫—Ü–∏—é XOR. –û–±—É—á–∞—Ç—å –±—É–¥–µ–º –≤ Tensorflow (–Ω–µ –ø—Ä–∏–Ω—Ü–∏–ø–∏–∞–ª—å–Ω–æ, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª—é–±—É—é –¥—Ä—É–≥—É—é –±–∏–±–ª–∏–æ—Ç–µ–∫—É –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è). –û–±—É—á–µ–Ω–Ω—É—é –º–æ–¥–µ–ª—å —Ä–∞–∑–≤–µ—Ä–Ω–µ–º –Ω–∞ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–µ —Å &lt;a href="https://mazko.github.io/blog/posts/2017/03/20/s-18-dlia-mikrokontrollerov-razvedka-boem/"&gt;C++&lt;/a&gt; –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä–æ–º.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://mazko.github.io/MSP430.js/4f2e6920a7b5c509b539485319ae0fdb"&gt;MSP430.js&lt;/a&gt; | &lt;a href="https://mazko.github.io/blog/posts/2021/03/28/neiroseti-dlia-mikrokontrollerov-pertseptron/xor.html"&gt;–Ω–æ—É—Ç–±—É–∫&lt;/a&gt; | &lt;a href="https://mazko.github.io/blog/posts/2021/03/28/neiroseti-dlia-mikrokontrollerov-pertseptron/uxor.zip"&gt;–∏—Å—Ö–æ–¥–Ω–∏–∫–∏&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2021/03/28/neiroseti-dlia-mikrokontrollerov-pertseptron/ui.gif" style="width:55%; margin: 0 auto; display:block;"&gt;&lt;/p&gt;
&lt;p&gt;–ß—Ç–æ–±—ã –æ–±—É—á–∏—Ç—å –Ω–µ–π—Ä–æ–Ω–Ω—É—é —Å–µ—Ç—å, –Ω–∞–º –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –∏—Å—Ö–æ–¥–Ω—ã–π –Ω–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö, –≤ –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ —ç—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ –∏—Å—Ç–∏–Ω–Ω–æ—Å—Ç–∏ –∏—Å–∫–ª—é—á–∞—é—â–µ–≥–æ –∏–ª–∏:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;
&lt;span class="n"&gt;Y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–¢–∞–∫–∂–µ –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –º–æ–¥–µ–ª—å –Ω–µ–π—Ä–æ–Ω–Ω–æ–π —Å–µ—Ç–∏. –ü—É—Å—Ç—å —ç—Ç–æ –±—É–¥–µ—Ç –ø–µ—Ä—Ü–µ–ø—Ç—Ä–æ–Ω —Å –æ–¥–Ω–∏–º —Å–∫—Ä—ã—Ç—ã–º —Å–ª–æ–µ–º –∏–∑ —Ç—Ä–µ—Ö –Ω–µ–π—Ä–æ–Ω–æ–≤. –§—É–Ω–∫—Ü–∏—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Å–∫—Ä—ã—Ç–æ–≥–æ —Å–ª–æ—è Relu. –í—ã—Ö–æ–¥–Ω–æ–π —Å–ª–æ–π —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –æ–¥–Ω–æ–≥–æ –Ω–µ–π—Ä–æ–Ω–∞ —Å —Ñ—É–Ω–∫—Ü–∏–µ–π –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ Sigmoid. –î–≤–∞ –≤—Ö–æ–¥–∞:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x_in&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;keras&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;keras&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;layers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Dense&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;activation&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;relu&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                       &lt;span class="n"&gt;kernel_regularizer&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;l2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                       &lt;span class="n"&gt;bias_regularizer&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;l2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;keras&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;layers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Dense&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;activation&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sigmoid&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;keras&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inputs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;x_in&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;outputs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–¢–µ–ø–µ—Ä—å –Ω—É–∂–Ω–æ —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞—Ç—å –Ω–∞—à—É –º–æ–¥–µ–ª—å, —Ç–æ –µ—Å—Ç—å, –ø–æ —Å—É—â–µ—Å—Ç–≤—É, –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –µ–µ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è. –ë—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–ø—Ç–∏–º–∏–∑–∞—Ç–æ—Ä Adam. –û–ø—Ç–∏–º–∏–∑–∞—Ç–æ—Ä ‚Äî —ç—Ç–æ –∞–ª–≥–æ—Ä–∏—Ç–º, –∫–æ—Ç–æ—Ä—ã–π –∏–∑–º–µ–Ω—è–µ—Ç –≤–µ—Å–∞ –∏ —Å–º–µ—â–µ–Ω–∏—è –≤–æ –≤—Ä–µ–º—è –æ–±—É—á–µ–Ω–∏—è. –í –∫–∞—á–µ—Å—Ç–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—à–∏–±–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ä–µ–¥–Ω–µ–∫–≤–∞–¥—Ä–∞—Ç–∏—á–µ—Å–∫—É—é –æ—à–∏–±–∫—É MSE(mean squared error). –í –Ω–µ–π—Ä–æ–Ω–Ω—ã–π —Å–µ—Ç—è—Ö —Ñ—É–Ω–∫—Ü–∏—é –æ—à–∏–±–∫–∏ —á–∞—Å—Ç–æ –Ω–∞–∑—ã–≤–∞—é—Ç —Ñ—É–Ω–∫—Ü–∏–µ–π –ø–æ—Ç–µ—Ä—å:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;mse&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;optimizer&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;adam&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –æ–±—É—á–∏—Ç—å –Ω–∞—à—É –º–æ–¥–µ–ª—å. –û–±—É—á–µ–Ω–∏–µ –∑–∞–Ω–∏–º–∞–µ—Ç –∫–∞–∫–æ–µ-—Ç–æ –≤—Ä–µ–º—è, –∫–æ—Ç–æ—Ä–æ–µ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ —Å–µ—Ç–∏ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –æ–±—É—á–∞—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö. –í –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ —Å–µ—Ç—å –∫—Ä–æ—à–µ—á–Ω–∞—è, –º–æ–∂–Ω–æ –æ–±—É—á–∞—Ç—å –Ω–∞ –ª—é–±–æ–º –∫–æ–º–ø—å—é—Ç–µ—Ä–µ. –ë–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–µ —Å–µ—Ç–∏ —Ü–µ–ª–µ—Å–æ–æ–±—Ä–∞–∑–Ω–µ–π –æ–±—É—á–∞—Ç—å –Ω–∞ —Ö–æ—Ä–æ—à–∏—Ö –≤–∏–¥–µ–æ–∫–∞—Ä—Ç–∞—Ö. –ú–µ—Ç–æ–¥ fit –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ø–æ—Ö. –≠–ø–æ—Ö–∞ ‚Äî —ç—Ç–æ –æ–¥–∏–Ω –ø—Ä–æ—Ö–æ–¥ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–∞—Ç–∞—Å–µ—Ç–∞. –° –∫–∞–∂–¥–æ–π —ç–ø–æ—Ö–æ–π –æ–±—É—á–µ–Ω–∏—è –æ—à–∏–±–∫–∞ –¥–æ–ª–∂–Ω–∞ –ø–∞–¥–∞—Ç—å –≤–ø–ª–æ—Ç—å –¥–æ –∫–∞–∫–æ–≥–æ-—Ç–æ —Ä–∞–∑—É–º–Ω–æ–≥–æ –ø—Ä–µ–¥–µ–ª–∞.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;epochs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;verbose&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ü–æ—Å–ª–µ –æ–±—É—á–µ–Ω–∏—è —Å–µ—Ç—å—é —É–∂–µ –º–æ–∂–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è. –¢–∞–∫ –∫–∞–∫ –ø–æ-—É–º–æ–ª—á–∞–Ω–∏—é –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–µ–π—Ä–æ–Ω–Ω–æ–π —Å–µ—Ç–∏ –µ—ë –≤–µ—Å–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—Ç—Å—è —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º, —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –Ω–æ–≤–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è –±—É–¥—É—Ç –Ω–µ–º–Ω–æ–≥–æ –æ—Ç–ª–∏—á–∞—Ç—å—Å—è –æ—Ç –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã—Ö –Ω–∏–∂–µ:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;predict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–†–µ–∑—É–ª—å—Ç–∞—Ç:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;array(
  [[0.01152042],
   [0.98572624],
   [0.99311346],
   [0.00970006]], dtype=float32)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–¢–µ–ø–µ—Ä—å –Ω–µ–º–Ω–æ–∂–∫–æ –ª–∏–Ω–µ–π–Ω–æ–π –∞–ª–≥–µ–±—Ä—ã. –í —á–∞—Å—Ç–Ω–æ—Å—Ç–∏ –Ω–µ–ø–ª–æ—Ö–æ –±—ã –≤—Å–ø–æ–º–Ω–∏—Ç—å —á—Ç–æ —Ç–∞–º –Ω–∞–º –≤ –∏–Ω—Å—Ç–∏—Ç—É—Ç–µ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–ª–∏ –ø—Ä–æ –º–∞—Ç—Ä–∏—Ü—ã. –î–ª—è –Ω–∞—á–∞–ª–∞ –≤—ã–≤–µ–¥–µ–º –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –≤–µ—Å–æ–≤ –Ω–∞ —ç–∫—Ä–∞–Ω.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;layers&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_weights&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;arr2str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;[&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;]&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;, &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%0.9g&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_weights&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;W{} = {}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;[&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;]&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;, &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr2str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;B{} = {}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arr2str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–†–µ–∑—É–ª—å—Ç–∞—Ç:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;W1 = [[-0.100219101, 0.0986418799, 0.0540673025], [-0.101571321, 0.055912815, -0.0540193357]]
B1 = [0.101785883, -0.0555998087, -7.84907461e-05]
W2 = [[-85.8035507], [-90.0149384], [87.0291138]]
B2 = [4.28154087]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–£ –Ω–∞—Å –¥–≤–∞ —Å–ª–æ—è —Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º–∏ –≤–µ—Å–∞–º–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∏–∑ –Ω–∏—Ö –ø–ª—é—Å —Å–º–µ—â–µ–Ω–∏–µ. –ß—Ç–æ–±—ã –ª—É—á—à–µ –ø–æ–Ω–∏–º–∞—Ç—å –º–∞—Ç–µ–º–∞—Ç–∏–∫—É –≤–Ω—É—Ç—Ä–∏ –ø–µ—Ä—Ü–µ–ø—Ç—Ä–æ–Ω–∞ –¥–∞–≤–∞–π—Ç–µ –æ—Ç–≤—è–∂–µ–º—Å—è –æ—Ç Tensorflow –∏ –≤—ã—á–∏—Å–ª–∏–º –≤—Å–µ —Ç–æ –∂–µ —Å–∞–º–æ–µ –∏—Å—Ö–æ–¥—è –∏–∑ —É–∂–µ –∏–º–µ—é—â–∏—Ö—Å—è —É –Ω–∞—Å –≤–µ—Å–æ–≤:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="c1"&gt;# First layer calculation&lt;/span&gt;
  &lt;span class="n"&gt;L1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;W1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;B1&lt;/span&gt;
  &lt;span class="c1"&gt;# Relu activation function&lt;/span&gt;
  &lt;span class="n"&gt;X2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;maximum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;L1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="c1"&gt;# Second layer calculation&lt;/span&gt;
  &lt;span class="n"&gt;L2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;W2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;B2&lt;/span&gt;
  &lt;span class="c1"&gt;# Sigmoid&lt;/span&gt;
  &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;L2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–†–µ–∑—É–ª—å—Ç–∞—Ç:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[0.01152039]&lt;/span&gt;
&lt;span class="k"&gt;[0.98572624]&lt;/span&gt;
&lt;span class="k"&gt;[0.99311345]&lt;/span&gt;
&lt;span class="k"&gt;[0.00970005]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ö–∞–∫ –≤–∏–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–≤–ø–∞–ª —Å —Ç–µ–º, —á—Ç–æ –≤—ã–¥–∞–µ—Ç –º–µ—Ç–æ–¥ predict –≤ –Ω–∞—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –Ω–∞–º–∏ —Å–µ—Ç–∏. –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –≤—ã—Ö–æ–¥–∞ —Å–ª–æ—è –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –≤ —É–º–Ω–æ–∂–µ–Ω–∏–∏ –≤—Ö–æ–¥–Ω–æ–≥–æ –≤–µ–∫—Ç–æ—Ä–∞ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –≤–µ—Å–æ–≤—É—é –º–∞—Ç—Ä–∏—Ü—É, –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É –ø—Ä–∏–±–∞–≤–ª—è–µ—Ç—Å—è —Å–º–µ—â–µ–Ω–∏–µ. –ó–∞—Ç–µ–º –∏–¥–µ—Ç –∞–∫—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è. –†–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–∏–π –≤–µ–∫—Ç–æ—Ä —É–º–Ω–æ–∂–∞–µ—Ç—Å—è –Ω–∞ –≤—Ç–æ—Ä—É—é –≤–µ—Å–æ–≤—É—é –º–∞—Ç—Ä–∏—Ü—É –∏ —Ç.–¥.&lt;/p&gt;
&lt;p&gt;–î—É–º–∞—é –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞ —è—Å–Ω–∞ :) –¢–µ–ø–µ—Ä—å –ø—Ä–æ–≤–µ—Ä–Ω–µ–º —Ç–æ –∂–µ —Å–∞–º–æ–µ, –Ω–æ –¥–ª—è –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;nn.h&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;cmath&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;array&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;nn&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;size_t&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;size_t&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;size_t&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;size_t&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;size_t&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;size_t&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;dot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;size_t&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;at&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;at&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;at&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;at&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;at&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;size_t&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;relu&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="n"&gt;zero&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;size_t&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;at&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;at&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;zero&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;size_t&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;size_t&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;at&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;at&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;at&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;size_t&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;sigmoid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="n"&gt;one&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;size_t&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;at&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;one&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;one&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;at&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;// namespace&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;app.cpp&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;float32.hpp&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;nn.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;draw.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="n"&gt;flt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;float32&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="nf"&gt;inference&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;flt&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;x1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;flt&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;x2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;flt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;W1&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.100219101&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.0986418799&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.0540673025&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.101571321&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.055912815&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.0540193357&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;flt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;B1&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="mf"&gt;0.101785883&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.0555998087&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;7.84907461e-05&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;flt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;W2&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;85.8035507&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;90.0149384&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;87.0291138&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;flt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;B2&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="mf"&gt;4.28154087&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="c1"&gt;// Inputs&lt;/span&gt;
  &lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;flt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;x1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x2&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="c1"&gt;// First layer has 3 units&lt;/span&gt;
  &lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;flt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;L1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;dot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;W1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;L1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;B1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;L1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;relu&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;L1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="c1"&gt;// Second layer has 1 unit&lt;/span&gt;
  &lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;flt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;L2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;dot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;W2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;L1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;L2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;B2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;L2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;sigmoid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;L2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;L2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;at&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;flt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;PAGE_0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inference&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;flt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;PAGE_2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inference&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;flt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;PAGE_4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inference&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;flt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;PAGE_6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inference&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ —Å–ª–æ–∂–Ω—ã—Ö –Ω–µ–π—Ä–æ–Ω–Ω—ã—Ö —Å–µ—Ç–µ–π –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å –±–æ–ª—å—à–∏—Ö –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã—Ö –º–æ—â–Ω–æ—Å—Ç–µ–π. –ó–¥–µ—Å—å –Ω–∞ –ø–æ–º–æ—â—å –ø—Ä–∏—Ö–æ–¥—è—Ç –≥–æ—Ç–æ–≤—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–ª—è –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è —Ç–∞–∫–∏–µ –∫–∞–∫ Tensorflow. –° –∏—Ö –ø–æ–º–æ—â—å—é –º–æ–∂–Ω–æ –æ–±—É—á–∞—Ç—å –Ω–µ–π—Ä–æ–Ω–Ω—ã–µ —Å–µ—Ç–∏ –Ω–∞ –≤–∏–¥–µ–æ–∫–∞—Ä—Ç–∞—Ö, –≤ –æ–±–ª–∞–∫–µ, –∏ –¥–∞–∂–µ –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –∫–ª–∞—Å—Ç–µ—Ä–∞—Ö, —Å–æ—Å—Ç–æ—è—â–∏—Ö –∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã—Ö –µ–¥–∏–Ω–∏—Ü. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–±—É—á–µ–Ω–Ω—É—é –º–æ–¥–µ–ª—å –º–æ–∂–Ω–æ –Ω–∞ –≥–¥–µ-—É–≥–æ–¥–Ω–æ, –¥–∞–∂–µ –Ω–∞ –æ—á–µ–Ω—å —Å–ª–∞–±—ã—Ö –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞—Ö.&lt;/p&gt;</content><category term="msp430"></category><category term="ai"></category></entry><entry><title>–ú–∏–≥–∞–µ–º —Å–≤–µ—Ç–æ–¥–∏–æ–¥–æ–º –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é | cron</title><link href="https://mazko.github.io/blog/posts/2019/07/28/migaem-svetodiodom-po-raspisaniiu-cron/" rel="alternate"></link><published>2019-07-28T00:00:00+03:00</published><updated>2019-07-28T00:00:00+03:00</updated><author><name>Oleg Mazko</name></author><id>tag:mazko.github.io,2019-07-28:/blog/posts/2019/07/28/migaem-svetodiodom-po-raspisaniiu-cron/</id><summary type="html">&lt;p&gt;–ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ä–µ–≥—É–ª—è—Ä–Ω–æ –≤—ã–ø–æ–ª–Ω—è–µ–º—ã–µ –∑–∞–¥–∞—á–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ–º, –æ—Ç–æ–ø–ª–µ–Ω–∏–µ–º, –ø–æ–ª–∏–≤–æ–º –∏ —Ç.–ø, –æ—Ç–Ω–∏–º–∞—é—Ç —É –Ω–∞—Å –¥–æ–≤–æ–ª—å–Ω–æ –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å –≥–æ—Ä–∞–∑–¥–æ –±–æ–ª—å—à–µ–π –ø–æ–ª—å–∑–æ–π. –ò–º–µ—è –≤ —Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏–∏ –∫–∞–∫–æ–π-–Ω–∏–±—É–¥—å –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä —Å–æ–≤—Å–µ–º –Ω–µ—Ç—Ä—É–¥–Ω–æ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞—á, –ø—Ä–∏—á–µ–º –¥–µ–ª–∞—Ç—å –≤ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ –¥–ª—è —Ä–∞–±–æ—Ç—ã –≤—Ä–µ–º—è. –ú–æ–∂–Ω–æ –Ω–∞–ø—Ä–∏–º–µ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–∫–ª—é—á–∞—Ç—å —Å–≤–µ—Ç –¥–Ω—ë–º ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;–ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ä–µ–≥—É–ª—è—Ä–Ω–æ –≤—ã–ø–æ–ª–Ω—è–µ–º—ã–µ –∑–∞–¥–∞—á–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ–º, –æ—Ç–æ–ø–ª–µ–Ω–∏–µ–º, –ø–æ–ª–∏–≤–æ–º –∏ —Ç.–ø, –æ—Ç–Ω–∏–º–∞—é—Ç —É –Ω–∞—Å –¥–æ–≤–æ–ª—å–Ω–æ –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å –≥–æ—Ä–∞–∑–¥–æ –±–æ–ª—å—à–µ–π –ø–æ–ª—å–∑–æ–π. –ò–º–µ—è –≤ —Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏–∏ –∫–∞–∫–æ–π-–Ω–∏–±—É–¥—å –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä —Å–æ–≤—Å–µ–º –Ω–µ—Ç—Ä—É–¥–Ω–æ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞—á, –ø—Ä–∏—á–µ–º –¥–µ–ª–∞—Ç—å –≤ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ –¥–ª—è —Ä–∞–±–æ—Ç—ã –≤—Ä–µ–º—è. –ú–æ–∂–Ω–æ –Ω–∞–ø—Ä–∏–º–µ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–∫–ª—é—á–∞—Ç—å —Å–≤–µ—Ç –¥–Ω—ë–º, –æ—Ç–æ–ø–ª–µ–Ω–∏–µ –≤ –ª–µ—Ç–Ω–∏–µ –º–µ—Å—è—Ü—ã –∏ –¥–∞–∂–µ –≤ –∑–∏–º–Ω–∏–µ.&lt;/p&gt;
&lt;p&gt;–õ—é–±–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å Linux –∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å —Å–ª—ã—à–∞–ª –æ &lt;strong&gt;cron&lt;/strong&gt; ‚Äì —Å–µ—Ä–≤–∏—Å–µ (–¥–µ–º–æ–Ω–µ), –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è –∑–∞–¥–∞–Ω–∏–π –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é, –∑–∞–¥–∞–≤–∞–µ–º–æ–≥–æ –ø–æ –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω–æ–º—É –≤—Ä–µ–º–µ–Ω–∏. –ü—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω —Ç–∞–∫–∂–µ –Ω–µ–æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω—ã–π –∑–∞–ø—É—Å–∫ –∑–∞–¥–∞–Ω–∏–π, —Ç.–µ. –∑–∞–¥–∞–Ω–∏–µ –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è –∏–ª–∏ —á–µ—Ä–µ–∑ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –≤—Ä–µ–º–µ–Ω–∏. –î–µ–º–æ–Ω –∏–º–µ–µ—Ç –ø—Ä–æ—Å—Ç–æ–π, –ø–æ–Ω—è—Ç–Ω—ã–π –∏ —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω–æ –≥–∏–±–∫–∏–π –¥–ª—è —Å–≤–æ–µ–π –∫–æ–º–ø–∞–∫—Ç–Ω–æ—Å—Ç–∏ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å, –∫–æ—Ç–æ—Ä—ã–π –¥–µ-—Ñ–∞–∫—Ç–æ —è–≤–ª—è–µ—Ç—Å—è —Å–≤–æ–µ–≥–æ —Ä–æ–¥–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–æ–º –≤ –º–∏—Ä–µ Unix –∏ –∫–∞–∫ —Å–ª–µ–¥—Å—Ç–≤–∏–µ –±–æ–ª—å—à–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—É—á–∞—é—â–∏—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏. –ë—ã–ª–æ –±—ã –∑–¥–æ—Ä–æ–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–∞–∫–æ–π –∂–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –ø—Ä–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ –∑–∞–¥–∞—á –≤ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–µ, —á—Ç–æ–±—ã –Ω–µ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è –∏–∑–æ–±—Ä–µ—Ç–µ–Ω–∏–µ–º —Å–≤–æ–µ–≥–æ –≤–µ–ª–æ—Å–∏–ø–µ–¥–∞.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://mazko.github.io/MSP430.js/2aee8afe021c316e992d771bbde8e14c"&gt;MSP430.js&lt;/a&gt; | &lt;a href="https://mazko.github.io/blog/posts/2019/07/28/migaem-svetodiodom-po-raspisaniiu-cron/emcron.zip"&gt;–∏—Å—Ö–æ–¥–Ω–∏–∫–∏&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2019/07/28/migaem-svetodiodom-po-raspisaniiu-cron/ui.gif" style="width:50%; margin: 0 auto; display:block;"&gt;&lt;/p&gt;
&lt;p&gt;–í Linux –∫–∞–∂–¥—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∏—Å—Ç–µ–º—ã –∏–º–µ–µ—Ç —Å–≤–æ–π —Ñ–∞–π–ª –∑–∞–¥–∞–Ω–∏–π &lt;strong&gt;crontab&lt;/strong&gt;, –≤ –∫–æ—Ç–æ—Ä–æ–º –æ–ø–∏—Å–∞–Ω–æ, –≤ –∫–∞–∫–æ–µ –≤—Ä–µ–º—è –∏ –∫–∞–∫–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –∑–∞–ø—É—Å–∫–∞—Ç—å –æ—Ç –∏–º–µ–Ω–∏ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∞ —Ç–∞–∫–∂–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—é—â–∏–µ —Å—Ä–µ–¥—É –æ–∫—Ä—É–∂–µ–Ω–∏—è, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞–¥–∞—á–∏ cron. –í –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–µ —á–∞—Å—Ç—å —ç—Ç–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤—ã–≥–ª—è–¥–∏—Ç —è–≤–Ω–æ –∏–∑–±—ã—Ç–æ—á–Ω–æ–π ‚Äì —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ —Ç–∞–º –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ –ø–æ–Ω—è—Ç–∏—è, –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å—Ä–µ–¥—ã –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–∞ –∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã –∑–∞–ø—É—Å–∫–∞—Ç—å —Ç–æ–∂–µ –Ω–∞–≤—Ä—è–¥ –ª–∏ –ø–æ–ª—É—á–∏—Ç—Å—è. –ú–æ–∂–Ω–æ —É–ø—Ä–æ—Å—Ç–∏—Ç—å —Å–µ–±–µ –∂–∏–∑–Ω—å –∏ –ø—Ä–æ—Å—Ç–æ –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—Å—è –∫–∞–∫–∏–º-–Ω–∏–±—É–¥—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–º –≤—Ä–æ–¥–µ —Å–≤—è–∑–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞, —á—Ç–æ–±—ã –∏–º–µ—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ–π—Ç–∏—Å—å –ø–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É –∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è—Ç—å / —É–¥–∞–ª—è—Ç—å –∑–∞–¥–∞—á–∏ cron –≤ –Ω–µ–≥–æ –Ω–∞–ø—Ä–∏–º–µ—Ä –∏–∑ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏. –ù—É –∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π cron —Å–æ–π–¥—ë—Ç –¥–∞–∂–µ –æ–±—ã—á–Ω—ã–π —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –º–∞—Å—Å–∏–≤ (–Ω–µ–ª—å–∑—è –∏–∑–º–µ–Ω—è—Ç—å —Ä–∞–∑–º–µ—Ä –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã), –∑–∞–¥–∞–Ω–Ω—ã–π –Ω–∞ —ç—Ç–∞–ø–µ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏. –≠–ª–µ–º–µ–Ω—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ —Å–æ–±—ã—Ç–∏—è ‚Äì –≤—ã—Ä–∞–∂–µ–Ω–∏—è cron, –∏ –¥–µ–π—Å—Ç–≤–∏—è. –î–µ–π—Å—Ç–≤–∏–µ –æ–ø–∏—Å—ã–≤–∞–µ—Ç —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –ø–µ—Ä–∏—Ñ–µ—Ä–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä —Å–≤–µ—Ç–æ–¥–∏–æ–¥) –∏ –≤ –∫–∞–∫–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –µ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;crond.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;crond_job&lt;/span&gt; &lt;span class="n"&gt;jobs&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;*/6 */2 * * * *&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;led&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;b0000011111&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;2/6 */2 * * * *&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;led&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;b1111100000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;4/6 */2 * * * *&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;led&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;b1111111111&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;

  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;*/6 1/2 * * * *&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;led&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;b1010101010&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;2/6 1/2 * * * *&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;led&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;b0101010101&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;4/6 1/2 * * * *&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;led&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;b1111111111&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ö–∞–∫ –Ω–µ—Å–ª–æ–∂–Ω–æ —É–±–µ–¥–∏—Ç—å—Å—è –∫–∞–∂–¥–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ cron —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ —à–µ—Å—Ç–∏ –ø–æ–ª–µ–π, —Ä–∞–∑–¥–µ–ª—è–µ–º—ã—Ö –ø—Ä–æ–±–µ–ª–∞–º–∏ –∏–ª–∏ —Ç–∞–±—É–ª—è—Ç–æ—Ä–∞–º–∏. –í —ç—Ç–∏—Ö –ø–æ–ª—è—Ö  –∑–∞–¥–∞—é—Ç –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è (–°–µ–∫—É–Ω–¥–∞, –ú–∏–Ω—É—Ç–∞, –ß–∞—Å, –î–µ–Ω—å, –ú–µ—Å—è—Ü, –î–µ–Ω—å –Ω–µ–¥–µ–ª–∏), –≤ –Ω–∏—Ö –º–æ–∂–µ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è —á–∏—Å–ª–æ, —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª, —Ä–∞–∑–¥–µ–ª—ë–Ω–Ω—ã—Ö –∑–∞–ø—è—Ç—ã–º–∏, —Å–∏–º–≤–æ–ª—ã &lt;code&gt;*&lt;/code&gt; –∏–ª–∏ &lt;code&gt;/&lt;/code&gt; –∏ –¥–∏–∞–ø–∞–∑–æ–Ω —á–∏—Å–µ–ª, —Ä–∞–∑–¥–µ–ª—ë–Ω–Ω—ã—Ö –¥–µ—Ñ–∏—Å–æ–º. –ú–µ—Å—è—Ü—ã –∏ –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏ –º–æ–∂–Ω–æ —Ç–∞–∫–∂–µ –∑–∞–¥–∞–≤–∞—Ç—å –≤ 3-—Ö –±—É–∫–≤–µ–Ω–Ω–æ–º –≤–∞—Ä–∏–∞–Ω—Ç–µ:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;* * * * * *     –î–µ–π—Å—Ç–≤–∏–µ (—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ü–≤–µ—Ç RGB —Å–≤–µ—Ç–æ–¥–∏–æ–¥–æ–≤ —Å 1 –ø–æ 10)
| | | | | |
| | | | | ----- –î–µ–Ω—å –Ω–µ–¥–µ–ª–∏ (0 - 6) (0 —ç—Ç–æ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ)
| | | | ------- –ú–µ—Å—è—Ü (1 - 12)
| | | --------- –î–µ–Ω—å (1 - 31)
| | ----------- –ß–∞—Å (0 - 23)
| ------------- –ú–∏–Ω—É—Ç–∞ (0 - 59)
--------------- –°–µ–∫—É–Ω–¥–∞ (0 - 59)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–°–∏–º–≤–æ–ª &lt;code&gt;*&lt;/code&gt; –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞–µ—Ç –ª—é–±–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. –ö–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;* * * * * *
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 03:15:00:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;0 15 3 * * *
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ö–∞–∂–¥—ã–π –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;0 0 0 * * 1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ö–∞–∂–¥—ã–π —á–µ—Ç–Ω—ã–π —á–∞—Å:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;0 0 */2 * * *
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–¢–æ–∂–µ —á—Ç–æ –∏ –≤—ã—à–µ, –Ω–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–Ω–æ–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;0 0 0,2,4,6,8,10,12,14,16,18,20,22 * * *
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ö–∞–∂–¥—ã–π –±—É–¥–Ω–∏–π –¥–µ–Ω—å –≤ 22:00:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;0 0 22 * * 1-5
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ù–æ–≤—ã–π –≥–æ–¥:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;59 59 23 31 dec *
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–í—Å–µ —É—Å–ª–æ–≤–∏—è (–≤—Ä–µ–º–µ–Ω–∏ –∑–∞–ø—É—Å–∫–∞) –ø—Ä–æ–≤–µ—Ä—è—é—Ç—Å—è –ø–æ ¬´–ª–æ–≥–∏—á–µ—Å–∫–æ–º—É –ò¬ª, –∫—Ä–æ–º–µ —É—Å–ª–æ–≤–∏–π ¬´–¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏¬ª –∏ ¬´–¥–µ–Ω—å –º–µ—Å—è—Ü–∞¬ª ‚Äì —É–∫–∞–∑–∞–Ω–Ω—ã–µ —Å–æ–≤–º–µ—Å—Ç–Ω–æ, –æ–Ω–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –ø–æ ¬´–ª–æ–≥–∏—á–µ—Å–∫–æ–º—É –ò–õ–ò¬ª, —Ç–æ –µ—Å—Ç—å ¬´–ø–æ –ª—é–±–æ–º—É –∏–∑ –¥–Ω–µ–π¬ª, —á—Ç–æ –æ—Ç—Ä–∞–∂–µ–Ω–æ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ (Ubuntu, Debian, FreeBSD). –û–¥–Ω–∞–∫–æ —Ç–∞–∫–∞—è –ª–æ–≥–∏–∫–∞ –Ω–µ–æ—á–µ–≤–∏–¥–Ω–∞ –∏ –Ω–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞—Ç—å —É—Å–ª–æ–≤–∏–µ —Ç–∏–ø–∞ ¬´–ø–µ—Ä–≤—ã–π –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ –∫–∞–∂–¥–æ–≥–æ –º–µ—Å—è—Ü–∞¬ª –∏–ª–∏ ¬´–∫–∞–∂–¥—É—é –ø—è—Ç–Ω–∏—Ü—É –≤ 13 —á–∏—Å–ª–æ¬ª. –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–µ –∏–∑–º–µ–Ω—è—é—Ç –¥–∞–Ω–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ, —Å—á–∏—Ç–∞—è –µ–≥–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–æ–º.&lt;/p&gt;
&lt;p&gt;–¢–∞–∫–∂–µ —Å—Ç–æ–∏—Ç –ø–æ–º–Ω–∏—Ç—å –æ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ –ª–µ—Ç–Ω–µ–µ / –∑–∏–º–Ω–µ–µ –≤—Ä–µ–º—è. –¢—É—Ç –Ω–µ—Ç –µ–¥–∏–Ω–æ–≥–æ –º–Ω–µ–Ω–∏—è –∏ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ cron –º–æ–≥—É—Ç –≤–µ—Å—Ç–∏ —Å–µ–±—è –ø–æ —Ä–∞–∑–Ω–æ–º—É. –í Unix —Å–∏—Å—Ç–µ–º–∞—Ö –µ—Å—Ç—å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ Anacron, –∫–æ—Ç–æ—Ä—ã–π –≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç cron –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∑–∞–ø—É—Å–∫ –∑–∞–¥–∞–Ω–∏–π –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é, –≤–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è –∑–∞–ø—É—Å–∫–∞—é—Ç—Å—è —Å –∑–∞–¥–∞–Ω–Ω—ã–º –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º –≤—Ä–µ–º–µ–Ω–∏. –≠—Ç–æ –æ—á–µ–Ω—å —É–¥–æ–±–Ω–æ –¥–ª—è —Å–∏—Å—Ç–µ–º –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–µ —Ä–µ–≥—É–ª—è—Ä–Ω–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä –¥–æ–º–∞—à–Ω–∏–µ —Ä–∞–±–æ—á–∏–µ —Å—Ç–∞–Ω—Ü–∏–∏ –∏–ª–∏ –Ω–æ—É—Ç–±—É–∫–∏.&lt;/p&gt;</content><category term="msp430"></category><category term="cron"></category></entry><entry><title>–°++ –¥–ª—è –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤ - ¬´–ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å¬ª</title><link href="https://mazko.github.io/blog/posts/2018/03/18/s-dlia-mikrokontrollerov-nabliudatel/" rel="alternate"></link><published>2018-03-18T00:00:00+02:00</published><updated>2018-03-18T00:00:00+02:00</updated><author><name>Oleg Mazko</name></author><id>tag:mazko.github.io,2018-03-18:/blog/posts/2018/03/18/s-dlia-mikrokontrollerov-nabliudatel/</id><summary type="html">&lt;p&gt;–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –ø—Ä–∏—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å—Å—è –∫ &lt;a href="https://mazko.github.io/blog/posts/2017/03/20/s-18-dlia-mikrokontrollerov-razvedka-boem/"&gt;C++ –¥–ª—è –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;–ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å ‚Äì —ç—Ç–æ &lt;a href="https://mazko.github.io/blog/posts/2017/03/22/s-dlia-mikrokontrollerov-dekorator/"&gt;–ø–∞—Ç—Ç–µ—Ä–Ω&lt;/a&gt; –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞—ë—Ç –º–µ—Ö–∞–Ω–∏–∑–º –ø–æ–¥–ø–∏—Å–∫–∏, –ø–æ–∑–≤–æ–ª—è—é—â–∏–π –æ–¥–Ω–∏–º –æ–±—ä–µ–∫—Ç–∞–º —Å–ª–µ–¥–∏—Ç—å –∏ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ —Å–æ–±—ã—Ç–∏—è, –ø—Ä–æ–∏—Å—Ö–æ–¥—è—â–∏–µ –≤ –¥—Ä—É–≥–∏—Ö –æ–±—ä–µ–∫—Ç–∞—Ö. –î–∞–Ω–Ω—ã–π —à–∞–±–ª–æ–Ω —á–∞—Å—Ç–æ –ø—Ä–∏–º–µ–Ω—è—é—Ç –≤ —Å–∏—Ç—É–∞—Ü–∏—è—Ö, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–µ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç, —á—Ç–æ –¥–µ–ª–∞—é—Ç –ø–æ–ª—É—á–∞—Ç–µ–ª–∏ —Å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π –∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mazko.github.io/blog/posts/2017/03/22/s-dlia-mikrokontrollerov-dekorator/"&gt;GoF&lt;/a&gt; –¥–∞—ë—Ç —Å–ª–µ–¥—É—é—â–µ–µ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –ø—Ä–∏—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å—Å—è –∫ &lt;a href="https://mazko.github.io/blog/posts/2017/03/20/s-18-dlia-mikrokontrollerov-razvedka-boem/"&gt;C++ –¥–ª—è –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;–ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å ‚Äì —ç—Ç–æ &lt;a href="https://mazko.github.io/blog/posts/2017/03/22/s-dlia-mikrokontrollerov-dekorator/"&gt;–ø–∞—Ç—Ç–µ—Ä–Ω&lt;/a&gt; –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞—ë—Ç –º–µ—Ö–∞–Ω–∏–∑–º –ø–æ–¥–ø–∏—Å–∫–∏, –ø–æ–∑–≤–æ–ª—è—é—â–∏–π –æ–¥–Ω–∏–º –æ–±—ä–µ–∫—Ç–∞–º —Å–ª–µ–¥–∏—Ç—å –∏ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ —Å–æ–±—ã—Ç–∏—è, –ø—Ä–æ–∏—Å—Ö–æ–¥—è—â–∏–µ –≤ –¥—Ä—É–≥–∏—Ö –æ–±—ä–µ–∫—Ç–∞—Ö. –î–∞–Ω–Ω—ã–π —à–∞–±–ª–æ–Ω —á–∞—Å—Ç–æ –ø—Ä–∏–º–µ–Ω—è—é—Ç –≤ —Å–∏—Ç—É–∞—Ü–∏—è—Ö, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–µ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç, —á—Ç–æ –¥–µ–ª–∞—é—Ç –ø–æ–ª—É—á–∞—Ç–µ–ª–∏ —Å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π –∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mazko.github.io/blog/posts/2017/03/22/s-dlia-mikrokontrollerov-dekorator/"&gt;GoF&lt;/a&gt; –¥–∞—ë—Ç —Å–ª–µ–¥—É—é—â–µ–µ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ: –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—å (–∞–Ω–≥–ª. Observer) ‚Äì –ø–∞—Ç—Ç–µ—Ä–Ω –ø–æ–≤–µ–¥–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤. –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å —Ç–∏–ø–∞ ¬´–æ–¥–∏–Ω –∫–æ –º–Ω–æ–≥–∏–º¬ª –º–µ–∂–¥—É –æ–±—ä–µ–∫—Ç–∞–º–∏ —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —á—Ç–æ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ–¥–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –≤—Å–µ –∑–∞–≤–∏—Å—è—â–∏–µ –æ—Ç –Ω–µ–≥–æ –æ–ø–æ–≤–µ—â–∞—é—Ç—Å—è –æ–± —ç—Ç–æ–º –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è.&lt;/p&gt;
&lt;p&gt;–ê–Ω–∞–ª–æ–≥–∏—è –∏–∑ –∂–∏–∑–Ω–∏: –ø–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –≤—ã –æ—Ñ–æ—Ä–º–∏–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –≥–∞–∑–µ—Ç—É –∏–ª–∏ –∂—É—Ä–Ω–∞–ª, –≤–∞–º –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω–æ –µ–∑–¥–∏—Ç—å –≤ —Å—É–ø–µ—Ä–º–∞—Ä–∫–µ—Ç –∏ –ø—Ä–æ–≤–µ—Ä—è—Ç—å, –Ω–µ –≤—ã—à–µ–ª –ª–∏ –æ—á–µ—Ä–µ–¥–Ω–æ–π –Ω–æ–º–µ—Ä. –í–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ, –∏–∑–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ –±—É–¥–µ—Ç –ø—Ä–∏—Å—ã–ª–∞—Ç—å –Ω–æ–≤—ã–µ –Ω–æ–º–µ—Ä–∞ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –≤—ã—Ö–æ–¥–∞ –ø—Ä—è–º–æ –∫ –≤–∞–º –¥–æ–º–æ–π. –ò–∑–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ –≤–µ–¥—ë—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –∏ –∑–Ω–∞–µ—Ç, –∫–æ–º—É –∫–∞–∫–æ–π –∂—É—Ä–Ω–∞–ª —Å–ª–∞—Ç—å. –í—ã –º–æ–∂–µ—Ç–µ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç –ø–æ–¥–ø–∏—Å–∫–∏, –∏ –∂—É—Ä–Ω–∞–ª –ø–µ—Ä–µ—Å—Ç–∞–Ω–µ—Ç –∫ –≤–∞–º –ø—Ä–∏—Ö–æ–¥–∏—Ç—å.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://mazko.github.io/MSP430.js/8490b771b5c0189e639726f219cb2b16"&gt;MSP430.js&lt;/a&gt; | &lt;a href="https://mazko.github.io/blog/posts/2018/03/18/s-dlia-mikrokontrollerov-nabliudatel/msp430-observer.zip"&gt;–∏—Å—Ö–æ–¥–Ω–∏–∫–∏&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2018/03/18/s-dlia-mikrokontrollerov-nabliudatel/ui.gif" style="width:55%; margin: 0 auto; display:block;"&gt;&lt;/p&gt;
&lt;p&gt;–î–∞–≤–∞–π—Ç–µ –Ω–∞–∑—ã–≤–∞—Ç—å ¬´–∏–∑–¥–∞—Ç–µ–ª—è–º–∏¬ª —Ç–µ –æ–±—ä–µ–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–¥–µ—Ä–∂–∞—Ç –≤–∞–∂–Ω–æ–µ –∏–ª–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ –¥–ª—è –¥—Ä—É–≥–∏—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–µ. –û—Å—Ç–∞–ª—å–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç—è—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è, –Ω–∞–∑–æ–≤—ë–º ¬´–ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º–∏¬ª.&lt;/p&gt;
&lt;p&gt;–ü–∞—Ç—Ç–µ—Ä–Ω ¬´–ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å¬ª –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å –≤–Ω—É—Ç—Ä–∏ –æ–±—ä–µ–∫—Ç–∞ ¬´–∏–∑–¥–∞—Ç–µ–ª—è¬ª (–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞) —Å–ø–∏—Å–æ–∫ —Å—Å—ã–ª–æ–∫ –Ω–∞ –æ–±—ä–µ–∫—Ç—ã ¬´–ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤¬ª. –ü—Ä–∏—á—ë–º, ¬´–∏–∑–¥–∞—Ç–µ–ª—å¬ª –Ω–µ –¥–æ–ª–∂–µ–Ω –≤–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ –ø–æ–¥–ø–∏—Å–∫–∏ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ. –û–Ω –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –º–µ—Ç–æ–¥—ã, —Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä—ã—Ö ¬´–ø–æ–¥–ø–∏—Å—á–∏–∫–∏¬ª –º–æ–≥–ª–∏ –±—ã –¥–æ–±–∞–≤–ª—è—Ç—å –∏–ª–∏ —É–±–∏—Ä–∞—Ç—å —Å–µ–±—è –∏–∑ —Å–ø–∏—Å–∫–∞.&lt;/p&gt;
&lt;p&gt;–ö–æ–≥–¥–∞ –≤ ¬´–∏–∑–¥–∞—Ç–µ–ª–µ¬ª –±—É–¥–µ—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å –≤–∞–∂–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ, –æ–Ω –±—É–¥–µ—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç—å—Å—è –ø–æ —Å–ø–∏—Å–∫—É ¬´–ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤¬ª –∏ –æ–ø–æ–≤–µ—â–∞—Ç—å –∏—Ö –æ–± —ç—Ç–æ–º, –≤—ã–∑—ã–≤–∞—è –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –æ–±—ä–µ–∫—Ç–æ–≤-–ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;observers/state.h&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;DoublyLinkedList.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;non-copyable.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;obsevers&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="c1"&gt;// alias&lt;/span&gt;
    &lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="n"&gt;DLLE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mozilla&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;DoublyLinkedListElement&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

        &lt;span class="k"&gt;typedef&lt;/span&gt; &lt;span class="k"&gt;enum&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;left_active&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;left_sleep&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="n"&gt;state_t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="nl"&gt;IObserver&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;DLLE&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IObserver&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;NonCopyable&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;virtual&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;observe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;state_t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;


        &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Container&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;NonCopyable&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;mozilla&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;DoublyLinkedList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IObserver&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;mList&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
            &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;addObserver&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IObserver&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;aObserver&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="c1"&gt;// Will assert if |aObserver| is part of another list.&lt;/span&gt;
                &lt;span class="n"&gt;mList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pushFront&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;aObserver&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

            &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;removeObserver&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IObserver&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;aObserver&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="c1"&gt;// Will assert if |aObserver| is not part of |list|.&lt;/span&gt;
                &lt;span class="n"&gt;mList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;aObserver&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

            &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;notifyObservers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;state_t&lt;/span&gt; &lt;span class="n"&gt;aState&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IObserver&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="nl"&gt;o&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;mList&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;observe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;aState&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;

        &lt;span class="k"&gt;extern&lt;/span&gt; &lt;span class="n"&gt;Container&lt;/span&gt; &lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–í –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ ¬´–ø–æ–¥–ø–∏—Å—á–∏–∫–∏¬ª –æ–±—Ä–∞–∑—É—é—Ç –¥–≤—É—Å–≤—è–∑–Ω—ã–π —Å–ø–∏—Å–æ–∫, —á—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–±–æ–π—Ç–∏—Å—å –±–µ–∑ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –≤—ã–¥–µ–ª–µ–Ω–∏—è –ø–∞–º—è—Ç–∏. –ü–æ—á–µ–º—É —ç—Ç–æ –≤–∞–∂–Ω–æ –¥–ª—è –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤ –æ–ø–∏—Å–∞–Ω–æ &lt;a href="https://mazko.github.io/blog/posts/2017/03/22/s-dlia-mikrokontrollerov-dekorator/"&gt;—Ç—É—Ç&lt;/a&gt;. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≥–æ—Ç–æ–≤–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –¥–≤—É—Å–≤—è–∑–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –≤–∑—è—Ç–∞—è –∏–∑ –∏—Å—Ö–æ–¥–Ω–∏–∫–æ–≤ mozilla.&lt;/p&gt;
&lt;p&gt;–®–∞–±–ª–æ–Ω ¬´–ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å¬ª —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ. –û–±—ã—á–Ω–æ –≤—ã–¥–µ–ª—è–µ—Ç—Å—è –≥–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, —Ç–µ–ª–æ –∫–æ—Ç–æ—Ä–æ–≥–æ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –¥–≤—É—Ö —á–∞—Å—Ç–µ–π: –≤—ã–±–æ—Ä–∫–∏ —Å–æ–±—ã—Ç–∏—è –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏—è. –ö–∞–∫ –ø—Ä–∞–≤–∏–ª–æ, –≤ —Ä–µ–∞–ª—å–Ω—ã—Ö –∑–∞–¥–∞—á–∞—Ö –æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Å–æ–±—ã—Ç–∏—è, –ø–æ—Å–∫–æ–ª—å–∫—É –ø—Ä–∏ —ç—Ç–æ–º –ø—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–µ –º–æ–∂–µ—Ç —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –¥—Ä—É–≥–∏–µ —Å–æ–±—ã—Ç–∏—è.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;app.cpp&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;app.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;hal.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;observers/buttons.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;observers/state.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;tasks/left.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;tasks/right.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;tasks/counter.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;obsevers&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;buttons&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Container&lt;/span&gt; &lt;span class="n"&gt;obsevers&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;buttons&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Container&lt;/span&gt;   &lt;span class="n"&gt;obsevers&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

        &lt;span class="n"&gt;tasks&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;tasks&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;tasks&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;counter&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;lastBtns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;volatile&lt;/span&gt; &lt;span class="kt"&gt;uint16_t&lt;/span&gt; &lt;span class="n"&gt;longPress&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// TODO: use timer&lt;/span&gt;
        &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;state_t&lt;/span&gt; &lt;span class="n"&gt;lastState&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;left_sleep&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(;;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

            &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;btns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hal&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;get_buttons&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;lastBtns&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;btns&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;buttons&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;notifyObservers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;btns&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;btns&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="cm"&gt;/* left first button */&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;longPress&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!--&lt;/span&gt;&lt;span class="n"&gt;longPress&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
                &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lastState&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nl"&gt;left_active&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                            &lt;span class="n"&gt;lastState&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;left_sleep&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nl"&gt;left_sleep&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                            &lt;span class="n"&gt;lastState&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;left_active&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                    &lt;span class="p"&gt;}&lt;/span&gt;
                    &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;notifyObservers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lastState&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;longPress&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

            &lt;span class="n"&gt;lastBtns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;btns&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

            &lt;span class="c1"&gt;// other events like timer e.t.c...&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–í –¥–∞–Ω–Ω–æ–º –ø—Ä–∏–º–µ—Ä–µ –¥–≤–∞ —Å–æ–±—ã—Ç–∏—è: –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫–∏. –ü—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è (–¥–ª–∏—Ç–µ–ª—å–Ω–æ–µ –Ω–∞–∂–∞—Ç–∏–µ) –ª–µ–≤—ã–µ –ª–∞–º–ø–æ—á–∫–∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –ø–æ–¥–ø–∏—Å—ã–≤–∞—é—Ç—Å—è / –æ—Ç–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –æ—Ç —Å–æ–±—ã—Ç–∏—è –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏. –ü—Ä–∞–≤—ã–µ –ª–∞–º–ø–æ—á–∫–∏ –∏ —Å—á—ë—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —Å–æ–±—ã—Ç–∏–µ –∫–Ω–æ–ø–æ–∫ –≤—Å–µ–≥–¥–∞.&lt;/p&gt;
&lt;p&gt;–ù–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–æ–ª–∞–≥–∞–π—Ç–µ—Å—å –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è ¬´–ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤¬ª. –ú–µ—Ç–æ–¥ &lt;code&gt;addObserver&lt;/code&gt; –∫–ª–∞—Å—Å–∞ &lt;code&gt;state::Container&lt;/code&gt; –¥–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤–æ–≥–æ ¬´–ø–æ–¥–ø–∏—Å—á–∏–∫–∞¬ª –≤ –Ω–∞—á–∞–ª–æ —Å–≤—è–∑–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞. –ê –µ—Å–ª–∏ –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–µ –≤ –Ω–∞—á–∞–ª–æ –∞ –≤ –∫–æ–Ω–µ—Ü ? –ö–∞–∫–æ–π –ø–æ—Ä—è–¥–æ–∫ —Å—á–∏—Ç–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º ? &lt;strong&gt;–õ—é–±–æ–π&lt;/strong&gt;. –ù—É–∂–Ω–æ –ø–∏—Å–∞—Ç—å –∫–æ–¥ —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —á—Ç–æ–±—ã –ø–æ—Ä—è–¥–æ–∫ –æ–±—Ö–æ–¥–∞ ¬´–ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤¬ª –Ω–∏–∫–∞–∫ –Ω–µ –≤–ª–∏—è–ª –Ω–∞ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã. –ß–µ–º –º–µ–Ω—å—à–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å–∏—Å—Ç–µ–º—ã –∑–Ω–∞—é—Ç –¥—Ä—É–≥ –æ –¥—Ä—É–≥–µ, —Ç–µ–º –ø—Ä–æ—â–µ –∏—Ö –∏–∑–º–µ–Ω—è—Ç—å –∏ —Ä–∞–∑–≤–∏–≤–∞—Ç—å. –û —Å–∏–ª–µ —Å–ª–∞–±—ã—Ö —Å–≤—è–∑–µ–π —á—É—Ç—å –Ω–∏–∂–µ.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;tasks/left.cpp&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;left.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;color-observer.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;observers/state.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;draw.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;hal.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;obsevers&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;tasks&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;LockerObserver&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;IObserver&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="n"&gt;ColorObserver&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;hal&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;LeftLeds&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;observe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;state_t&lt;/span&gt; &lt;span class="n"&gt;aState&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;override&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;aState&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nl"&gt;left_active&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;left subscribed  &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="n"&gt;buttons&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addObserver&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nl"&gt;left_sleep&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;left unsubscribed&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="n"&gt;buttons&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;removeObserver&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; 
        &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;PAGE_0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;LockerObserver&lt;/span&gt; &lt;span class="n"&gt;observer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;tasks&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;observer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;left unsubscribed&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addObserver&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;observer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ï—Å–ª–∏ –æ–±—ä–µ–∫—Ç—ã –º–æ–≥—É—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å, –Ω–µ –æ–±–ª–∞–¥–∞—è –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –Ω–∏–∫–∞–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –¥—Ä—É–≥ –æ –¥—Ä—É–≥–µ, —Ç–∞–∫–∏–µ –æ–±—ä–µ–∫—Ç—ã –Ω–∞–∑—ã–≤–∞—é—Ç —Å–ª–∞–±–æ—Å–≤—è–∑–∞–Ω–Ω—ã–º–∏. –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ, —á—Ç–æ –∑–Ω–∞–µ—Ç ¬´–∏–∑–¥–∞—Ç–µ–ª—å¬ª –æ ¬´–ø–æ–¥–ø–∏—Å—á–∏–∫–∞—Ö¬ª, ‚Äì —Ç–æ, —á—Ç–æ –æ–Ω–∏ —Ä–µ–∞–ª–∏–∑—É–µ—Ç –Ω–µ–∫–æ—Ç–æ—Ä—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å (IObserver). –ï–º—É –Ω–µ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å –Ω–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∫–ª–∞—Å—Å ¬´–ø–æ–¥–ø–∏—Å—á–∏–∫–∞¬ª, –Ω–∏ –µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ç–∏–ø–æ–≤ ¬´–ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤¬ª –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ ¬´–∏–∑–¥–∞—Ç–µ–ª—è¬ª. &lt;/p&gt;
&lt;p&gt;–ù–∞ –±–∞–∑–µ —Å–ª–∞–±–æ—Å–≤—è–∑–∞–Ω–Ω—ã—Ö –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä —Å—Ç—Ä–æ—è—Ç—Å—è –≥–∏–±–∫–∏–µ —Å–∏—Å—Ç–µ–º—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ä–æ—à–æ –∞–¥–∞–ø—Ç–∏—Ä—É—é—Ç—Å—è –∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º –±–ª–∞–≥–æ–¥–∞—Ä—è –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º –º–µ–∂–¥—É –æ–±—ä–µ–∫—Ç–∞–º–∏.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;–ï—Å—Ç—å –≤—Å–µ–≥–æ –¥–≤–∞ —Ç–∏–ø–∞ —è–∑—ã–∫–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è: —Ç–µ, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –ª—é–¥–∏ –≤—Å—ë –≤—Ä–µ–º—è —Ä—É–≥–∞—é—Ç—Å—è, –∏ —Ç–µ, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∏–∫—Ç–æ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç. ‚Äî Bjarne Stroustrup&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;–ö–∞–∫ –≤—ã –¥—É–º–∞–µ—Ç–µ, —á—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —Å–ª–µ–¥—É—é—â–∞—è –∫–æ–º–∞–Ω–¥–∞ ?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;~$ strings a.out | grep alloc
# output
lib_a-malloc.o
lib_a-nano-mallocr.o
malloc
_malloc_r
__malloc_sbrk_start
__malloc_free_list
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ö–∞–∫ —Ç–æ–ª—å–∫–æ –º—ã –Ω–∞—á–∞–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å &lt;strong&gt;–≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏&lt;/strong&gt;, –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä —Ä–µ—à–∏–ª –ø–æ–º–æ—á—å –∏ –º–æ–ª—á–∞ –¥–æ–±–∞–≤–∏–ª –≤ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª &lt;code&gt;malloc&lt;/code&gt; –∏ —ç—Ç–æ &lt;a href="https://mazko.github.io/blog/posts/2017/03/22/s-dlia-mikrokontrollerov-dekorator/"&gt;—è–≤–Ω–æ –Ω–µ —Ç–æ&lt;/a&gt;, —á—Ç–æ –º—ã —Ö–æ—Ç–∏–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞—Ö. –ú–æ–∂–Ω–æ –ª–∏ —ç—Ç–æ –∫–∞–∫-—Ç–æ –æ–±–æ–π—Ç–∏ ?&lt;/p&gt;
&lt;p&gt;–£ –Ω–∞—Å —Ç—É—Ç GCC-–ø–æ–¥–æ–±–Ω—ã–π –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä, –∫–æ–º–ø–æ–Ω–æ–≤—â–∏–∫ –∫–æ—Ç–æ—Ä–æ–≥–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ–∏ –æ–±—ë—Ä—Ç–∫–∏ –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏. –ú–æ–∂–Ω–æ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–ª–æ–º–∞—Ç—å –∫–æ–º–ø–∏–ª—è—Ü–∏—é –ø—Ä–∏ –≤—ã–∑–æ–≤–µ —Ñ—É–Ω–∫—Ü–∏–π –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –≤—ã–¥–µ–ª–µ–Ω–∏—è –ø–∞–º—è—Ç–∏ &lt;code&gt;malloc&lt;/code&gt;, &lt;code&gt;calloc&lt;/code&gt;, &lt;code&gt;realloc&lt;/code&gt;, &lt;code&gt;free&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;-fno-builtin -Wl,--wrap=malloc  -Wl,--wrap=calloc \
             -Wl,--wrap=realloc -Wl,--wrap=free -Wl,--wrap=sbrk
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–¢–µ–ø–µ—Ä—å –ø—Ä–∏ –≤—ã–∑–æ–≤–µ &lt;code&gt;malloc&lt;/code&gt; –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω–∞ &lt;code&gt;__wrap_malloc&lt;/code&gt; –∏ —Ç.–¥. –ü–æ—Å–∫–æ–ª—å–∫—É –º—ã –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é &lt;code&gt;__wrap_malloc&lt;/code&gt;, –∫–æ–º–ø–∏–ª—è—Ü–∏—è —Å–ª–æ–º–∞–µ—Ç—Å—è. –ï—Å–ª–∏ –∂–µ &lt;code&gt;malloc&lt;/code&gt; –Ω–∏–≥–¥–µ –Ω–µ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –≤ –∫–æ–¥–µ –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä –≤—ã–¥–∞—Å—Ç –ø—Ä–æ—à–∏–≤–∫—É.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://mazko.github.io/MSP430.js/9bdb1cd8da54384ba5b6211ea135b7f8"&gt;MSP430.js&lt;/a&gt; | &lt;a href="https://mazko.github.io/blog/posts/2018/03/18/s-dlia-mikrokontrollerov-nabliudatel/msp430-observer-static-polymorphism.zip"&gt;–∏—Å—Ö–æ–¥–Ω–∏–∫–∏&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;–í —Å—Ç–∞—Ä–æ–º –¥–æ–±—Ä–æ–º C–∏ –ø–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω –≤ –≤–∏–¥–µ —É–∫–∞–∑–∞—Ç–µ–ª–µ–π –Ω–∞ —Ñ—É–Ω–∫—Ü–∏–∏. –ù–∞–∏–±–æ–ª–µ–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —É–∫–∞–∑–∞—Ç–µ–ª–µ–π –Ω–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ C–∏ ‚Äì —ç—Ç–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ—á–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π, —Ç–∞–∫–∏—Ö –∫–∞–∫ qsort. –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —É–∫–∞–∑–∞—Ç–µ–ª–µ–π –Ω–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–æ—Å—Ç–∞: —ç—Ç–æ –≤—Å–µ–≥–æ –ª–∏—à—å ¬´—É–∫–∞–∑–∞—Ç–µ–ª–∏ –Ω–∞ –∫–æ–¥¬ª, –≤ –Ω–∏—Ö —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –Ω–∞—á–∞–ª—å–Ω—ã–π –∞–¥—Ä–µ—Å —É—á–∞—Å—Ç–∫–∞ –∞—Å—Å–µ–º–±–ª–µ—Ä–Ω–æ–≥–æ –∫–æ–¥–∞. –†–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã —É–∫–∞–∑–∞—Ç–µ–ª–µ–π —Å—É—â–µ—Å—Ç–≤—É—é—Ç –ª–∏—à—å –¥–ª—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –ø—Ä–∏–º–µ–Ω—è–µ–º–æ–≥–æ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è –æ –≤—ã–∑–æ–≤–µ.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;observers/state.h&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;DoublyLinkedList.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;non-copyable.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;obsevers&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="c1"&gt;// alias&lt;/span&gt;
    &lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="n"&gt;DLLE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mozilla&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;DoublyLinkedListElement&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

        &lt;span class="k"&gt;typedef&lt;/span&gt; &lt;span class="k"&gt;enum&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;left_active&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;left_sleep&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="n"&gt;state_t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Observer&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;DLLE&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Observer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;NonCopyable&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;typedef&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;ObserveFunc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;state_t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Observer&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="n"&gt;ObserveFunc&lt;/span&gt; &lt;span class="n"&gt;m_observe_func_ptr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
            &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;observe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;state_t&lt;/span&gt; &lt;span class="n"&gt;aState&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;m_observe_func_ptr&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="n"&gt;aState&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

            &lt;span class="n"&gt;Observer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ObserveFunc&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;m_observe_func_ptr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;){}&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;

        &lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Adapter&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;Observer&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="n"&gt;m_observer_impl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;Adapter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Observer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="p"&gt;[](&lt;/span&gt;&lt;span class="n"&gt;state_t&lt;/span&gt; &lt;span class="n"&gt;aState&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Observer&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;aThis&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;self&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;static_cast&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Adapter&lt;/span&gt;&lt;span class="o"&gt;*&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;aThis&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="n"&gt;self&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;m_observer_impl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;observe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;aState&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="p"&gt;}){&lt;/span&gt;&lt;span class="cm"&gt;/* empty constructor */&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;tasks/left.cpp&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;left.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;color-observer.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;observers/state.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;draw.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;hal.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;obsevers&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;tasks&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;PAGE_0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="nl"&gt;LockerObserver&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;NonCopyable&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="n"&gt;buttons&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Adapter&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ColorObserver&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;hal&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;LeftLeds&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;observe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;state_t&lt;/span&gt; &lt;span class="n"&gt;aState&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;aState&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nl"&gt;left_active&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;left subscribed  &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="n"&gt;buttons&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addObserver&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nl"&gt;left_sleep&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;left unsubscribed&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="n"&gt;buttons&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;removeObserver&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Adapter&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;LockerObserver&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;observer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;tasks&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;left unsubscribed&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addObserver&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;observer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–í–æ–∑–º–æ–∂–Ω–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∫–∞–∫–æ–µ-—Ç–æ –±–æ–ª–µ–µ —ç–ª–µ–≥–∞–Ω—Ç–Ω—ã–π —Å–ø–æ—Å–æ–± –æ—Ç—É—á–∏—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç –≤—ã–∑–æ–≤–∞ malloc, –Ω–æ –≤ —Ü–µ–ª–æ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –≤—ã–≥–ª—è–¥–∏—Ç –≤–ø–æ–ª–Ω–µ —Å—ä–µ–¥–æ–±–Ω—ã–º.&lt;/p&gt;</content><category term="msp430"></category><category term="–ü–∞—Ç—Ç–µ—Ä–Ω"></category></entry><entry><title>–°++ –¥–ª—è –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤ - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∞–º—è—Ç—å—é</title><link href="https://mazko.github.io/blog/posts/2017/06/22/s-dlia-mikrokontrollerov-upravlenie-pamiatiu/" rel="alternate"></link><published>2017-06-22T00:00:00+03:00</published><updated>2017-06-22T00:00:00+03:00</updated><author><name>Oleg Mazko</name></author><id>tag:mazko.github.io,2017-06-22:/blog/posts/2017/06/22/s-dlia-mikrokontrollerov-upravlenie-pamiatiu/</id><summary type="html">&lt;p&gt;–ö–∞–∫ –∏–∑–≤–µ—Å—Ç–Ω–æ, –≤ —è–∑—ã–∫–µ –°–∏ –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –≤—ã–¥–µ–ª–µ–Ω–∏—è –∏ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è –ø–∞–º—è—Ç–∏ –Ω–∞ –∫—É—á–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏–∏ &lt;code&gt;malloc()&lt;/code&gt; –∏ &lt;code&gt;free()&lt;/code&gt;. –í –°++ –¥–ª—è —ç—Ç–∏—Ö —Ü–µ–ª–µ–π –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω—ã –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã &lt;code&gt;new&lt;/code&gt; –∏ &lt;code&gt;delete&lt;/code&gt;. –ö–æ–≥–¥–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä &lt;code&gt;new&lt;/code&gt; –Ω–µ –º–æ–∂–µ—Ç —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–¥–µ–ª–µ–Ω–∏–µ –ø–∞–º—è—Ç–∏, –æ–Ω –≤–æ–∑–±—É–∂–¥–∞–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–µ &lt;code&gt;std::bad_alloc&lt;/code&gt;, —Å–∏–≥–Ω–∞–ª–∏–∑–∏—Ä—É—è —Ç–µ–º —Å–∞–º—ã–º –æ–± –æ—à–∏–±–∫–µ. –í &lt;a href="https://mazko.github.io/blog/posts/2017/03/20/s-18-dlia-mikrokontrollerov-razvedka-boem/"&gt;C ‚Ä¶&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;–ö–∞–∫ –∏–∑–≤–µ—Å—Ç–Ω–æ, –≤ —è–∑—ã–∫–µ –°–∏ –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –≤—ã–¥–µ–ª–µ–Ω–∏—è –∏ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è –ø–∞–º—è—Ç–∏ –Ω–∞ –∫—É—á–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏–∏ &lt;code&gt;malloc()&lt;/code&gt; –∏ &lt;code&gt;free()&lt;/code&gt;. –í –°++ –¥–ª—è —ç—Ç–∏—Ö —Ü–µ–ª–µ–π –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω—ã –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã &lt;code&gt;new&lt;/code&gt; –∏ &lt;code&gt;delete&lt;/code&gt;. –ö–æ–≥–¥–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä &lt;code&gt;new&lt;/code&gt; –Ω–µ –º–æ–∂–µ—Ç —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–¥–µ–ª–µ–Ω–∏–µ –ø–∞–º—è—Ç–∏, –æ–Ω –≤–æ–∑–±—É–∂–¥–∞–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–µ &lt;code&gt;std::bad_alloc&lt;/code&gt;, —Å–∏–≥–Ω–∞–ª–∏–∑–∏—Ä—É—è —Ç–µ–º —Å–∞–º—ã–º –æ–± –æ—à–∏–±–∫–µ. –í &lt;a href="https://mazko.github.io/blog/posts/2017/03/20/s-18-dlia-mikrokontrollerov-razvedka-boem/"&gt;C++ –¥–ª—è –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤&lt;/a&gt; –º–µ—Ö–∞–Ω–∏–∑–º –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏–π –æ–±—ã—á–Ω–æ –æ—Ç–∫–ª—é—á—ë–Ω –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ —Ä–µ—Å—É—Ä—Å–æ–≤, –æ–¥–Ω–∞–∫–æ —Å–æ–≥–ª–∞—Å–Ω–æ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏ –°++, –ø—Ä–µ–∂–¥–µ —á–µ–º –≤–æ–∑–±—É–¥–∏—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–∏–µ &lt;code&gt;std::bad_alloc&lt;/code&gt;, –æ–ø–µ—Ä–∞—Ç–æ—Ä &lt;code&gt;new&lt;/code&gt; –≤—ã–∑—ã–≤–∞–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫. –≠—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –º–æ–∂–Ω–æ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è—Ç—å &lt;code&gt;std::set_new_handler&lt;/code&gt;, —á—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ö–æ—Ç—å –∫–∞–∫-—Ç–æ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å / —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å –æ—à–∏–±–∫–∏ –≤—ã–¥–µ–ª–µ–Ω–∏—è –ø–∞–º—è—Ç–∏ –Ω–∞ –∫—É—á–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã. –ù–æ —ç—Ç–æ —Ç–æ–ª—å–∫–æ –≤–µ—Ä—Ö—É—à–∫–∞ –∞–π—Å–±–µ—Ä–≥–∞, –∞ –Ω–∏–∂–µ –æ–ø–∏—Å–∞–Ω—ã –±–æ–ª–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ –∏ –Ω–∞–¥—ë–∂–Ω—ã–µ –ø—Ä–∏—ë–º—ã. –ß—Ç–æ–±—ã –±—ã–ª–æ –Ω–µ—Å–∫—É—á–Ω–æ, –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –≤–∑—è—Ç–∞ –∏–≥—Ä–∞ ¬´–ó–º–µ–π–∫–∞¬ª.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://mazko.github.io/MSP430.js/efadb63e855ca5799cc873ca38ebc2ad"&gt;MSP430.js&lt;/a&gt; | &lt;a href="https://mazko.github.io/blog/posts/2017/06/22/s-dlia-mikrokontrollerov-upravlenie-pamiatiu/snake-qv-msp430-js.zip"&gt;–∏—Å—Ö–æ–¥–Ω–∏–∫–∏&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2017/06/22/s-dlia-mikrokontrollerov-upravlenie-pamiatiu/ui.gif" style="width:55%; margin: 0 auto; display:block;"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;–æ–ø–µ—Ä–∞—Ç–æ—Ä—ã &lt;code&gt;new&lt;/code&gt; –∏ &lt;code&gt;delete&lt;/code&gt; –≤ –°++ –º–æ–∂–Ω–æ –ø–µ—Ä–µ–≥—Ä—É–∂–∞—Ç—å, –∞ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤ –º–æ–∂–µ—Ç –æ–∫–∞–∑–∞—Ç—å—Å—è –≤–µ—Å—å–º–∞ –ø–æ–ª–µ–∑–Ω—ã–º –≤–æ–æ–±—â–µ —Å–ª–æ–º–∞—Ç—å –∫–æ–º–ø–∏–ª—è—Ü–∏—é –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –≤—ã–¥–µ–ª–µ–Ω–∏—è –ø–∞–º—è—Ç–∏ –Ω–∞ –∫—É—á–µ &lt;a href="https://mazko.github.io/blog/posts/2017/06/22/s-dlia-mikrokontrollerov-upravlenie-pamiatiu/no-new.h"&gt;no-new.h&lt;/a&gt;. –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏–ª–∞ –≤–æ –≤—Å–µ—Ö –∏—Å—Ö–æ–¥–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö –ø—Ä–æ–µ–∫—Ç–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤ gcc –ø–æ–¥–æ–±–Ω—ã—Ö –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä–∞—Ö –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–æ—Å—Ç–æ —É–∫–∞–∑–∞—Ç—å –≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ –æ–ø—Ü–∏—é &lt;code&gt;-include no-new.h&lt;/code&gt;, –≤ —Å–ª—É—á–∞–µ —Å–æ ¬´–ó–º–µ–π–∫–æ–π¬ª –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è IDE &lt;a href="http://www.ti.com/tool/ccstudio-msp" rel="nofollow"&gt;Code Composer Studio&lt;/a&gt;, —Ç–∞–º –µ—Å—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ &lt;em&gt;--preinclude&lt;/em&gt;. –ß—Ç–æ –∫–∞—Å–∞–µ—Ç—Å—è –Ω–∞—Å–ª–µ–¥–∏—è –°–∏ ‚Äî —Ñ—É–Ω–∫—Ü–∏–π –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –≤—ã–¥–µ–ª–µ–Ω–∏—è –ø–∞–º—è—Ç–∏ &lt;code&gt;malloc&lt;/code&gt;, &lt;code&gt;calloc&lt;/code&gt;, &lt;code&gt;realloc&lt;/code&gt; ‚Äî —Ç–æ –∫—Ä–∞—Å–∏–≤–æ –æ—Ç—Ü–µ–ø–∏—Ç—å –∏—Ö —É–≤—ã –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è. –£ gcc –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä–æ–≤ –µ—Å—Ç—å –≤–æ–ª—à–µ–±–Ω—ã–π —Ñ–ª–∞–≥ –∫–æ–º–ø–æ–Ω–æ–≤—â–∏–∫–∞ &lt;code&gt;-Wl,--wrap=malloc&lt;/code&gt;, –∫–æ—Ç–æ—Ä—ã–π –¥–∞—ë—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ç–∞–≤–∏—Ç—å –æ–±—ë—Ä—Ç–∫–∏ –Ω–∞ —Ñ—É–Ω–∫—Ü–∏–∏. –ö–∞–∫ —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å –Ω–∞ –ø—Ä–∏–º–µ—Ä–µ –ø–æ–∫–∞–∂—É —á—É—Ç—å &lt;a href="https://mazko.github.io/blog/posts/2018/03/18/s-dlia-mikrokontrollerov-nabliudatel/"&gt;–ø–æ–∑–∂–µ&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;¬´–ó–º–µ–π–∫–∞¬ª –∫—É—à–∞–µ—Ç –∏ —Ä–∞—Å—Ç—ë—Ç, —Ç.–µ. –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∏–∑ —Å–µ–±—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –º–∞—Å—Å–∏–≤. –î–ª—è STL –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –≤ –°++ –º–æ–∂–Ω–æ –∑–∞–¥–∞–≤–∞—Ç—å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –∞–ª–ª–æ–∫–∞—Ç–æ—Ä—ã –ø–∞–º—è—Ç–∏. –í –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–µ —Å–ª—É—á–∞–µ–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –∑–Ω–∞–µ—Ç, —Å–∫–æ–ª—å–∫–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è –¥–ª—è –µ–≥–æ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –∏ —Ç–æ–≥–¥–∞ —Ö–æ—Ä–æ—à–µ–π –∏–¥–µ–µ–π –≤—ã–≥–ª—è–¥–∏—Ç –∞–ª–ª–æ–∫–∞—Ç–æ—Ä, –∏—Å–ø–æ–ª—å–∑—É—é—â–∏–π —Å—Ç–µ–∫ –≤–º–µ—Å—Ç–æ –∫—É—á–∏. –î–ª—è –¥—Ä–µ–≤–Ω–µ–≥–æ C++98 –Ω–∞–π—Ç–∏ —Ä–∞–±–æ—á–∏–π –∞–ª–ª–æ–∫–∞—Ç–æ—Ä –∑–∞—Ç—Ä—É–¥–Ω–∏—Ç–µ–ª—å–Ω–æ, –ø–æ—ç—Ç–æ–º—É –¥–ª—è –∏–≥—Ä—ã ¬´–ó–º–µ–π–∫–∞¬ª –±—ã–ª –≤–∑—è—Ç —ç—Ç–æ—Ç &lt;a href="https://github.com/esrlabs/estl-teaser" rel="nofollow"&gt;–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä&lt;/a&gt;, —Ç–∞–∫–∂–µ –∏—Å–ø–æ–ª—å–∑—É—é—â–∏–π —Å—Ç–µ–∫ –≤–º–µ—Å—Ç–æ –∫—É—á–∏ &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –æ—Å–æ–±–∞—è —Ñ–æ—Ä–º–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ &lt;code&gt;new&lt;/code&gt;, –Ω–∞–∑—ã–≤–∞–µ–º–∞—è &lt;em&gt;Placement new&lt;/em&gt;. –î–∞–Ω–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä –Ω–µ –≤—ã–¥–µ–ª—è–µ—Ç –ø–∞–º—è—Ç—å, –∞ –ø–æ–ª—É—á–∞–µ—Ç —Å–≤–æ–∏–º –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º –∞–¥—Ä–µ—Å –Ω–∞ —É–∂–µ –≤—ã–¥–µ–ª–µ–Ω–Ω—É—é –∫–∞–∫–∏–º-–ª–∏–±–æ –æ–±—Ä–∞–∑–æ–º –ø–∞–º—è—Ç—å. –ù–∞–ø—Ä–∏–º–µ—Ä –ø–∞–º—è—Ç—å –ø–æ–¥ –æ–±—ä–µ–∫—Ç ¬´–ó–º–µ–π–∫–∞¬ª –≤—ã–¥–µ–ª—è–µ—Ç—Å—è –≤ —Å—Ç–µ–∫–µ –Ω–∞ —ç—Ç–∞–ø–µ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏, –∞  —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ (–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è) –æ–±—ä–µ–∫—Ç–∞ –≤ –Ω–µ–π –ø—É—Ç—ë–º –≤—ã–∑–æ–≤–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã, —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –º–æ–∂–Ω–æ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–≤–∞—Ç—å ¬´–ó–º–µ–π–∫—É¬ª –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ –∏–≥—Ä—ã&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;–ü–æ–¥ –∫–∞–ø–æ—Ç–æ–º ¬´–ó–º–µ–π–∫–∏¬ª &lt;a href="https://mazko.github.io/blog/posts/2017/05/25/zhizn-posle-rtos-model-aktorov-qpc-uml/"&gt;QP/C++&lt;/a&gt; –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—â–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π UML:&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2017/06/22/s-dlia-mikrokontrollerov-upravlenie-pamiatiu/SMofSnakeAO.png" style="width:100%; border:1px solid #ddd;"&gt;&lt;/p&gt;
&lt;p&gt;–ù–∞ –∫–∞—Ä—Ç–∏–Ω–∫–µ –∏–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫–∏–π –∫–æ–Ω–µ—á–Ω—ã–π –∞–≤—Ç–æ–º–∞—Ç &lt;em&gt;Play&lt;/em&gt; –≥–¥–µ –æ—Ç—Å—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã –¥–ª—è –¥–≤–∏–∂–µ–Ω–∏—è ¬´–ó–º–µ–π–∫–∏¬ª –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –Ω–∞–∂–∞—Ç–∏–µ –æ—Ç –∫–Ω–æ–ø–æ–∫. –ï—Å–ª–∏ –º–µ—Ç–æ–¥ &lt;code&gt;eat_or_move()&lt;/code&gt; –≤–µ—Ä–Ω—ë—Ç &lt;code&gt;false&lt;/code&gt; –ø–µ—Ä–µ—Ö–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ &lt;em&gt;GameOver&lt;/em&gt; –≥–¥–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–±—Ä–∞–Ω–Ω—ã—Ö –æ—á–∫–æ–≤. –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –ª—é–±–æ–π –∫–Ω–æ–ø–∫–∏ —Å–Ω–æ–≤–∞ &lt;em&gt;Play&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;¬´–ó–º–µ–π–∫–∞¬ª –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∏–∑ —Å–µ–±—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –º–∞—Å—Å–∏–≤ —Å–µ–≥–º–µ–Ω—Ç–æ–≤ (–∫–≤–∞–¥—Ä–∞—Ç–∏–∫–æ–≤), –¥–ª—è –µ—ë –ø–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏—è –≤ –∑–∞–¥–∞–Ω–Ω–æ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Å–µ–≥–º–µ–Ω—Ç –≥–æ–ª–æ–≤—ã –≤ –æ–¥–∏–Ω –∫–æ–Ω–µ—Ü –º–∞—Å—Å–∏–≤–∞ –∏ —É–¥–∞–ª–∏—Ç—å —Å–µ–≥–º–µ–Ω—Ç —Ö–≤–æ—Å—Ç–∞ ‚Äî –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç —Å –¥—Ä—É–≥–æ–≥–æ –∫–æ–Ω—Ü–∞. –ù–∞ —ç–∫—Ä–∞–Ω–µ –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ—á–∏—Å—Ç–∏—Ç—å —Ö–≤–æ—Å—Ç –∏ –¥–æ—Ä–∏—Å–æ–≤–∞—Ç—å –≥–æ–ª–æ–≤—É. –ü—Ä–∏ –ø–æ–µ–¥–∞–Ω–∏–∏ –ø–∏—â–∏ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è —Å–µ–≥–º–µ–Ω—Ç –≥–æ–ª–æ–≤—ã, –∞ —Å–µ–≥–º–µ–Ω—Ç —Ö–≤–æ—Å—Ç–∞ –Ω–µ —É–¥–∞–ª—è–µ—Ç—Å—è.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mazko.github.io/blog/posts/2018/03/18/s-dlia-mikrokontrollerov-nabliudatel/"&gt;–î–∞–ª–µ–µ&lt;/a&gt; –ø–∞—Ç—Ç–µ—Ä–Ω ¬´–ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å¬ª.&lt;/p&gt;</content><category term="msp430"></category><category term="QP"></category><category term="UML"></category></entry><entry><title>–ñ–∏–∑–Ω—å –ø–æ—Å–ª–µ RTOS - –º–æ–¥–µ–ª—å –∞–∫—Ç–æ—Ä–æ–≤ QP/C++ | UML</title><link href="https://mazko.github.io/blog/posts/2017/05/25/zhizn-posle-rtos-model-aktorov-qpc-uml/" rel="alternate"></link><published>2017-05-25T00:00:00+03:00</published><updated>2017-05-25T00:00:00+03:00</updated><author><name>Oleg Mazko</name></author><id>tag:mazko.github.io,2017-05-25:/blog/posts/2017/05/25/zhizn-posle-rtos-model-aktorov-qpc-uml/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;–ö–æ–º–ø—å—é—Ç–µ—Ä ‚Äî —ç—Ç–æ –∫–æ–Ω–µ—á–Ω—ã–π –∞–≤—Ç–æ–º–∞—Ç. –ü–æ—Ç–æ–∫–æ–≤–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω—É–∂–Ω–æ —Ç–µ–º, –∫—Ç–æ –Ω–µ —É–º–µ–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω–µ—á–Ω—ã–µ –∞–≤—Ç–æ–º–∞—Ç—ã. ‚Äî –ê–ª–∞–Ω –ö–æ–∫—Å &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://www.state-machine.com/" rel="nofollow"&gt;Quantum Platform&lt;/a&gt; (QP) ‚Äî —ç—Ç–æ —Å–µ–º–µ–π—Å—Ç–≤–æ –ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –≤—Å—Ç—Ä–∞–∏–≤–∞–µ–º–æ–≥–æ –ü–û, –≤ —Ç–æ–º —á–∏—Å–ª–µ –∏ –¥–ª—è –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤. QP –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é –∫–∞–∫ –Ω–∞ &lt;a href="https://mazko.github.io/blog/posts/2017/03/20/s-18-dlia-mikrokontrollerov-razvedka-boem/"&gt;¬´–ø–ª—é—Å–∞—Ö¬ª&lt;/a&gt; (QP/C++), —Ç–∞–∫ –∏ –Ω–∞ –°–∏ (QP/C –∏ QP-nano), —á—Ç–æ ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;–ö–æ–º–ø—å—é—Ç–µ—Ä ‚Äî —ç—Ç–æ –∫–æ–Ω–µ—á–Ω—ã–π –∞–≤—Ç–æ–º–∞—Ç. –ü–æ—Ç–æ–∫–æ–≤–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω—É–∂–Ω–æ —Ç–µ–º, –∫—Ç–æ –Ω–µ —É–º–µ–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω–µ—á–Ω—ã–µ –∞–≤—Ç–æ–º–∞—Ç—ã. ‚Äî –ê–ª–∞–Ω –ö–æ–∫—Å &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://www.state-machine.com/" rel="nofollow"&gt;Quantum Platform&lt;/a&gt; (QP) ‚Äî —ç—Ç–æ —Å–µ–º–µ–π—Å—Ç–≤–æ –ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –≤—Å—Ç—Ä–∞–∏–≤–∞–µ–º–æ–≥–æ –ü–û, –≤ —Ç–æ–º —á–∏—Å–ª–µ –∏ –¥–ª—è –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤. QP –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é –∫–∞–∫ –Ω–∞ &lt;a href="https://mazko.github.io/blog/posts/2017/03/20/s-18-dlia-mikrokontrollerov-razvedka-boem/"&gt;¬´–ø–ª—é—Å–∞—Ö¬ª&lt;/a&gt; (QP/C++), —Ç–∞–∫ –∏ –Ω–∞ –°–∏ (QP/C –∏ QP-nano), —á—Ç–æ –¥–∞—ë—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è —à–∏—Ä–æ–∫–æ–≥–æ —Å–ø–µ–∫—Ç—Ä–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä –∏ —Ü–µ–ª–µ–≤—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º. –í–æ –º–Ω–æ–≥–∏—Ö —Å–ª—É—á–∞—è—Ö QP –º–æ–∂–µ—Ç —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å—Å—è –∫–∞–∫ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ –¥–ª—è &lt;a href="https://mazko.github.io/blog/posts/2017/04/26/freertos-operatsionnaia-sistema-dlia-mikrokontrollerov/"&gt;RT(OS)&lt;/a&gt;, —Ö–æ—Ç—è —Ç–∞–∫–∂–µ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –∏ –ø–æ–≤–µ—Ä—Ö —É–∂–µ –∏–º–µ—é—â–µ–π—Å—è –ø—Ä–∞–≤–æ—Å–ª–∞–≤–Ω–æ–π –û–°.&lt;/p&gt;
&lt;p&gt;–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ QP —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ (–∞–∫—Ç–æ—Ä–æ–≤) —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ —Å–æ–≤–º–µ—Å—Ç–∏—Ç–µ–ª—å—Å—Ç–≤—É –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—Ç –∏–∑ —Å–µ–±—è –∏–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫–∏–µ &lt;a href="https://mazko.github.io/blog/posts/2012/10/09/avtomat-s-konechnym-chislom-sostoianii/"&gt;–∫–æ–Ω–µ—á–Ω—ã–µ –∞–≤—Ç–æ–º–∞—Ç—ã&lt;/a&gt;. –Ø–¥—Ä–æ QP, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏, –ø–æ–∑–≤–æ–ª—è–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–º –æ–±—ä–µ–∫—Ç–∞–º —Ä–∞–±–æ—Ç–∞—Ç—å –ª–∏–±–æ &lt;a href="https://mazko.github.io/blog/posts/2017/02/05/picsimjs-soprogrammy-i-prosteishaia-mnogozadachnost/"&gt;–∫–æ–æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ&lt;/a&gt; QV (Vanilla), –ª–∏–±–æ –∫–∞–∂–¥—ã–π –≤ —Å–≤–æ–µ–π –Ω–∏—Ç–∏ QK. –ê–∫—Ç–∏–≤–Ω—ã–π –æ–±—ä–µ–∫—Ç ‚Äî ¬´–ª–µ–Ω—Ç—è–π¬ª, –æ–Ω —Å–∞–º –ø–æ —Å–µ–±–µ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ—Ç –∫—Ä–æ–º–µ –∫–∞–∫ –æ–∂–∏–¥–∞–µ—Ç &lt;span style="text-decoration:line-through"&gt;–ø–∏–Ω–∫–∞&lt;/span&gt; –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ –µ–≥–æ —Å–æ–±—ã—Ç–∏—è –∏ —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ –Ω–∏—Ö ‚Äî –Ω–∞–ø—Ä–∏–º–µ—Ä –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç —á–µ–≥–æ-–Ω–∏–±—É–¥—å –≤ –ø–æ—Ä—Ç, –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ –Ω–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–ª–∏ –¥–∞–∂–µ &lt;em&gt;–∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ&lt;/em&gt; –æ—Ç—Å—ã–ª–∞–µ—Ç –∫–æ–Ω–µ—á–Ω–æ–µ —á–∏—Å–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–π (—Å–∏–≥–Ω–∞–ª–æ–≤) –¥—Ä—É–≥–∏–º –∞–∫—Ç–∏–≤–Ω—ã–º –æ–±—ä–µ–∫—Ç–∞–º, –ø–æ—Å–ª–µ —á–µ–≥–æ —Å–Ω–æ–≤–∞ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ —Ä–µ–∂–∏–º –æ–∂–∏–¥–∞–Ω–∏—è. –î–ª–∏—Ç–µ–ª—å–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Å–æ–±—ã—Ç–∏—è –∫–∞–∫ –ø—Ä–∞–≤–∏–ª–æ —è–≤–ª—è–µ—Ç—Å—è –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–º, –ø–æ—Å–∫–æ–ª—å–∫—É –ø—Ä–∏ —ç—Ç–æ–º —Å–∞–º –∞–∫—Ç–∏–≤–Ω—ã–π –æ–±—ä–µ–∫—Ç (–∏–ª–∏ –≤–æ–æ–±—â–µ –≤—Å—ë –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ —Å–ª—É—á–∞–µ —Å –∫–æ–æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ —è–¥—Ä–∞) –Ω–µ –º–æ–∂–µ—Ç —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –¥—Ä—É–≥–∏–µ —Å–æ–±—ã—Ç–∏—è –∏ –æ—á–µ–≤–∏–¥–Ω–æ, —á—Ç–æ —Ç–∞–∫–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏—Ç –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏. –ê –Ω–∏–∫—Ç–æ –∏ –Ω–µ –≥–æ–≤–æ—Ä–∏–ª, —á—Ç–æ –±—É–¥–µ—Ç –ª–µ–≥–∫–æ :)&lt;/p&gt;
&lt;p&gt;–ö–æ–¥ –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –º–æ–∂–Ω–æ –Ω–∞–±–∏—Ä–∞—Ç—å –∫–∞–∫ —Ä—É—á–∫–∞–º–∏ –≤ –≤–∏–¥–µ –æ–±—ã—á–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤ (–¥–∞, –≤ –°–∏ –º–æ–∂–Ω–æ —ç–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –∫–ª–∞—Å—Å—ã), —Ç–∞–∫ –∏ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–º –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏—è UML –¥–∏–∞–≥—Ä–∞–º–º —Å–æ—Å—Ç–æ—è–Ω–∏–π QM (QP Modeler) c –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π –∫–æ–¥–∞. –í –¥–∞–Ω–Ω–æ–º –º–∞—Ç–µ—Ä–∏–∞–ª–µ –±—É–¥–µ—Ç –¥–µ–ª–∞—Ç—å—Å—è –∞–∫—Ü–µ–Ω—Ç –Ω–∞ –≤–∏–∑—É–∞–ª—å–Ω–æ–º –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–∏, –≤ —Å–≤—è–∑–∏ —Å —á–µ–º –±—É–¥–µ—Ç –Ω–µ–º–Ω–æ–≥–æ –∫–æ–¥–∞ –∏ –º–Ω–æ–≥–æ –∫—Ä–∞—Å–∏–≤—ã—Ö –∫–∞—Ä—Ç–∏–Ω–æ–∫. –ù–∞—á–Ω—ë–º —Å —Å–∞–º–æ–≥–æ –ø—Ä–æ—Å—Ç–æ–≥–æ ‚Äî &lt;a href="https://state-machine.com/qm/gs_tut.html" rel="nofollow"&gt;–º–∏–≥–∞—é—â–∏—Ö –ª–∞–º–ø–æ—á–µ–∫&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://mazko.github.io/MSP430.js/90df829b292e035384d37749bee1e0f7"&gt;MSP430.js&lt;/a&gt; | &lt;a href="https://mazko.github.io/blog/posts/2017/05/25/zhizn-posle-rtos-model-aktorov-qpc-uml/blinky-qv-msp430-js.zip"&gt;–∏—Å—Ö–æ–¥–Ω–∏–∫–∏&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2017/05/25/zhizn-posle-rtos-model-aktorov-qpc-uml/blink-statechart.png" style="width:100%; border:1px solid #ddd;"&gt;&lt;/p&gt;
&lt;p&gt;–î–ª—è –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞ –Ω—É–∂–Ω–∞ —Ç–æ–ª—å–∫–æ IDE &lt;a href="http://www.ti.com/tool/ccstudio-msp" rel="nofollow"&gt;Code Composer Studio&lt;/a&gt; (CCS), C++ –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä —Ç–∞–º —É–∂–µ –≤—Å—Ç—Ä–æ–µ–Ω. –ü—Ä–æ—à–µ –≤—Å–µ–≥–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Ä–∞–∑—É –≤–µ—Å—å –∞—Ä—Ö–∏–≤ —Å –∏—Å—Ö–æ–¥–Ω–∏–∫–∞–º–∏: File -&amp;gt; Import -&amp;gt; CCS Projects -&amp;gt; Select archive file. –ù–∞ –∫–∞—Ä—Ç–∏–Ω–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∞ —Å—Ä–µ–¥–∞ –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏—è QM –∏ –¥–∏–∞–≥—Ä–∞–º–º–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π UML –º–∏–≥–∞—é—â–∏—Ö –ª–∞–º–ø–æ—á–µ–∫ (—Ñ–∞–π–ª &lt;em&gt;blink.qm&lt;/em&gt; –≤ –∏—Å—Ö–æ–¥–Ω–∏–∫–∞—Ö). –ß–∞—Å—Ç–æ—Ç–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –ª–∞–º–ø–æ—á–µ–∫ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ç–∞–π–º–µ—Ä–∞ –∏ –ø—Ä–∏ &lt;code&gt;BSP::TICKS_PER_SEC&lt;/code&gt; —ç—Ç–æ –æ–¥–Ω–∞ —Å–µ–∫—É–Ω–¥–∞. –î–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–∏–∞–≥—Ä–∞–º–º—ã –≤ –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ —Ç—Ä–µ–±—É–µ—Ç—Å—è –∑–∞–¥–∞—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã —à–∞–±–ª–æ–Ω—ã, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –¥–ª—è QM –Ω—É–∂–Ω–æ —è–≤–Ω–æ –ø—Ä–æ–ø–∏—Å–∞—Ç—å &lt;code&gt;$declare&lt;/code&gt; –∏ &lt;code&gt;$define&lt;/code&gt;. –í –ø—Ä–∏–Ω—Ü–∏–ø–µ –º–æ–∂–Ω–æ –±—ã–ª–æ –±—ã –¥–∞–∂–µ –æ–±–æ–π—Ç–∏—Å—å –∏ –±–µ–∑ —É–∫–∞–∑–∞—Ç–µ–ª—è &lt;code&gt;QP::QActive * const AO_BlinkyPtr&lt;/code&gt;, –æ–Ω –Ω—É–∂–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –ª—É—á—à–µ–π –∏–Ω–∫–∞–ø—Å—É–ª—è—Ü–∏–∏ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ &lt;code&gt;BlinkyAO&lt;/code&gt; ‚Äî —ç—Ç–æ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è &lt;a href="https://mazko.github.io/blog/posts/2012/10/08/idiomy-v-ansi-c/"&gt;–∏–¥–∏–æ–º–∞&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;blinky.h&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#ifndef blinky_h
#define blinky_h

namespace blinky {
    $declare(AOs::AO_BlinkyPtr)
}
// declare other elements...

#endif // project_h
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;blinky.cpp&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#include &amp;quot;qpcpp.h&amp;quot;
#include &amp;quot;blinky.h&amp;quot;
#include &amp;quot;bsp.h&amp;quot;

namespace blinky {

    enum {
        TIMEOUT_SIG = QP::Q_USER_SIG,
    };

    $declare(AOs::BlinkyAO)

    // Local objects -------------------------------------------------------------
    static BlinkyAO __self_ao; // the single instance active object

    // Global-scope objects ------------------------------------------------------
    QP::QActive * const AO_BlinkyPtr = &amp;amp;__self_ao; // &amp;quot;opaque&amp;quot; AO pointer

    $define(AOs::BlinkyAO)

}

// define other elements...
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å —Å–æ–±—ã—Ç–∏—è &lt;code&gt;QEvent&lt;/code&gt; —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ —Å–∏–≥–Ω–∞–ª–∞ &lt;code&gt;QSignal sig&lt;/code&gt; –∏ –ø–æ–ª—è —Å–ª—É–∂–µ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ &lt;code&gt;uint8_t dynamic_&lt;/code&gt;, —ç—Ç–æ—Ç –∫–ª–∞—Å—Å –º–æ–∂–Ω–æ –Ω–∞—Å–ª–µ–¥–æ–≤–∞—Ç—å –∏ –¥–æ–±–∞–≤–ª—è—Ç—å —Ç—É–¥–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è —Å –¥–∞–Ω–Ω—ã–º–∏, —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω—ã–º–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è. –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –¥–æ–ª–∂–Ω—ã –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è –Ω–µ —Å –Ω—É–ª—è –∞ —Å &lt;code&gt;Q_USER_SIG&lt;/code&gt;, —Ç–∞–∫ –∫–∞–∫ –≤ QP —É–∂–µ –µ—Å—Ç—å —Å–∏–≥–Ω–∞–ª—ã, –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º–æ–π, –Ω–∞–ø—Ä–∏–º–µ—Ä &lt;code&gt;Q_EMPTY_SIG&lt;/code&gt;, &lt;code&gt;Q_ENTRY_SIG&lt;/code&gt;, &lt;code&gt;Q_INIT_SIG&lt;/code&gt;, &lt;code&gt;Q_EXIT_SIG&lt;/code&gt;. –í—Å—è –Ω–∏–∑–∫–æ—É—Ä–æ–≤–Ω–µ–≤–∞—è –ª–æ–≥–∏–∫–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∂–µ–ª–µ–∑–∫–æ–π –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ñ–∞–π–ª–µ &lt;em&gt;bsp.cpp&lt;/em&gt; –∏ —Ç–∞–º –∂–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω &lt;a href="https://mazko.github.io/blog/posts/2017/04/27/freertos-diagnostika-oshibok-i-khuki/"&gt;–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫&lt;/a&gt; (–∫—É–¥–∞ –∂ –±–µ–∑ –Ω–∏—Ö —Ç–æ) QP. –ù—É –∞ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ –ø—Ä–æ—Ü–µ—Å—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–∞–º–æ–≥–æ QP –∏ –∑–∞–ø—É—Å–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –≤ –¥–∞–Ω–Ω–æ–º –ø—Ä–æ—Å—Ç–µ–π—à–µ–º —Å–ª—É—á–∞–µ –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;main.cpp&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;qpcpp.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;bsp.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;blinky.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;QP&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;QEvt&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;blinky_queueSto&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;    &lt;span class="c1"&gt;// Event queue storage&lt;/span&gt;

    &lt;span class="n"&gt;BSP&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// initialize the Board Support Package&lt;/span&gt;
    &lt;span class="n"&gt;QP&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;QF&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// initialize the framework and the underlying RT kernel&lt;/span&gt;

    &lt;span class="c1"&gt;// publish-subscribe not used, no call to QF::psInit()&lt;/span&gt;
    &lt;span class="c1"&gt;// dynamic event allocation not used, no call to QF::poolInit()&lt;/span&gt;

    &lt;span class="n"&gt;blinky&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;AO_BlinkyPtr&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1U&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                   &lt;span class="c1"&gt;// priority&lt;/span&gt;
                     &lt;span class="n"&gt;blinky_queueSto&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Q_DIM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;blinky_queueSto&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="c1"&gt;// event queue&lt;/span&gt;
                     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0U&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;                  &lt;span class="c1"&gt;// stack (unused)&lt;/span&gt;


    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;QP&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;QF&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// run the QF application&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–° –º–∏–≥–∞—é—â–∏–º–∏ –ª–∞–º–ø–æ—á–∫–∞–º–∏ –≤—Å—ë –ø–æ–Ω—è—Ç–Ω–æ, –Ω–æ –Ω—É–∂–Ω–æ —á—Ç–æ-—Ç–æ –ø–æ–∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–π ‚Äî –ø—Ä–µ–¥–ª–∞–≥–∞—é –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –∞–Ω–∞–ª–æ–≥ –¥–ª—è —Ä–∞–Ω–µ–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø–æ–¥ &lt;a href="https://mazko.github.io/blog/posts/2017/04/29/freertos-obmen-dannymi-mezhdu-zadachami/"&gt;FreeRTOS&lt;/a&gt;. –í —Å–∏—Å—Ç–µ–º–µ —Ç—Ä–∏ –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–∞ ‚Äî –ª–µ–≤—ã–µ –ª–∞–º–ø–æ—á–∫–∏, –ø—Ä–∞–≤—ã–µ –ª–∞–º–ø–æ—á–∫–∏ –∏ –¥–∏—Å–ø–ª–µ–π. –ö–æ–æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–µ —è–¥—Ä–æ QP –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å—Ä–∞–∑—É –∂–µ –∑–∞–±—ã—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–µ &lt;a href="https://mazko.github.io/blog/posts/2017/04/28/freertos-sovmestnyi-dostup-k-obshchim-resursam/"&gt;–∞—Ç–æ–º–∞—Ä–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞&lt;/a&gt; —Å –ø–æ—Ä—Ç–∞–º. –¢–µ–ø–µ—Ä—å —Å–∞–º–æ–µ –≤—Ä–µ–º—è —á—É—Ç—å –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –Ω–∞ —Å–æ–±—ã—Ç–∏—è—Ö –∏ –∫–∞–∫–∏–º–∏ –æ–Ω–∏ –±—ã–≤–∞—é—Ç. –ò—Ç–∞–∫ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –≥–ª–æ–±–∞–ª—å–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –æ—Ç –∫–Ω–æ–ø–æ–∫ &lt;code&gt;BTNS_LEFT_SIG&lt;/code&gt; –∏ &lt;code&gt;BTNS_RIGHT_SIG&lt;/code&gt;. –°–æ–±—ã—Ç–∏—è –≤ QP –±—ã–≤–∞—é—Ç –¥–≤—É—Ö –≤–∏–¥–æ–≤:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;—Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ ‚Äî –Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã–µ (immutable) —Å–æ–±—ã—Ç–∏—è. –ó–∞ —Å–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–æ–±—ã—Ç–∏—è –æ—Ç–≤–µ—á–∞–µ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. –í –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ –æ–±–∞ —Å–æ–±—ã—Ç–∏—è —Å–æ–¥–µ—Ä–∂–∞—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ, –∏—Ö –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è –∏ —Ç–∞–∫–∏–µ —Å–æ–±—ã—Ç–∏—è –Ω–µ –ø–æ–ø–∞–¥–∞—é—Ç –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;–¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ ‚Äî —Å–æ–∑–¥–∞—é—Ç—Å—è –º–∞–∫—Ä–æ—Å–æ–º &lt;code&gt;Q_NEW&lt;/code&gt; –≤ –æ–±–ª–∞—Å—Ç–∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π –ø–∞–º—è—Ç–∏ –∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –Ω–µ –±—É–¥—É—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã –≤—Å–µ–º–∏ –∞–∫—Ç–∏–≤–Ω—ã–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–º –æ–Ω–∏ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω—ã. –î–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö —Å–æ–±—ã—Ç–∏–π –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø—É–ª —Å –ø–æ–º–æ—â—å—é –≤—ã–∑–æ–≤–∞ &lt;code&gt;QP::QF::poolInit&lt;/code&gt;. –¢–∞–∫ —Å–æ–∑–¥–∞—ë—Ç—Å—è —Å–æ–±—ã—Ç–∏–µ –æ—Ç –∫–Ω–æ–ø–æ–∫ &lt;code&gt;BtnEvt *btnEvt = Q_NEW(BtnEvt, BTNS_LEFT_SIG); btnEvt-&amp;gt;value = 42;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;–í –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ –≤—Å–µ–º—É –¥–ª—è –±–æ–ª–µ–µ —Ä–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ QP –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –¥–≤–∞ —Å–ø–æ—Å–æ–±–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;–Ω–∞–ø—Ä—è–º—É—é ‚Äî –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å —è–≤–Ω–æ –≤—ã–∑—ã–≤–∞–µ—Ç –º–µ—Ç–æ–¥ —É —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª—è. –ù–∞–ø—Ä–∏–º–µ—Ä –º–æ–∂–Ω–æ –ø–æ—Å–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–∞–º–æ–º—É —Å–µ–±–µ &lt;code&gt;me-&amp;gt;POST(&amp;amp;UPDATE_EVENT, me)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;–º—É–ª—å—Ç–∏–∫–∞—Å—Ç ‚Äî –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –Ω–∏—á–µ–≥–æ –Ω–µ –∑–Ω–∞–µ—Ç –æ –ø–æ–ª—É—á–∞—Ç–µ–ª—è—Ö, –∫–∞–∂–¥—ã–π –ø–æ–ª—É—á–∞—Ç–µ–ª—å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è / –æ—Ç–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –æ—Ç –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏—Ö –µ–≥–æ —Å–æ–±—ã—Ç–∏–π. –¢–∞–∫–æ–π —Å–ø–æ—Å–æ–± —Ö–æ—Ä–æ—à–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –∫–Ω–æ–ø–æ–∫. –î–ª—è –º—É–ª—å—Ç–∏–∫–∞—Å—Ç–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –ø—É–ª —Å –ø–æ–º–æ—â—å—é –≤—ã–∑–æ–≤–∞ &lt;code&gt;QP::QF::psInit&lt;/code&gt;. –¢–∞–∫ –æ—Ç—Å—ã–ª–∞–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∫–Ω–æ–ø–æ–∫ &lt;code&gt;QP::QF::PUBLISH(btnEvt, (void *)0);&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2017/05/25/zhizn-posle-rtos-model-aktorov-qpc-uml/r.png" style="width:55%; margin: 0 auto; display:block; border:1px solid #ddd;"&gt;&lt;/p&gt;
&lt;p&gt;–ù–∞ —Ä–∏—Å—É–Ω–∫–µ –¥–∏–∞–≥—Ä–∞–º–º–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ —Å –ø—Ä–∞–≤—ã–º–∏ –ª–∞–º–ø–æ—á–∫–∞–º–∏. –£ –Ω–µ–≥–æ –æ–¥–Ω–æ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ —á—Ç–æ –æ–Ω –¥–µ–ª–∞–µ—Ç —ç—Ç–æ —Å–ª—É—à–∞–µ—Ç –∫–Ω–æ–ø–∫—É –∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –µ—ë –∑–Ω–∞—á–µ–Ω–∏—è —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ü–≤–µ—Ç –¥–ª—è –ø—Ä–∞–≤—ã—Ö –ª–∞–º–ø–æ—á–µ–∫. –°–æ–±—ã—Ç–∏–µ –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–ª–∂–Ω–æ –º–µ–Ω—è—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞, —Ä–µ–∞–∫—Ü–∏—è –Ω–∞ —Å–æ–±—ã—Ç–∏–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ª—é–±–æ–π –Ω–∞ —É—Å–º–æ—Ç—Ä–µ–Ω–∏–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞.&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2017/05/25/zhizn-posle-rtos-model-aktorov-qpc-uml/d.png" style="width:55%; margin: 0 auto; display:block; border:1px solid #ddd;"&gt;&lt;/p&gt;
&lt;p&gt;–ó–¥–µ—Å—å –∞–∫—Ç–∏–≤–Ω—ã–π –æ–±—ä–µ–∫—Ç –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è –≤—ã–≤–æ–¥–æ–º –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –¥–∏—Å–ø–ª–µ–π, –æ—Ç—Å—ã–ª–∞—è —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–∞–º–æ–º—É —Å–µ–±–µ. –î–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –ø–∞–º—è—Ç–∏ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ —Å–æ–±—ã—Ç–∏–µ DISPLAY_UPDATE –º–æ–∂–µ—Ç –±—ã—Ç—å &lt;strong&gt;—Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–º&lt;/strong&gt; &lt;code&gt;static QP::QEvt const UPDATE_EVENT = { DISPLAY_UPDATE_SIG, 0U, 0U };&lt;/code&gt; —Ç.–∫. –Ω–∏–∫–∞–∫–∏—Ö –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π —Å –¥–∞–Ω–Ω—ã–º–∏ –≤ –Ω—ë–º –Ω–µ—Ç. –í —Ç–µ–∫—É—â–µ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —É –¥–∞–Ω–Ω–æ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞–∏–º–µ–Ω—å—à–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –≤ —Å–∏—Å—Ç–µ–º–µ.&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2017/05/25/zhizn-posle-rtos-model-aktorov-qpc-uml/l.png" style="width:100%; border:1px solid #ddd;"&gt;&lt;/p&gt;
&lt;p&gt;–ê–∫—Ç–∏–≤–Ω—ã–π –æ–±—ä–µ–∫—Ç –¥–ª—è –ª–µ–≤—ã—Ö –ª–∞–º–ø–æ—á–µ–∫ —Å–∞–º—ã–π –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π. –¢—É—Ç &lt;strong&gt;–∏–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫–∏–π&lt;/strong&gt; –∫–æ–Ω–µ—á–Ω—ã–π –∞–≤—Ç–æ–º–∞—Ç. –ò–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫–∏–π –∞–≤—Ç–æ–º–∞—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –≤ —Å–µ–±–µ –¥—Ä—É–≥–∏–µ –∞–≤—Ç–æ–º–∞—Ç—ã. –í –∫–∞–∫–æ–º –±—ã —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –∞–∫—Ç–∏–≤–Ω—ã–π –æ–±—ä–µ–∫—Ç –¥–ª—è –ª–µ–≤—ã—Ö –ª–∞–º–ø–æ—á–µ–∫, –æ–Ω –≤—Å–µ–≥–¥–∞ —Å–ª—É—à–∞–µ—Ç —Å–æ–±—ã—Ç–∏–µ –æ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–æ—á–∫–µ, —Ä–µ–∞–∫—Ü–∏—è –Ω–∞ —Å–æ–±—ã—Ç–∏–µ –æ–¥–∏–Ω–∞–∫–æ–≤–∞—è. –ò–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫–∏–π –∞–≤—Ç–æ–º–∞—Ç –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏–∑–±–µ–∂–∞—Ç—å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è ‚Äì –ø—Ä–æ—â–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Ç—Ä–µ–±—É–µ–º–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –æ–¥–∏–Ω —Ä–∞–∑ –≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏, —á–µ–º –ø–æ–≤—Ç–æ—Ä—è—Ç—å –æ–¥–Ω—É –∏ —Ç—É –∂–µ –ª–æ–≥–∏–∫—É –≤ –¥–æ—á–µ—Ä–Ω–∏—Ö —Å–æ—Å—Ç–æ—è–Ω–∏—è—Ö. –ï—â–µ –æ–¥–∏–Ω –ø–æ–ª–µ–∑–Ω—ã–π –ø—Ä–∏—ë–º, –ø–æ–∑–≤–æ–ª—è—é—â–∏–π –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —É–ø—Ä–æ—Å—Ç–∏—Ç—å –∂–∏–∑–Ω—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É ‚Äì –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π (Transition to History), –ª–∞–º–ø–æ—á–∫–∏ –ø–æ–º–Ω—è—Ç —Å–≤–æ–π —Ü–≤–µ—Ç –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –º–∏–≥–∞–Ω–∏—è.  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://mazko.github.io/MSP430.js/bd5dbe0259a4c493e612fd8f3fa3fbd3"&gt;MSP430.js&lt;/a&gt; | &lt;a href="https://mazko.github.io/blog/posts/2017/05/25/zhizn-posle-rtos-model-aktorov-qpc-uml/3ao-qv-msp430-js.zip"&gt;–∏—Å—Ö–æ–¥–Ω–∏–∫–∏&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;–ö QP –ø—Ä–∏–ª–∞–≥–∞–µ—Ç—Å—è —Å–µ—Ä—å—ë–∑–Ω–∞—è –∫–Ω–∏–≥–∞ ¬´Practical UML Statecharts in C/C++, Second Edition: Event-Driven Programming for Embedded Systems¬ª –æ—Ç –æ—Å–Ω–æ–≤–∞—Ç–µ–ª—è –∫–æ–º–ø–∞–Ω–∏–∏ Quantum Leaps. –í –¥–∞–Ω–Ω–æ–π –∫–Ω–∏–≥–µ –µ—Å—Ç—å –æ—Ç–¥–µ–ª—å–Ω–∞—è –≥–ª–∞–≤–∞ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —á–∞—Å—Ç–æ –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è –ø—Ä–∏ –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–Ω–µ—á–Ω—ã—Ö –∞–≤—Ç–æ–º–∞—Ç–æ–≤. –ù–∞ —Å–∞–π—Ç–µ Quantum Leaps —Ç–∞–∫–∂–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–±—É—á–∞—é—â–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ –ø–æ–ª–µ–∑–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ QP –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π ‚Äì &lt;a href="https://mazko.github.io/blog/posts/2014/03/29/tdd-na-urovne-mikrokontrollerov-svezhii-vzgliad/"&gt;—é–Ω–∏—Ç —Ç–µ—Å—Ç—ã&lt;/a&gt; QUTest, QSpy.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mazko.github.io/blog/posts/2017/06/22/s-dlia-mikrokontrollerov-upravlenie-pamiatiu/"&gt;–î–∞–ª–µ–µ&lt;/a&gt; –∏–≥—Ä–∞ ¬´–ó–º–µ–π–∫–∞¬ª –Ω–∞ QP/C++.&lt;/p&gt;</content><category term="msp430"></category><category term="QP"></category><category term="UML"></category><category term="FSM"></category><category term="RTOS"></category></entry><entry><title>uGFX - –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ GUI –¥–ª—è –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤</title><link href="https://mazko.github.io/blog/posts/2017/05/20/ugfx-biblioteka-gui-dlia-mikrokontrollerov/" rel="alternate"></link><published>2017-05-20T00:00:00+03:00</published><updated>2017-05-20T00:00:00+03:00</updated><author><name>Oleg Mazko</name></author><id>tag:mazko.github.io,2017-05-20:/blog/posts/2017/05/20/ugfx-biblioteka-gui-dlia-mikrokontrollerov/</id><summary type="html">&lt;p&gt;–ö–æ–≥–¥–∞ –≥–æ–≤–æ—Ä—è—Ç –ø—Ä–æ –≥—Ä–∞—Ñ–∏–∫—É –¥–ª—è –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤, —Ç–æ –æ–±—ã—á–Ω–æ –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞—é—Ç —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–æ –Ω–µ–±–æ–ª—å—à–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥—Ä–∞—Ñ–∏–∫–∏ –Ω–∏–∑–∫–æ–≥–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è —Å –º–∏–Ω–∏–º—É–º –∞–Ω–∏–º–∞—Ü–∏–∏ ‚Äî —ç—Ç–æ –æ–±—É—Å–ª–æ–≤–ª–µ–Ω–æ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –≤—ã—Å–æ–∫–∏–º–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏ –∫ –±—ã—Å—Ç—Ä–æ–¥–µ–π—Å—Ç–≤–∏—é –∏ –æ–±—ä–µ–º—É –û–ó–£. –ï—Å–ª–∏ –≤—Å—è –≥—Ä–∞—Ñ–∏–∫–∞ —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ —Å–≤–æ–¥–∏—Ç—Å—è –∫ –≤—ã–≤–æ–¥—É —á–∏—Å–ª–æ–≤–æ–π –∏–ª–∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, —Ç–æ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–º —Ä–µ—à–µ–Ω–∏–µ–º –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ª–∏–±–æ &lt;a href="https://mazko.github.io/blog/posts/2017/01/16/picsimjs-semisegmentnyi-indikator-i-preryvaniia/"&gt;—Å–µ–≥–º–µ–Ω—Ç–Ω—ã—Ö&lt;/a&gt;, –ª–∏–±–æ —Å–∏–º–≤–æ–ª—å–Ω—ã—Ö ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;–ö–æ–≥–¥–∞ –≥–æ–≤–æ—Ä—è—Ç –ø—Ä–æ –≥—Ä–∞—Ñ–∏–∫—É –¥–ª—è –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤, —Ç–æ –æ–±—ã—á–Ω–æ –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞—é—Ç —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–æ –Ω–µ–±–æ–ª—å—à–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥—Ä–∞—Ñ–∏–∫–∏ –Ω–∏–∑–∫–æ–≥–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è —Å –º–∏–Ω–∏–º—É–º –∞–Ω–∏–º–∞—Ü–∏–∏ ‚Äî —ç—Ç–æ –æ–±—É—Å–ª–æ–≤–ª–µ–Ω–æ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –≤—ã—Å–æ–∫–∏–º–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏ –∫ –±—ã—Å—Ç—Ä–æ–¥–µ–π—Å—Ç–≤–∏—é –∏ –æ–±—ä–µ–º—É –û–ó–£. –ï—Å–ª–∏ –≤—Å—è –≥—Ä–∞—Ñ–∏–∫–∞ —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ —Å–≤–æ–¥–∏—Ç—Å—è –∫ –≤—ã–≤–æ–¥—É —á–∏—Å–ª–æ–≤–æ–π –∏–ª–∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, —Ç–æ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–º —Ä–µ—à–µ–Ω–∏–µ–º –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ª–∏–±–æ &lt;a href="https://mazko.github.io/blog/posts/2017/01/16/picsimjs-semisegmentnyi-indikator-i-preryvaniia/"&gt;—Å–µ–≥–º–µ–Ω—Ç–Ω—ã—Ö&lt;/a&gt;, –ª–∏–±–æ —Å–∏–º–≤–æ–ª—å–Ω—ã—Ö –¥–∏—Å–ø–ª–µ–µ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –Ω–∞ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–µ &lt;a href="https://mazko.github.io/blog/posts/2017/01/27/picsimjs-simvolnyi-displei-na-baze-hd44780/"&gt;HD44780&lt;/a&gt;). –ï—Å–ª–∏ –∂–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è –≤—ã–≤–æ–¥ –Ω–µ —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–π, –Ω–æ –∏ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ (–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –≥—Ä–∞—Ñ–∏–∫–∏, –¥–∏–∞–≥—Ä–∞–º–º—ã, –∞–Ω–∏–º–∞—Ü–∏—è) –∏ –ø–æ–ø—É—Ç–Ω–æ –æ–±–µ—Å–ø–µ—á–∏—Ç—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ–º –ø–æ—Å—Ä–µ–¥—Å—Ç–≤–æ–º –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–≥–æ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ (GUI), —Ç–æ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;—É –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä–µ—Å—É—Ä—Å–æ–≤ ‚Äî –Ω–∞–ø—Ä–∏–º–µ—Ä 1–ö–±–∞–π—Ç –û–ó–£ –Ω—É–∂–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è –∫–∞–¥—Ä–æ–≤–æ–≥–æ –±—É—Ñ–µ—Ä–∞ –¥–≤—É—Ö—Ü–≤–µ—Ç–Ω–æ–≥–æ –¥–∏—Å–ø–ª–µ—è 128x64, –∞ –¥–ª—è —Ü–≤–µ—Ç–Ω—ã—Ö –¥–∏—Å–ø–ª–µ–µ–≤ –ø–æ–º–Ω–æ–∂–∏—Ç—å –µ—â—ë –∏ –Ω–∞ –≥–ª—É–±–∏–Ω—É —Ü–≤–µ—Ç–∞ (–±–∏—Ç–Ω–æ—Å—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;–≤–≤–∏–¥—É —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–π —á–∞—Å—Ç–∏ —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å —Å –Ω—É–ª—è —Å–ª–æ–∂–Ω—ã–π –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–∞–ª–µ–∫–æ –Ω–µ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ ‚Äî –∫—É–¥–∞ –ø—Ä–æ—â–µ –∏ –Ω–∞–¥—ë–∂–Ω–µ–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—É—é –≥—Ä–∞—Ñ–∏—á–µ—Å–∫—É—é –±–∏–±–ª–∏–æ—Ç–µ–∫—É, —á–µ–º –∑–∞–Ω–æ–≤–æ –∏–∑–æ–±—Ä–µ—Ç–∞—Ç—å –≤–µ–ª–æ—Å–∏–ø–µ–¥&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;uGFX ‚Äî –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–æ –Ω–µ–∑–∞–≤–∏—Å–∏–º–∞—è, –º–æ–¥—É–ª—å–Ω–∞—è –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞, –Ω–∞–ø–∏—Å–∞–Ω–Ω–∞—è –Ω–∞ –°–∏ –∏ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–∞—è –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏ –¥–∏—Å–ø–ª–µ–µ–≤ –∏ —Å–µ–Ω—Å–æ—Ä–Ω—ã–º–∏ –ø–∞–Ω–µ–ª—è–º–∏ –≤–æ –≤—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã—Ö —Å–∏—Å—Ç–µ–º–∞—Ö. –ò–∑ –∫–æ—Ä–æ–±–∫–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤ –≤ –≤–∏–¥–µ –≥–æ—Ç–æ–≤—ã—Ö –¥—Ä–∞–π–≤–µ—Ä–æ–≤, –∞ –æ—Ç –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞ –ª–∏—à—å —Ç—Ä–µ–±—É–µ—Ç—Å—è –≤–∑—è—Ç—å —à–∞–±–ª–æ–Ω –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ –∏ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–∞—Ä–æ—á–∫—É —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ–±–º–µ–Ω–∞ –¥–∞–Ω–Ω—ã–º–∏ –º–µ–∂–¥—É –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–º –∏ –¥–∏—Å–ø–ª–µ–µ–º. –£ –Ω–∞—Å –¥–∏—Å–ø–ª–µ–π &lt;a href="https://mazko.github.io/blog/posts/2017/04/25/monokhromnyi-oled-displei-na-kontrollere-ssd1306/"&gt;SSD1306&lt;/a&gt;, –∞ –≤ —à–∞–±–ª–æ–Ω–µ &lt;em&gt;board_SSD1306.h&lt;/em&gt; —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã —Ç–æ–ª—å–∫–æ –¥–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏ ‚Äî –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –∏ –∑–∞–ø–∏—Å—å –∫–æ–º–∞–Ω–¥.&lt;/p&gt;
&lt;p&gt;–ï—â—ë uGFX –º–æ–∂–Ω–æ –ª–µ–≥–∫–æ —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞—Ç—å –¥–ª—è –Ω–∞—Å—Ç–æ–ª—å–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º (Linux, Windows, Mac OS), —á—Ç–æ –≤–µ—Å—å–º–∞ —É–¥–æ–±–Ω–æ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø—Ä–æ—Ç–æ—Ç–∏–ø–∏—Ä–æ–≤–∞–Ω–∏—è –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–π —á–∞—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø—Ä—è–º–æ –Ω–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–º –∫–æ–º–ø—å—é—Ç–µ—Ä–µ –±–µ–∑ –ø–µ—Ä–µ–ø—Ä–æ—à–∏–≤–∫–∏ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://mazko.github.io/MSP430.js/a3b85b45081d40a4fdbf2a95af723b1c"&gt;MSP430.js&lt;/a&gt; | &lt;a href="https://mazko.github.io/blog/posts/2017/05/20/ugfx-biblioteka-gui-dlia-mikrokontrollerov/ugfx.draw.msp430.js.zip"&gt;–∏—Å—Ö–æ–¥–Ω–∏–∫–∏&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2017/05/20/ugfx-biblioteka-gui-dlia-mikrokontrollerov/ui.gif" style="width:55%; margin: 0 auto; display:block;"&gt;&lt;/p&gt;
&lt;p&gt;–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ uGFX —Ä–∞–∑–¥–µ–ª–µ–Ω–∞ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–æ–¥—É–ª–µ–π, –Ω–∞–ø—Ä–∏–º–µ—Ä –º–æ–¥—É–ª–∏ GDISP, GINPUT –æ—Ç–≤–µ—á–∞—é—Ç –∑–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∏—Å–ø–ª–µ–µ–º –∏ –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Å–µ–Ω—Å–æ—Ä–Ω–æ–π –ø–∞–Ω–µ–ª–∏ / –∫–Ω–æ–ø–æ–∫. –û—Ç–∫–ª—é—á–∏–≤ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –º–æ–¥—É–ª–∏, –º–æ–∂–Ω–æ –¥–æ–±–∏—Ç—å—Å—è –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Å–Ω–∏–∂–µ–Ω–∏—è –æ–±—ä–µ–º–∞ –ø—Ä–æ—à–∏–≤–∫–∏. –ë–æ–ª–µ–µ —Ç–æ–≥–æ —Å–∞–º–∏ –º–æ–¥—É–ª–∏ —Ç–æ–∂–µ –º–æ–∂–Ω–æ –≥–∏–±–∫–æ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –ø—É—Ç–µ–º –∑–∞–¥–∞–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏–π –º–∞–∫—Ä–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è–º –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–º —Ñ–∞–π–ª–µ &lt;em&gt;gfxconf.h&lt;/em&gt;, –∫–æ—Ç–æ—Ä—ã–π –¥–æ–ª–∂–µ–Ω –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –∫–∞–∂–¥–æ–º –ø—Ä–æ–µ–∫—Ç–µ, –∏—Å–ø–æ–ª—å–∑—É—é—â–µ–º uGFX. –¢–∞–∫, –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –º–æ–¥—É–ª—è GDISP –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å—Ç—Ä–æ–∫—É &lt;code&gt;#define GFX_USE_GDISP TRUE&lt;/code&gt;. –ù—É –∞ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø—Ä–∏–º–µ—Ä–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–∞–º–æ–≥–æ –º–æ–¥—É–ª—è GDISP –º–æ–∂–µ—Ç –±—ã—Ç—å –º–∞–∫—Ä–æ—Å &lt;code&gt;#define GDISP_NEED_STARTUP_LOGO TRUE&lt;/code&gt;, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –∫—Ä–∞—Ç–∫–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –≤—ã–≤–æ–¥ –ª–æ–≥–æ—Ç–∏–ø–∞ uGFX –Ω–∞ –¥–∏—Å–ø–ª–µ–π —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ —Å—Ç–∞—Ä—Ç–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã.&lt;/p&gt;
&lt;p&gt;–°–ª–µ–¥—É—é—â–∏–π –ø—Ä–∏–º–µ—Ä –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É —Å –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–º–∏ –ø—Ä–∏–º–∏—Ç–∏–≤–∞–º–∏, –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è –≤ uGFX. –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ API –∏–¥—É—Ç –≤ –ø–∞—Ä–µ ‚Äî –∫–æ–Ω—Ç—É—Ä –∏–ª–∏ –∑–∞–∫—Ä–∞—Å–∫–∞. –í uGFX –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –æ–±—â–µ–ø—Ä–∏–Ω—è—Ç–∞—è –≤ –º–∞—à–∏–Ω–Ω–æ–π –≥—Ä–∞—Ñ–∏–∫–µ –¥–µ–∫–∞—Ä—Ç–æ–≤–∞ —Å–∏—Å—Ç–µ–º–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç —Å –Ω–∞—á–∞–ª–æ–º –æ—Ç—Å—á–µ—Ç–∞ –≤ –≤–µ—Ä—Ö–Ω–µ–º –ª–µ–≤–æ–º —É–≥–ª—É:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;main.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;gfx.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;show&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;delaytime_t&lt;/span&gt; &lt;span class="n"&gt;ms&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;gdispFlush&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;gfxSleepMilliseconds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ms&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;gdispClear&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Black&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;gdispFlush&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Initialize and clear the display&lt;/span&gt;
    &lt;span class="n"&gt;gfxInit&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;coord_t&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gdispGetHeight&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gdispGetWidth&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="c1"&gt;// –†–∏—Å–æ–≤–∞–Ω–∏–µ –ø–æ –ø–∏–∫—Å–µ–ª—è–º&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;coord_t&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;coord_t&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;gdispDrawPixel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;White&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4444&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// –∫–∏—Ä–∏–ª–ª–∏—Ü–∞&lt;/span&gt;
    &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;font_t&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gdispOpenFont&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Archangelsk Regular 12&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;–í—Å–µ –ë—É–¥–µ –î–æ–±—Ä–µ&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;gdispDrawString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;gdispGetStringWidth&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;White&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="n"&gt;sprintf&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;%dx%d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;gdispDrawString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;gdispGetStringWidth&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;White&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4444&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// –ª–∏–Ω–∏–∏&lt;/span&gt;
        &lt;span class="n"&gt;gdispDrawLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;White&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;gdispDrawLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;White&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;gdispDrawLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;White&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;gdispDrawLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;White&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4444&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="c1"&gt;// –ü—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∏&lt;/span&gt;
        &lt;span class="n"&gt;gdispDrawBox&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;White&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;gdispFillArea&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;White&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;gdispDrawRoundedBox&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;White&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;gdispFillRoundedBox&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;White&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4444&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="c1"&gt;// –û–∫—Ä—É–∂–Ω–æ—Å—Ç—å, –∫—Ä—É–≥, —ç–ª–ª–∏–ø—Å—ã&lt;/span&gt;
        &lt;span class="n"&gt;gdispDrawCircle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;White&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;gdispDrawEllipse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;White&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;gdispFillCircle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;White&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;gdispFillEllipse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;White&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4444&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="c1"&gt;// –î—É–≥–∞ –∏ —Å–µ–∫—Ç–æ—Ä&lt;/span&gt;
        &lt;span class="n"&gt;gdispFillArc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;White&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;gdispDrawArc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;White&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;gdispFillArc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;270&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;White&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;gdispDrawArc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;270&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;White&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4444&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="c1"&gt;// –º–Ω–æ–≥–æ—É–≥–æ–ª—å–Ω–∏–∫ (–ø–æ–ª–∏–≥–æ–Ω)&lt;/span&gt;
        &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;point&lt;/span&gt; &lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;GDISP_SCREEN_WIDTH&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GDISP_SCREEN_HEIGHT&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;GDISP_SCREEN_WIDTH&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GDISP_SCREEN_HEIGHT&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="n"&gt;gdispDrawPoly&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt; &lt;span class="n"&gt;White&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;gdispFillConvexPoly&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt; &lt;span class="n"&gt;White&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4444&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;   
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ü–æ –≤—ã–≤–æ–¥—É —Ç–µ–∫—Å—Ç–∞ –ø–æ–∂–∞–ª—É–π —Å—Ç–æ–∏—Ç –ø—Ä–æ–π—Ç–∏—Å—å –æ—Ç–¥–µ–ª—å–Ω–æ. –¢—É—Ç –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ uGFX –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –≤–ø–µ—á–∞—Ç–ª—è—é—â–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏, –æ—Å–æ–±–µ–Ω–Ω–æ —É—á–∏—Ç—ã–≤–∞—è –∏–∑–Ω–∞—á–∞–ª—å–Ω—ã–µ –≤—ã—Å–æ–∫–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;—Ä–∞–∑–ª–∏—á–Ω—ã–µ —à—Ä–∏—Ñ—Ç—ã (–≤ –æ–¥–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑–Ω—ã—Ö —à—Ä–∏—Ñ—Ç–æ–≤)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;–∏–º–µ–µ—Ç—Å—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π —à—Ä–∏—Ñ—Ç&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;–ø–æ–¥–¥–µ—Ä–∂–∫–∞ Unicode –∏ —Å—Ç–∞–ª–æ –±—ã—Ç—å –∫–∏—Ä–∏–ª–ª–∏—Ü—ã&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;—Å–≥–ª–∞–∂–∏–≤–∞–Ω–∏–µ (anti-aliased)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;–∫–µ—Ä–Ω–∏–Ω–≥ (—É–ø–ª–æ—Ç–Ω–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∑–∞ —Å—á–µ—Ç —Å–¥–≤–∏–≥–∞ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –±—É–∫–≤ –¥—Ä—É–≥ –∫ –¥—Ä—É–≥—É)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;–≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –ø–æ –ª–µ–≤–æ–º—É, –ø—Ä–∞–≤–æ–º—É –∫—Ä–∞—é –∏–ª–∏ –ø–æ—Å–µ—Ä–µ–¥–∏–Ω–µ&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;API –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞ –¥–ª–∏–Ω—ã —Å—Ç—Ä–æ–∫–∏ —Å –∑–∞–¥–∞–Ω–Ω—ã–º —à—Ä–∏—Ñ—Ç–æ–º –≤ –ø–∏–∫—Å–µ–ª—è—Ö –ø–µ—Ä–µ–¥ –≤—ã–≤–æ–¥–æ–º –µ–µ –Ω–∞ —ç–∫—Ä–∞–Ω &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;–°–ª–µ–¥—É—é—â–∏–π –Ω–µ –º–µ–Ω–µ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –ø—Ä–∏–º–µ—Ä –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ uGFX –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞—Ä—Ç–∏–Ω–æ–∫ –∏ –¥–∞–∂–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –Ω–∞ –±–∞–∑–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∏—Ö –Ω–∏—Ö –Ω–∞ –ø—Ä–∏–º–µ—Ä–µ –∫–æ—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π —É–º–µ–µ—Ç —Å–ø–∞—Ç—å, —Ç–æ—á–∏—Ç—å –∫–æ–≥—Ç–∏ –∏ –≤—Å—ë —Ç–∞–∫–æ–µ.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://mazko.github.io/MSP430.js/48d80b182518a31aecac3beb4cef52a6"&gt;MSP430.js&lt;/a&gt; | &lt;a href="https://mazko.github.io/blog/posts/2017/05/20/ugfx-biblioteka-gui-dlia-mikrokontrollerov/ugfx.cat.msp430.js.zip"&gt;–∏—Å—Ö–æ–¥–Ω–∏–∫–∏&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2017/05/20/ugfx-biblioteka-gui-dlia-mikrokontrollerov/ui-cat.gif" style="width:55%; margin: 0 auto; display:block;"&gt;&lt;/p&gt;
&lt;p&gt;–í –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏–º–µ—Ä–∞—Ö RTOS –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∞—Å—å, –æ–¥–Ω–∞–∫–æ –≤ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º –∞—Ä—Ö–∏–≤–µ —Å –∏—Å—Ö–æ–¥–Ω–∏–∫–∞–º–∏ uGFX –µ—Å—Ç—å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ø—Ä–∏–º–µ—Ä–æ–≤ –≤ —Ç–æ–º —á–∏—Å–ª–µ —Å &lt;a href="https://mazko.github.io/blog/posts/2017/04/26/freertos-operatsionnaia-sistema-dlia-mikrokontrollerov/"&gt;FreeRTOS&lt;/a&gt; –∏ –¥–∞–∂–µ Raspberry Pi —Å –≥–æ–ª—ã–º Linux –Ω–∞ –±–æ—Ä—Ç—É. –í –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ –≤—Å–µ–º—É –µ—Å—Ç—å –¥–∞–∂–µ –æ—Ç–¥–µ–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∫–∞ ¬µGFX-Studio (Windows, Linux and Mac OS X) –¥–ª—è –¥–∏–∑–∞–π–Ω–∞ –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —Å–ª–æ–∂–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ –¥–ª—è uGFX.&lt;/p&gt;</content><category term="msp430"></category><category term="SSD1306"></category><category term="uGFX"></category></entry><entry><title>FreeRTOS - –æ–±–º–µ–Ω –¥–∞–Ω–Ω—ã–º–∏ –º–µ–∂–¥—É –∑–∞–¥–∞—á–∞–º–∏</title><link href="https://mazko.github.io/blog/posts/2017/04/29/freertos-obmen-dannymi-mezhdu-zadachami/" rel="alternate"></link><published>2017-04-29T00:00:00+03:00</published><updated>2017-04-29T00:00:00+03:00</updated><author><name>Oleg Mazko</name></author><id>tag:mazko.github.io,2017-04-29:/blog/posts/2017/04/29/freertos-obmen-dannymi-mezhdu-zadachami/</id><summary type="html">&lt;p&gt;–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ—Å–≤–∞–∏–≤–∞—Ç—å &lt;a href="https://mazko.github.io/blog/posts/2017/04/26/freertos-operatsionnaia-sistema-dlia-mikrokontrollerov/"&gt;FreeRTOS&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;–°–∞–º—ã–π –ø—Ä–æ—Å—Ç–æ–π –∏ –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ –ø–æ–Ω—è—Ç–Ω—ã–π —Å–ø–æ—Å–æ–± –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –æ–±–º–µ–Ω –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –º–µ–∂–¥—É –∑–∞–¥–∞—á–∞–º–∏ ‚Äî –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–±—â–∏–µ –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ –¥–ª—è &lt;a href="https://mazko.github.io/blog/posts/2017/02/05/picsimjs-soprogrammy-i-prosteishaia-mnogozadachnost/"&gt;–∫–æ–æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π&lt;/a&gt; –º–Ω–æ–≥–æ–∑–∞–¥–∞—á–Ω–æ—Å—Ç–∏ —Ç–∞–∫–æ–π –ø–æ–¥—Ö–æ–¥ –≤–ø–æ–ª–Ω–µ —É–º–µ—Å—Ç–µ–Ω. –û–¥–Ω–∞–∫–æ –≤ —Å–ª—É—á–∞–µ —Å –≤—ã—Ç–µ—Å–Ω—è—é—â–∏–π –º–Ω–æ–≥–æ–∑–∞–¥–∞—á–Ω–æ—Å—Ç—å—é –ø—Ä–∏ —Å–æ–≤–º–µ—Å—Ç–Ω–æ–º –¥–æ—Å—Ç—É–ø–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∑–∞–¥–∞—á –∫ –æ–±—â–µ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –≤–æ–∑–Ω–∏–∫–∞—é—Ç –ø—Ä–æ–±–ª–µ–º—ã &lt;a href="https://mazko.github.io/blog/posts/2017/04/28/freertos-sovmestnyi-dostup-k-obshchim-resursam/"&gt;–∞—Ç–æ–º–∞—Ä–Ω–æ—Å—Ç–∏&lt;/a&gt; –∏ –ø–æ—ç—Ç–æ–º—É –≤–æ FreeRTOS –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ—Å–≤–∞–∏–≤–∞—Ç—å &lt;a href="https://mazko.github.io/blog/posts/2017/04/26/freertos-operatsionnaia-sistema-dlia-mikrokontrollerov/"&gt;FreeRTOS&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;–°–∞–º—ã–π –ø—Ä–æ—Å—Ç–æ–π –∏ –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ –ø–æ–Ω—è—Ç–Ω—ã–π —Å–ø–æ—Å–æ–± –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –æ–±–º–µ–Ω –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –º–µ–∂–¥—É –∑–∞–¥–∞—á–∞–º–∏ ‚Äî –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–±—â–∏–µ –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ –¥–ª—è &lt;a href="https://mazko.github.io/blog/posts/2017/02/05/picsimjs-soprogrammy-i-prosteishaia-mnogozadachnost/"&gt;–∫–æ–æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π&lt;/a&gt; –º–Ω–æ–≥–æ–∑–∞–¥–∞—á–Ω–æ—Å—Ç–∏ —Ç–∞–∫–æ–π –ø–æ–¥—Ö–æ–¥ –≤–ø–æ–ª–Ω–µ —É–º–µ—Å—Ç–µ–Ω. –û–¥–Ω–∞–∫–æ –≤ —Å–ª—É—á–∞–µ —Å –≤—ã—Ç–µ—Å–Ω—è—é—â–∏–π –º–Ω–æ–≥–æ–∑–∞–¥–∞—á–Ω–æ—Å—Ç—å—é –ø—Ä–∏ —Å–æ–≤–º–µ—Å—Ç–Ω–æ–º –¥–æ—Å—Ç—É–ø–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∑–∞–¥–∞—á –∫ –æ–±—â–µ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –≤–æ–∑–Ω–∏–∫–∞—é—Ç –ø—Ä–æ–±–ª–µ–º—ã &lt;a href="https://mazko.github.io/blog/posts/2017/04/28/freertos-sovmestnyi-dostup-k-obshchim-resursam/"&gt;–∞—Ç–æ–º–∞—Ä–Ω–æ—Å—Ç–∏&lt;/a&gt; –∏ –ø–æ—ç—Ç–æ–º—É –≤–æ FreeRTOS –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –º–µ–∂–¥—É –∑–∞–¥–∞—á–∞–º–∏ –ø—Ä–∏–¥—É–º–∞–ª–∏ &lt;em&gt;–æ—á–µ—Ä–µ–¥–∏&lt;/em&gt;. –û—á–µ—Ä–µ–¥–∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—Ç —Å–æ–±–æ–π —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π –º–µ—Ö–∞–Ω–∏–∑–º FreeRTOS, –∫–æ—Ç–æ—Ä—ã–π –ª–µ–∂–∏—Ç –≤ –æ—Å–Ω–æ–≤–µ —Ä–∞–∑–ª–∏—á–Ω–æ–≥–æ —Ä–æ–¥–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π –∑–∞–¥–∞—á –¥—Ä—É–≥ —Å –¥—Ä—É–≥–æ–º. –û—á–µ—Ä–µ–¥–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∫–∞–∫ –º–µ–∂–¥—É –∑–∞–¥–∞—á–∞–º–∏, —Ç–∞–∫ –∏ –º–µ–∂–¥—É –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è–º–∏ –∏ –∑–∞–¥–∞—á–∞–º–∏. –ï—Å–ª–∏ —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å —Å –≥–ª–æ–±–∞–ª—å–Ω—ã–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏, —Ç–æ –ø–æ–º–∏–º–æ —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –∞—Ç–æ–º–∞—Ä–Ω–æ—Å—Ç—å—é –æ—á–µ—Ä–µ–¥—å –æ–±–ª–∞–¥–∞–µ—Ç —Ä—è–¥–æ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π ‚Äî –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –Ω–∞ —á—Ç–µ–Ω–∏–µ/–∑–∞–ø–∏—Å—å, –ø–æ–∑–≤–æ–ª—è—é—â–∞—è –∑–∞–¥–∞—á–µ –Ω–µ —Ä–∞—Å—Ö–æ–¥–æ–≤–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–Ω–æ–µ –≤—Ä–µ–º—è –Ω–∞ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –æ–ø—Ä–æ—Å –≥–ª–æ–±–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π, —Ä–∞–∑–º–µ—Ä –æ—á–µ—Ä–µ–¥–∏ –Ω–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω 1, –¥–∞–Ω–Ω—ã–µ –º–æ–∂–Ω–æ –∫–ª–∞—Å—Ç—å –ª–∏–±–æ –≤ –Ω–∞—á–∞–ª–æ –ª–∏–±–æ –≤ –∫–æ–Ω–µ—Ü –æ—á–µ—Ä–µ–¥–∏. &lt;/p&gt;
&lt;p&gt;–í —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º–æ–º –ø—Ä–∏–º–µ—Ä–µ –æ–¥–Ω–∞ –∑–∞–¥–∞—á–∞ –±—É–¥–µ—Ç —Å–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫–∏ –∏ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –Ω–∞–∂–∞—Ç–∏–∏ –¥–≤—É–º –¥—Ä—É–≥–∏–º –∑–∞–¥–∞—á–∞–º —Å–≤–µ—Ç–æ–¥–∏–æ–¥–Ω—ã—Ö –∞–Ω–∏–º–∞—Ü–∏–π —Å –ø–æ–º–æ—â—å—é –¥–≤—É—Ö –æ—á–µ—Ä–µ–¥–µ–π. &lt;/p&gt;
&lt;p&gt;&lt;a href="http://mazko.github.io/MSP430.js/4dba761b9452073c41acde20a040de6b"&gt;MSP430.js&lt;/a&gt; | &lt;a href="https://mazko.github.io/blog/posts/2017/04/29/freertos-obmen-dannymi-mezhdu-zadachami/event.zip"&gt;–∏—Å—Ö–æ–¥–Ω–∏–∫–∏&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2017/04/29/freertos-obmen-dannymi-mezhdu-zadachami/ui.gif" style="width:55%; margin: 0 auto; display:block;"&gt;&lt;/p&gt;
&lt;p&gt;–û—á–µ—Ä–µ–¥—å –º–æ–∂–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å –≤ —Å–µ–±–µ –∫–æ–Ω–µ—á–Ω–æ–µ —á–∏—Å–ª–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞.
–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å –æ—á–µ—Ä–µ–¥—å, –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ä–∞–∑–º–µ—Ä–æ–º –æ—á–µ—Ä–µ–¥–∏. –ö–∞–∫ —Ä–∞–∑–º–µ—Ä —ç–ª–µ–º–µ–Ω—Ç–∞, —Ç–∞–∫ –∏ —Ä–∞–∑–º–µ—Ä –æ—á–µ—Ä–µ–¥–∏ –∑–∞–¥–∞—é—Ç—Å—è –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ—á–µ—Ä–µ–¥–∏ –∏ –æ—Å—Ç–∞—é—Ç—Å—è –Ω–µ–∏–∑–º–µ–Ω–Ω—ã–º–∏ –¥–æ –µ–µ —É–¥–∞–ª–µ–Ω–∏—è. –í –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –≤ —Ñ–∞–π–ª–µ main.c —Å–æ–∑–¥–∞—é—Ç—Å—è –¥–≤–µ –æ—á–µ—Ä–µ–¥–∏ &lt;code&gt;xQueueBtnsL = xQueueCreate(1, sizeof(char));&lt;/code&gt; –¥–ª—è –ª–µ–≤—ã—Ö –∏ –ø—Ä–∞–≤—ã—Ö –∫–Ω–æ–ø–æ–∫ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ. –ü–æ—Å–∫–æ–ª—å–∫—É —É –∑–∞–¥–∞—á–∏, –∫–æ—Ç–æ—Ä–∞—è –∫–ª–∞–¥—ë—Ç –¥–∞–Ω–Ω—ã–µ –≤ –æ—á–µ—Ä–µ–¥—å, –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –Ω–∏–∂–µ, —á–µ–º —É –∑–∞–±–∏—Ä–∞—é—â–µ–π —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ, —Ç–æ —Ä–∞–∑–º–µ—Ä–∞ –æ—á–µ—Ä–µ–¥–∏ –≤ 1 —ç–ª–µ–º–µ–Ω—Ç –æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ. –ü—Ä–∏ –¥—Ä—É–≥–∏—Ö —Ä–∞—Å–∫–ª–∞–¥–∞—Ö –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤ —Ä–∞–∑–º–µ—Ä –æ—á–µ—Ä–µ–¥–∏ –≤–æ–∑–º–æ–∂–Ω–æ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è —É–≤–µ–ª–∏—á–∏—Ç—å ‚Äî –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –≤–æ–∑–º–æ–∂–Ω–∞ —Å–∏—Ç—É–∞—Ü–∏—è, –∫–æ–≥–¥–∞ –¥–∞–Ω–Ω—ã–µ –æ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ –Ω–µ —É—Å–ø–µ–ª–∏ –¥–æ–π—Ç–∏ –¥–æ –∞–¥—Ä–µ—Å–∞—Ç–∞, –∞ –∫–Ω–æ–ø–æ—á–∫—É –Ω–∞–∂–∞–ª–∏ –∑–∞–Ω–æ–≤–æ –∏ —Ç–æ–≥–¥–∞ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç &lt;code&gt;configASSERT&lt;/code&gt; —Ç.–∫. –≤ –æ—á–µ—Ä–µ–¥–∏ –∑–∞–∫–æ–Ω—á–∏–ª–æ—Å—å –º–µ—Å—Ç–æ:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;task_btn_scan.h&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;vTaskScanBtns&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pvParameters&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;queue.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;extern&lt;/span&gt; &lt;span class="k"&gt;volatile&lt;/span&gt; &lt;span class="n"&gt;QueueHandle_t&lt;/span&gt; &lt;span class="n"&gt;xQueueBtnsL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;xQueueBtnsR&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;task_btn_scan.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;FreeRTOS.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;task.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;task_btn_scan.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;volatile&lt;/span&gt; &lt;span class="n"&gt;QueueHandle_t&lt;/span&gt; &lt;span class="n"&gt;xQueueBtnsL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;xQueueBtnsR&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;vTaskScanBtns&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pvParameters&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;;;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;P1IN&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// button pushed&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;P1IN&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;b1111&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

      &lt;span class="cm"&gt;/* Send a char to the queue. Don&amp;#39;t block if the queue is already full &lt;/span&gt;
&lt;span class="cm"&gt;        (the third parameter is zero, so not block time is specified). */&lt;/span&gt;
      &lt;span class="n"&gt;configASSERT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;xQueueSend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;xQueueBtnsL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;P1IN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;pdPASS&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;configASSERT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;xQueueSend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;xQueueBtnsR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;P1IN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;pdPASS&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;P1IN&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;// button released&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

   &lt;span class="n"&gt;vTaskDelete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–î–ª—è –∑–∞–ø–∏—Å–∏ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –∫–æ–Ω–µ—Ü –æ—á–µ—Ä–µ–¥–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è API-—Ñ—É–Ω–∫—Ü–∏—è &lt;code&gt;xQueueSend()&lt;/code&gt;. –í –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ –Ω–∞ –º–æ–º–µ–Ω—Ç –∑–∞–ø–∏—Å–∏ –æ—á–µ—Ä–µ–¥—å –≤—Å–µ–≥–¥–∞ –ø—É—Å—Ç–∞, —Ç.–∫. —É –∑–∞–¥–∞—á–∏-–ø–æ–ª—É—á–∞—Ç–µ–ª—è –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç, –ø–æ—ç—Ç–æ–º—É —Ç–∞–π–º–∞—É—Ç (—Ç—Ä–µ—Ç–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä) –ª–æ–≥–∏—á–Ω–æ –∑–∞–¥–∞—Ç—å ¬´0¬ª. –ú–æ–∂–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å 2 –∑–Ω–∞—á–µ–Ω–∏—è:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;pdPASS ‚Äî –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω—ã –≤ –æ—á–µ—Ä–µ–¥—å. –ï—Å–ª–∏ —Ç–∞–π–º–∞—É—Ç –Ω–µ —Ä–∞–≤–µ–Ω ¬´0¬ª, —Ç–æ –≤–æ–∑–≤—Ä–∞—Ç –∑–Ω–∞—á–µ–Ω–∏—è pdPASS –≥–æ–≤–æ—Ä–∏—Ç –æ —Ç–æ–º, —á—Ç–æ —Å–≤–æ–±–æ–¥–Ω–æ–µ –º–µ—Å—Ç–æ –≤ –æ—á–µ—Ä–µ–¥–∏ –ø–æ—è–≤–∏–ª–æ—Å—å –¥–æ –∏—Å—Ç–µ—á–µ–Ω–∏—è —Ç–∞–π–º–∞—É—Ç–∞ –∏ —ç–ª–µ–º–µ–Ω—Ç –±—ã–ª –ø–æ–º–µ—â–µ–Ω –≤ –æ—á–µ—Ä–µ–¥—å&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;errQUEUE_FULL ‚Äî –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –Ω–µ –∑–∞–ø–∏—Å–∞–Ω—ã –≤ –æ—á–µ—Ä–µ–¥—å, —Ç–∞–∫ –∫–∞–∫
–æ—á–µ—Ä–µ–¥—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∞. –ï—Å–ª–∏ —Ç–∞–π–º–∞—É—Ç –Ω–µ —Ä–∞–≤–µ–Ω ¬´0¬ª, —Ç–æ –≤–æ–∑–≤—Ä–∞—Ç –∑–Ω–∞—á–µ–Ω–∏—è errQUEUE_FULL –≥–æ–≤–æ—Ä–∏—Ç –æ —Ç–æ–º, —á—Ç–æ —Ç–∞–π–º–∞—É—Ç –∑–∞–≤–µ—Ä—à–µ–Ω, –∞ –º–µ—Å—Ç–æ –≤ –æ—á–µ—Ä–µ–¥–∏ —Ç–∞–∫ –∏ –Ω–µ –æ—Å–≤–æ–±–æ–¥–∏–ª–æ—Å—å&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;–ó–∞–¥–∞—á–∞-–ø–æ–ª—É—á–∞—Ç–µ–ª—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø—Ä–∞–≤–ª—è–µ—Ç –∞–Ω–∏–º–∞—Ü–∏—è–º–∏ –ª–µ–≤—ã—Ö —Å–≤–µ—Ç–æ–¥–∏–æ–¥–æ–≤ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–ª–µ–¥—É—é—â–∏–π –≤–∏–¥:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;task_l_leds.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;FreeRTOS.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;task.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;task_l_leds.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;task_btn_scan.h&amp;quot; // queues&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;volatile&lt;/span&gt; &lt;span class="n"&gt;xSemaphoreHandle&lt;/span&gt; &lt;span class="n"&gt;xP4P5P6Mutex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// C99&lt;/span&gt;
&lt;span class="c1"&gt;// an object that has static storage duration is not initialized explicitly, then:&lt;/span&gt;
&lt;span class="c1"&gt;// ‚Äî if it has pointer type, it is initialized to a null pointer;&lt;/span&gt;
&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;volatile&lt;/span&gt; &lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;vTaskLedsL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pvParameters&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

   &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;;;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

      &lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

      &lt;span class="c1"&gt;// portMAX_DELAY will cause the task to wait indefinitely&lt;/span&gt;
      &lt;span class="c1"&gt;// (without timing out) provided INCLUDE_vTaskSuspend is set to 1&lt;/span&gt;
      &lt;span class="n"&gt;portBASE_TYPE&lt;/span&gt; &lt;span class="n"&gt;xStatus&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;xQueueReceive&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; 
                &lt;span class="n"&gt;xQueueBtnsL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;portMAX_DELAY&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

      &lt;span class="cm"&gt;/* Attempt to take the mutex, blocking indefinitely to wait for the mutex */&lt;/span&gt;
      &lt;span class="n"&gt;xSemaphoreTake&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;xP4P5P6Mutex&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;portMAX_DELAY&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;xStatus&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;pdPASS&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// set leds color&lt;/span&gt;
        &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="nl"&gt;b10&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;   &lt;span class="cm"&gt;/* red blink */&lt;/span&gt;
            &lt;span class="n"&gt;P5OUT&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;=&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;b11111&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;P6OUT&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;=&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;b11111&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;P4OUT&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
          &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="nl"&gt;b100&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="cm"&gt;/* green blink */&lt;/span&gt;
            &lt;span class="n"&gt;P4OUT&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;=&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;b11111&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;P6OUT&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;=&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;b11111&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;P5OUT&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
          &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="nl"&gt;b1000&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="cm"&gt;/* blue blink */&lt;/span&gt;
            &lt;span class="n"&gt;P4OUT&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;=&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;b11111&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;P5OUT&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;=&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;b11111&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;P6OUT&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
          &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="nl"&gt;b1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;    &lt;span class="cm"&gt;/* off blink */&lt;/span&gt;
            &lt;span class="n"&gt;P4OUT&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;=&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;b11111&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;P5OUT&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;=&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;b11111&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;P6OUT&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;=&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;b11111&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;

      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;b11111&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;b11111&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;b11111&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;

      &lt;span class="cm"&gt;/* The mutex MUST be given back! */&lt;/span&gt;
      &lt;span class="n"&gt;xSemaphoreGive&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;xP4P5P6Mutex&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

   &lt;span class="n"&gt;vTaskDelete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–î–ª—è —Å—á–∏—Ç—ã–≤–∞–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ —Å —É–¥–∞–ª–µ–Ω–∏–µ–º –µ–≥–æ –∏–∑ –æ—á–µ—Ä–µ–¥–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è API-—Ñ—É–Ω–∫—Ü–∏—è &lt;code&gt;xQueueReceive()&lt;/code&gt;. –¢–∞–π–º–∞—É—Ç &lt;code&gt;portMAX_DELAY&lt;/code&gt; –≤ &lt;a href="https://mazko.github.io/blog/posts/2017/04/28/freertos-sovmestnyi-dostup-k-obshchim-resursam/"&gt;–ø–∞—Ä–µ&lt;/a&gt; —Å &lt;code&gt;INCLUDE_vTaskSuspend&lt;/code&gt; –∑–∞–¥–∞—ë—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è. –¢–∞–∫–∂–µ –º–æ–∂–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å 2 –∑–Ω–∞—á–µ–Ω–∏—è:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;pdPASS ‚Äî –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–Ω—ã –∏–∑ –æ—á–µ—Ä–µ–¥–∏. –ï—Å–ª–∏ —Ç–∞–π–º–∞—É—Ç –Ω–µ —Ä–∞–≤–µ–Ω ¬´0¬ª, —Ç–æ –≤–æ–∑–≤—Ä–∞—Ç –∑–Ω–∞—á–µ–Ω–∏—è pdPASS –≥–æ–≤–æ—Ä–∏—Ç –æ —Ç–æ–º, —á—Ç–æ —ç–ª–µ–º–µ–Ω—Ç –≤ –æ—á–µ—Ä–µ–¥–∏ –ø–æ—è–≤–∏–ª—Å—è (–∏–ª–∏ —É–∂–µ –±—ã–ª —Ç–∞–º) –¥–æ –∏—Å—Ç–µ—á–µ–Ω–∏—è —Ç–∞–π–º-–∞—É—Ç–∞ –∏ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–Ω&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;errQUEUE_EMPTY ‚Äî –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –ø—Ä–æ—á–∏—Ç–∞–Ω –∏–∑ –æ—á–µ—Ä–µ–¥–∏, —Ç–∞–∫ –∫–∞–∫ –æ—á–µ—Ä–µ–¥—å –ø—É—Å—Ç–∞. –ï—Å–ª–∏ —Ç–∞–π–º–∞—É—Ç –Ω–µ —Ä–∞–≤–µ–Ω ¬´0¬ª, —Ç–æ –≤–æ–∑–≤—Ä–∞—Ç –∑–Ω–∞—á–µ–Ω–∏—è errQUEUE_FULL –≥–æ–≤–æ—Ä–∏—Ç –æ —Ç–æ–º, —á—Ç–æ —Ç–∞–π–º–∞—É—Ç –∑–∞–≤–µ—Ä—à–µ–Ω, –∞ –Ω–∏–∫–∞–∫–∞—è –¥—Ä—É–≥–∞—è –∑–∞–¥–∞—á–∞ –∏–ª–∏ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ —Ç–∞–∫ –∏ –Ω–µ –∑–∞–ø–∏—Å–∞–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –≤ –æ—á–µ—Ä–µ–¥—å&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;–í—Å—ë –±—ã —Ö–æ—Ä–æ—à–æ, –æ–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ –µ—Å—Ç—å –æ–¥–Ω–æ –Ω–æ ‚Äî –∑–∞—á–µ–º –Ω–∞–º –≤–æ–æ–±—â–µ –æ—Ç–¥–µ–ª—å–Ω–∞—è –∑–∞–¥–∞—á–∞ –¥–ª—è —Å—á–∏—Ç—ã–≤–∞–Ω–∏—è –∫–Ω–æ–ø–æ–∫ ? –í–µ–¥—å –æ–Ω–∞ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –∫—Ä—É—Ç–∏—Ç—Å—è –≤ –ø–∞–º—è—Ç–∏ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ –∏ –ø–æ—Ç—Ä–µ–±–ª—è–µ—Ç —Ä–µ—Å—É—Ä—Å—ã –¥–∞–∂–µ –∫–æ–≥–¥–∞ –Ω–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –Ω–∏–∫–∞–∫–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ö—É–¥–∞ –±–æ–ª–µ–µ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–º —Ä–µ—à–µ–Ω–∏–µ–º –±—ã–ª–æ –±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –ø–æ–¥–æ–±–Ω—ã—Ö —Ü–µ–ª–µ–π &lt;a href="https://mazko.github.io/blog/posts/2017/02/05/picsimjs-soprogrammy-i-prosteishaia-mnogozadachnost/"&gt;–ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ&lt;/a&gt;, –≤—ã–∑—ã–≤–∞–µ–º–æ–µ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://mazko.github.io/MSP430.js/abb4216611a94d97da323920d61175b6"&gt;MSP430.js&lt;/a&gt; | &lt;a href="https://mazko.github.io/blog/posts/2017/04/29/freertos-obmen-dannymi-mezhdu-zadachami/event_isr.zip"&gt;–∏—Å—Ö–æ–¥–Ω–∏–∫–∏&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2017/04/29/freertos-obmen-dannymi-mezhdu-zadachami/isr.png" style="width:55%; margin: 0 auto; display:block;"&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;btn_scan.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;btn_scan.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;volatile&lt;/span&gt; &lt;span class="n"&gt;QueueHandle_t&lt;/span&gt; &lt;span class="n"&gt;xQueueBtnsL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;xQueueBtnsR&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;btn_scan_init&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// clear the interrupt flag&lt;/span&gt;
  &lt;span class="n"&gt;P1IFG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;// enable interrupt on BIT 0..7&lt;/span&gt;
  &lt;span class="n"&gt;P1IE&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mh"&gt;0xFF&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;__attribute__&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;interrupt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PORT1_VECTOR&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt; &lt;span class="n"&gt;Port1_ISR&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;__attribute__&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;interrupt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PORT1_VECTOR&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt; &lt;span class="n"&gt;Port1_ISR&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;P1IFG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c1"&gt;// clear the interrupt flag&lt;/span&gt;

  &lt;span class="n"&gt;BaseType_t&lt;/span&gt; &lt;span class="n"&gt;xHigherPriorityTaskWoken&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="cm"&gt;/* xHigherPriorityTaskWoken must be initialised to pdFALSE. */&lt;/span&gt;
  &lt;span class="n"&gt;xHigherPriorityTaskWoken&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pdFALSE&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;P1IN&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;b1111&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="cm"&gt;/* xHigherPriorityTaskWoken will get set to pdTRUE if writing to the &lt;/span&gt;
&lt;span class="cm"&gt;       queue causes a task to leave the Blocked state, and the task &lt;/span&gt;
&lt;span class="cm"&gt;       leaving the Blocked state has a priority higher than the currently &lt;/span&gt;
&lt;span class="cm"&gt;       executing task (the task that was interrupted). */&lt;/span&gt;

    &lt;span class="n"&gt;configASSERT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;xQueueSendFromISR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; 
        &lt;span class="n"&gt;xQueueBtnsL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;P1IN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;xHigherPriorityTaskWoken&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;pdPASS&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;configASSERT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;xQueueSendFromISR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; 
        &lt;span class="n"&gt;xQueueBtnsR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;P1IN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;xHigherPriorityTaskWoken&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;pdPASS&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="cm"&gt;/* If xHigherPriorityTaskWoken is now set to pdTRUE then a context&lt;/span&gt;
&lt;span class="cm"&gt;     switch should be requested. */&lt;/span&gt;
  &lt;span class="n"&gt;portYIELD_FROM_ISR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;xHigherPriorityTaskWoken&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ü–æ—Å–ª–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–¥–∞—á —Å–æ–∫—Ä–∞—Ç–∏–ª–æ—Å—å —Å 5 –¥–æ 4 –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ –æ—Å–≤–æ–±–æ–¥–∏–ª–∞—Å—å RAM. –§—É–Ω–∫—Ü–∏—é &lt;code&gt;xQueueSend()&lt;/code&gt; –Ω–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è—Ö ‚Äî –¥–ª—è —ç—Ç–æ–≥–æ –µ—Å—Ç—å &lt;code&gt;xQueueSendFromISR()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mazko.github.io/blog/posts/2017/04/26/freertos-operatsionnaia-sistema-dlia-mikrokontrollerov/"&gt;–ì–∏–±—Ä–∏–¥–Ω–∞—è&lt;/a&gt; –º–Ω–æ–≥–æ–∑–∞–¥–∞—á–Ω–æ—Å—Ç—å –≤–æ FreeRTOS —è–≤–ª—è–µ—Ç—Å—è –∫–æ–º–±–∏–Ω–∞—Ü–∏–µ–π –≤—ã—Ç–µ—Å–Ω—è—é—â–µ–π –∏ –∫–æ–æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π. –í –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –ø–æ –Ω–∞–∂–∞—Ç–∏—é –Ω–∞ –∫–Ω–æ–ø–∫—É, –Ω–æ –ø–æ –æ–∫–æ–Ω—á–∞–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –Ω–µ –∫ —Ç–µ–∫—É—â–µ–π –Ω–∏–∑–∫–æ–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–æ–π –∑–∞–¥–∞—á–µ, –∞ –∫ –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–æ–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–æ–π –ø—É—Ç—ë–º –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ &lt;code&gt;portYIELD_FROM_ISR&lt;/code&gt; –Ω–µ –¥–æ–∂–∏–¥–∞—è—Å—å –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –∫–≤–∞–Ω—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞. –ì–∏–±—Ä–∏–¥–Ω–∞—è –ø–æ–¥—Ö–æ–¥ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∫—Ä–∞—Ç–∏—Ç—å –≤—Ä–µ–º—è —Ä–µ–∞–∫—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã –Ω–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ.&lt;/p&gt;</content><category term="msp430"></category><category term="RTOS"></category></entry><entry><title>FreeRTOS - —Å–æ–≤–º–µ—Å—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –æ–±—â–∏–º —Ä–µ—Å—É—Ä—Å–∞–º</title><link href="https://mazko.github.io/blog/posts/2017/04/28/freertos-sovmestnyi-dostup-k-obshchim-resursam/" rel="alternate"></link><published>2017-04-28T00:00:00+03:00</published><updated>2017-04-28T00:00:00+03:00</updated><author><name>Oleg Mazko</name></author><id>tag:mazko.github.io,2017-04-28:/blog/posts/2017/04/28/freertos-sovmestnyi-dostup-k-obshchim-resursam/</id><summary type="html">&lt;p&gt;–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ—Å–≤–∞–∏–≤–∞—Ç—å &lt;a href="https://mazko.github.io/blog/posts/2017/04/26/freertos-operatsionnaia-sistema-dlia-mikrokontrollerov/"&gt;FreeRTOS&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞ –æ—à–∏–±–æ–∫ –≤ RTOS ‚Äî —ç—Ç–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω–Ω—ã–π –æ–±—â–∏–π (—Å–æ–≤–º–µ—Å—Ç–Ω—ã–π) –¥–æ—Å—Ç—É–ø –∫ —Ä–µ—Å—É—Ä—Å–∞–º –∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∑–∞–¥–∞—á –∏/–∏–ª–∏ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–π. –û–¥–Ω–∞ –∑–∞–¥–∞—á–∞ –ø–æ–ª—É—á–∞–µ—Ç –¥–æ—Å—Ç—É–ø –∫ —Ä–µ—Å—É—Ä—Å—É, –Ω–∞—á–∏–Ω–∞–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è —Å –Ω–∏–º, –Ω–æ –Ω–µ —É—Å–ø–µ–≤–∞–µ—Ç –∑–∞–≤–µ—Ä—à–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å —ç—Ç–∏–º —Ä–µ—Å—É—Ä—Å–æ–º –¥–æ –∫–æ–Ω—Ü–∞ –∫–∞–∫ –≤ —ç—Ç–æ—Ç –º–æ–º–µ–Ω—Ç –º–æ–∂–µ—Ç –ø—Ä–æ–∏–∑–æ–π—Ç–∏ ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ—Å–≤–∞–∏–≤–∞—Ç—å &lt;a href="https://mazko.github.io/blog/posts/2017/04/26/freertos-operatsionnaia-sistema-dlia-mikrokontrollerov/"&gt;FreeRTOS&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞ –æ—à–∏–±–æ–∫ –≤ RTOS ‚Äî —ç—Ç–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω–Ω—ã–π –æ–±—â–∏–π (—Å–æ–≤–º–µ—Å—Ç–Ω—ã–π) –¥–æ—Å—Ç—É–ø –∫ —Ä–µ—Å—É—Ä—Å–∞–º –∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∑–∞–¥–∞—á –∏/–∏–ª–∏ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–π. –û–¥–Ω–∞ –∑–∞–¥–∞—á–∞ –ø–æ–ª—É—á–∞–µ—Ç –¥–æ—Å—Ç—É–ø –∫ —Ä–µ—Å—É—Ä—Å—É, –Ω–∞—á–∏–Ω–∞–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è —Å –Ω–∏–º, –Ω–æ –Ω–µ —É—Å–ø–µ–≤–∞–µ—Ç –∑–∞–≤–µ—Ä—à–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å —ç—Ç–∏–º —Ä–µ—Å—É—Ä—Å–æ–º –¥–æ –∫–æ–Ω—Ü–∞ –∫–∞–∫ –≤ —ç—Ç–æ—Ç –º–æ–º–µ–Ω—Ç –º–æ–∂–µ—Ç –ø—Ä–æ–∏–∑–æ–π—Ç–∏:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;–≤ —Å–ª—É—á–∞–µ —Å –≤—ã—Ç–µ—Å–Ω—è—é—â–µ–π –º–Ω–æ–≥–æ–∑–∞–¥–∞—á–Ω–æ—Å—Ç—å—é ‚Äî –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∑–∞–¥–∞—á–∏ &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;–≤ –ª—é–±–æ–π —Å–∏—Å—Ç–µ–º–µ –¥–∞–∂–µ –±–µ–∑ RTOS ‚Äî &lt;a href="https://mazko.github.io/blog/posts/2017/02/05/picsimjs-soprogrammy-i-prosteishaia-mnogozadachnost/"&gt;–ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ&lt;/a&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;–ï—Å–ª–∏ –¥—Ä—É–≥–∞—è –∑–∞–¥–∞—á–∞ –∏–ª–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ–∑–Ω–∏–∫—à–µ–≥–æ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è –æ–±—Ä–∞—Ç—è—Ç—Å—è –∫ —ç—Ç–æ–º—É –∂–µ —Å–∞–º–æ–º—É —Ä–µ—Å—É—Ä—Å—É, —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–æ—Å–∏—Ç –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä –∏–∑-–∑–∞ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏—è –ø–µ—Ä–≤–æ–π –∑–∞–¥–∞—á–∏, —Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–±–æ—Ç—ã –ø—Ä–æ–≥—Ä–∞–º–º—ã –æ—á–µ–Ω—å —Å–ª–æ–∂–Ω–æ –ø—Ä–µ–¥—É–≥–∞–¥–∞—Ç—å. –ë–∞–≥–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –º–Ω–æ–≥–æ–∑–∞–¥–∞—á–Ω–æ—Å—Ç—å—é –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –æ—á–µ–Ω—å –∫–æ–≤–∞—Ä–Ω—ã, —Ç–∞–∫ –∫–∞–∫ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –º–æ–≥—É—Ç –ø—Ä–æ—è–≤–ª—è—Ç—å—Å—è –ø–æ—á—Ç–∏ —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –∏ —Ç—É—Ç –º–Ω–æ–≥–æ–µ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞. &lt;/p&gt;
&lt;p&gt;–í –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ –ª–µ–≤—ã–µ –∏ –ø—Ä–∞–≤—ã–µ RGB —Å–≤–µ—Ç–æ–¥–∏–æ–¥—ã –∏–º–µ—é—Ç –æ–±—â–∏–µ –ø–æ—Ä—Ç—ã P4OUT, P5OUT –∏ P6OUT ‚Äî –±–∏—Ç—ã 0..4 –∑–∞ –ª–µ–≤—ã–º–∏, –∞ 5..7 –∑–∞ –ø—Ä–∞–≤—ã–º–∏. –ê–Ω–∞–ª–æ–≥–∏—á–Ω–∞—è —Å–∏—Ç—É–∞—Ü–∏—è —Å –ø–æ—Ä—Ç–æ–º P3OUT, –≥–¥–µ –¥–≤–∞ –º–ª–∞–¥—à–∏—Ö –±–∏—Ç–∞ –∑–∞ –¥–∏—Å–ø–ª–µ–µ–º, –∞ –æ—Å—Ç–∞–ª—å–Ω—ã–µ 6 –¥–ª—è –¥–≤—É—Ö –ø—Ä–∞–≤—ã—Ö RGB —Å–≤–µ—Ç–æ–¥–∏–æ–¥–æ–≤. –ü—Ä–æ–±–ª–µ–º–∞ –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –≤ —Ç–æ–º, —á—Ç–æ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –ø–æ—Ä—Ç–∞–º–∏ —Å –æ—á–µ–Ω—å –±–æ–ª—å—à–æ–π –¥–æ–ª–µ–π –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ —è–≤–ª—è–µ—Ç—Å—è –Ω–µ –∞—Ç–æ–º–∞—Ä–Ω–æ–π, –ø–æ—Å–∫–æ–ª—å–∫—É –∑–∞–Ω–∏–º–∞–µ—Ç –±–æ–ª—å—à–µ –æ–¥–Ω–æ–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–æ –ø–æ–ª–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è, –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ—Å–µ—Ä–µ–¥–∏–Ω–µ. –ù–∞–ø—Ä–∏–º–µ—Ä –ø—É—Å—Ç—å —Å—Ç–æ–∏—Ç –∑–∞–¥–∞—á–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å (—Å–±—Ä–æ—Å–∏—Ç—å, –∏–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å ‚Äî –Ω–µ –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è) –æ–¥–∏–Ω –±–∏—Ç –≤ —Ä–µ–≥–∏—Å—Ç—Ä–µ –ø–æ—Ä—Ç–∞ –≤–≤–æ–¥–∞/–≤—ã–≤–æ–¥–∞. –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä–æ–≤ —Ç—Ä–∞–Ω—Å–ª–∏—Ä—É–µ—Ç —Ç–∞–∫–æ–π –∫–æ–¥ –≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –∞—Å—Å–µ–º–±–ª–µ—Ä–∞:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ—Ä—Ç–∞ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ –≤ —Ä–µ–≥–∏—Å—Ç—Ä –æ–±—â–µ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;–º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è (—Å–±—Ä–æ—Å–∏—Ç—å, –∏–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∏ —Ç.–¥.) —Ä–µ–≥–∏—Å—Ç—Ä–∞ –æ–±—â–µ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;–æ–±—Ä–∞—Ç–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏–∑ —Ä–µ–≥–∏—Å—Ç—Ä–∞ –æ–±—â–µ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –≤ –ø–æ—Ä—Ç&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;–ó–∞–¥–∞—á–∞ –ê –∑–∞–≥—Ä—É–∂–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ—Ä—Ç–∞ –≤ —Ä–µ–≥–∏—Å—Ç—Ä –æ–±—â–µ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è --&amp;gt; –≤ —ç—Ç–æ—Ç –º–æ–º–µ–Ω—Ç –µ–µ –≤—ã—Ç–µ—Å–Ω—è–µ—Ç –∑–∞–¥–∞—á–∞ –ë, –ø—Ä–∏ —ç—Ç–æ–º –∑–∞–¥–∞—á–∞ –ê –Ω–µ ¬´—É—Å–ø–µ–ª–∞¬ª –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –∏ –∑–∞–ø–∏—Å–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –æ–±—Ä–∞—Ç–Ω–æ –≤ –ø–æ—Ä—Ç --&amp;gt; –∑–∞–¥–∞—á–∞ –ë –≤ —Å–≤–æ—é –æ—á–µ—Ä–µ–¥—å —Ç–æ–∂–µ –∏–∑–º–µ–Ω—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ—Ä—Ç–∞ –∏ –±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è --&amp;gt; –∑–∞–¥–∞—á–∞ –ê –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è —Å —Ç–æ—á–∫–∏, –≤ –∫–æ—Ç–æ—Ä–æ–π –µ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –±—ã–ª–æ –ø—Ä–µ—Ä–≤–∞–Ω–æ. –ö–∞–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –±—É–¥–µ—Ç –∑–∞–ø–∏—Å–∞–Ω–æ –≤ –ø–æ—Ä—Ç ? –Ø–≤–Ω–æ –Ω–µ —Ç–æ, —á—Ç–æ –∑–∞–¥—É–º—ã–≤–∞–ª –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://mazko.github.io/MSP430.js/fb921e5be78d0de2cd0620c4fb8e36c7"&gt;MSP430.js&lt;/a&gt; | &lt;a href="https://mazko.github.io/blog/posts/2017/04/28/freertos-sovmestnyi-dostup-k-obshchim-resursam/mutex.zip"&gt;–∏—Å—Ö–æ–¥–Ω–∏–∫–∏&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2017/04/28/freertos-sovmestnyi-dostup-k-obshchim-resursam/ui.gif" style="width:55%; margin: 0 auto; display:block;"&gt;&lt;/p&gt;
&lt;p&gt;–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –æ–±–µ—Å–ø–µ—á–∏—Ç—å —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏ –¥–æ—Å—Ç—É–ø –∫ —Ä–µ—Å—É—Ä—Å—É, –∫–æ—Ç–æ—Ä—ã–π —è–≤–ª—è–µ—Ç—Å—è –æ–±—â–∏–º –¥–ª—è –∑–∞–¥–∞—á, –ª–∏–±–æ –æ–±—â–∏–º –¥–ª—è –∑–∞–¥–∞—á –∏ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–π, –≤ RTOS –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω –º–µ—Ö–∞–Ω–∏–∑–º –≤–∑–∞–∏–º–Ω–æ–≥–æ –∏—Å–∫–ª—é—á–µ–Ω–∏—è (mutual exclusion). –≠—Ç–æ—Ç –º–µ—Ö–∞–Ω–∏–∑–º –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ –µ—Å–ª–∏ –∑–∞–¥–∞—á–∞ –Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è —Å —Ä–µ—Å—É—Ä—Å–æ–º, —Ç–æ –Ω–∏–∫–∞–∫–∞—è –¥—Ä—É–≥–∞—è –∑–∞–¥–∞—á–∞ (–∏–ª–∏ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ) –Ω–µ —Å–º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –¥–∞–Ω–Ω–æ–º—É —Ä–µ—Å—É—Ä—Å—É, –ø–æ–∫–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –Ω–∏–º –Ω–µ –±—É–¥—É—Ç –∑–∞–≤–µ—Ä—à–µ–Ω—ã –ø–µ—Ä–≤–æ–π –∑–∞–¥–∞—á–µ–π.&lt;/p&gt;
&lt;p&gt;FreeRTOS –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –≤–∑–∞–∏–º–Ω–æ–≥–æ –∏—Å–∫–ª—é—á–µ–Ω–∏—è ‚Äî –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Å–µ–∫—Ü–∏–∏, –º—å—é—Ç–µ–∫—Å—ã, –∑–∞–¥–∞—á–∏-—Å—Ç–æ—Ä–æ–∂–∞. –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Å–µ–∫—Ü–∏–∏ ‚Äî —ç—Ç–æ –æ—á–µ–Ω—å –≥—Ä—É–±—ã–π —Å–ø–æ—Å–æ–± —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –≤–∑–∞–∏–º–Ω–æ–≥–æ –∏—Å–∫–ª—é—á–µ–Ω–∏—è, —Ç.–∫. –æ–Ω–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –ª–∏–±–æ –ø—Ä–æ—Å—Ç–æ –ø—É—Ç–µ–º –∑–∞–ø—Ä–µ—Ç–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–π –ª–∏–±–æ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫–æ–π –≤—Å–µ–≥–æ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞. –õ—É—á—à–µ –ø–æ –º–µ—Ä–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –º—å—é—Ç–µ–∫—Å–∞ –∏–∑ —Ç–µ–ª–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ) –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º—å—é—Ç–µ–∫—Å—ã ‚Äî –¥–ª—è —ç—Ç–æ–≥–æ –Ω—É–∂–Ω–æ –≤ —Ñ–∞–π–ª–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ &lt;em&gt;FreeRTOSConfig.h&lt;/em&gt; –¥–æ–±–∞–≤–∏—Ç—å –º–∞–∫—Ä–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ &lt;code&gt;#define configUSE_MUTEXES 1&lt;/code&gt; –∏ —Ç–∞–∫–∂–µ –º—å—é—Ç–µ–∫—Å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —è–≤–Ω–æ —Å–æ–∑–¥–∞–Ω –ø–µ—Ä–µ–¥ –ø–µ—Ä–≤—ã–º –µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –Ω–∞–ø—Ä–∏–º–µ—Ä &lt;code&gt;xP4P5P6Mutex = xSemaphoreCreateMutex();&lt;/code&gt; –≤ main.c –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞. –ú–∞–∫—Ä–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ &lt;code&gt;#define INCLUDE_vTaskSuspend 1&lt;/code&gt; –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ ‚Äî –µ—Å–ª–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ, —Ç–æ –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã &lt;code&gt;portMAX_DELAY&lt;/code&gt; –∑–∞–¥–∞—á–∞ –º–æ–∂–µ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Å–∫–æ–ª—å —É–≥–æ–¥–Ω–æ –¥–æ–ª–≥–æ. –≠—Ç–æ –∫–∞—Å–∞–µ—Ç—Å—è –Ω–µ —Ç–æ–ª—å–∫–æ –º—å—é—Ç–µ–∫—Å–æ–≤, –Ω–æ –∏ –¥—Ä—É–≥–∏—Ö API FreeRTOS ‚Äî –Ω–∞–ø—Ä–∏–º–µ—Ä –æ—á–µ—Ä–µ–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω—ã –≤ —Å–ª–µ–¥—É—é—â–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª–µ.&lt;/p&gt;
&lt;p&gt;–í–æ—Ç –∫–∞–∫ –±—É–¥–µ—Ç —Ç–µ–ø–µ—Ä—å –≤—ã–≥–ª—è–¥–µ—Ç—å –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –∑–∞–¥–∞—á–∏ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –ª–µ–≤—ã—Ö —Å–≤–µ—Ç–æ–¥–∏–æ–¥–æ–≤:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;task_l_leds.h&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;vTaskLedsL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pvParameters&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;FreeRTOS.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;semphr.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;extern&lt;/span&gt; &lt;span class="k"&gt;volatile&lt;/span&gt; &lt;span class="n"&gt;xSemaphoreHandle&lt;/span&gt; &lt;span class="n"&gt;xP4P5P6Mutex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;task_l_leds.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;FreeRTOS.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;task.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;task_l_leds.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;volatile&lt;/span&gt; &lt;span class="n"&gt;xSemaphoreHandle&lt;/span&gt; &lt;span class="n"&gt;xP4P5P6Mutex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;portTickType&lt;/span&gt; &lt;span class="n"&gt;xLastWakeTime&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;rotate_rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;volatile&lt;/span&gt; &lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

      &lt;span class="cm"&gt;/* Attempt to take the mutex, blocking indefinitely to wait for the mutex */&lt;/span&gt;
      &lt;span class="n"&gt;xSemaphoreTake&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;xP4P5P6Mutex&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;portMAX_DELAY&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

      &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;b11111&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;b10000&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

      &lt;span class="cm"&gt;/* The mutex MUST be given back! */&lt;/span&gt;
      &lt;span class="n"&gt;xSemaphoreGive&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;xP4P5P6Mutex&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

      &lt;span class="n"&gt;vTaskDelayUntil&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;xLastWakeTime&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="cm"&gt;/* ticks */&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;vTaskLedsL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pvParameters&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

   &lt;span class="n"&gt;xLastWakeTime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;xTaskGetTickCount&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

   &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;;;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="n"&gt;rotate_rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;P4OUT&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
     &lt;span class="n"&gt;rotate_rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;P5OUT&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
     &lt;span class="n"&gt;rotate_rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;P6OUT&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

   &lt;span class="n"&gt;vTaskDelete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–¢–æ–ª—å–∫–æ –æ–¥–Ω–∞ –∑–∞–¥–∞—á–∞ –º–æ–∂–µ—Ç –≤–ª–∞–¥–µ—Ç—å –º—å—é—Ç–µ–∫—Å–æ–º. –í –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω–æ–º –ø—Ä–∏–º–µ—Ä–µ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –ø–æ–ø—ã—Ç–∫–∞ –≤–∑—è—Ç—å –º—å—é—Ç–µ–∫—Å  &lt;code&gt;xSemaphoreTake&lt;/code&gt; —Å –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–º –≤—Ä–µ–º–µ–Ω–µ–º –æ–∂–∏–¥–∞–Ω–∏—è &lt;code&gt;portMAX_DELAY&lt;/code&gt; –≤ —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –æ–Ω –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –í—ã—Ö–æ–¥ –∏–∑ &lt;code&gt;xSemaphoreTake()&lt;/code&gt; –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç —Ç–æ–ª—å–∫–æ —Ç–æ–≥–¥–∞, –∫–æ–≥–¥–∞ –º—å—é—Ç–µ–∫—Å —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω, —Ç–∞–∫ —á—Ç–æ –Ω–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø—Ä–æ–≤–µ—Ä—è—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–æ–∑–≤—Ä–∞—Ç–∞ —Ñ—É–Ω–∫—Ü–∏–∏, –Ω–æ –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ª—é–±–æ–π –¥—Ä—É–≥–æ–π –ø–µ—Ä–∏–æ–¥ –∑–∞–¥–µ—Ä–∂–∫–∏, –æ—Ç–ª–∏—á–Ω—ã–π –æ—Ç &lt;code&gt;portMAX_DELAY&lt;/code&gt;, —Ç–æ –∫–æ–¥ –¥–æ–ª–∂–µ–Ω –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ &lt;code&gt;xSemaphoreTake()&lt;/code&gt; –≤–µ—Ä–Ω—É–ª–∞ &lt;code&gt;pdTRUE&lt;/code&gt;. –ü–æ –æ–∫–æ–Ω—á–∞–Ω–∏–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –æ–±—â–∏–º —Ä–µ—Å—É—Ä—Å–æ–º –º—å—é—Ç–µ–∫—Å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–æ–∑–≤—Ä–∞—â–µ–Ω –æ–±—Ä–∞—Ç–Ω–æ &lt;code&gt;xSemaphoreGive&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;–í –¥—Ä—É–≥–∏—Ö –∑–∞–¥–∞—á–∞—Ö —Å –∞–Ω–∏–º–∞—Ü–∏—è–º–∏ –ª—é–±—ã–µ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ä–∞–∑–¥–µ–ª—è–µ–º—ã—Ö –ø–æ—Ä—Ç–æ–≤ –≤–≤–æ–¥–∞/–≤—ã–≤–æ–¥–∞ —Ç–æ–∂–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–ø—É—Å–∫–∞—Ç—å —á–µ—Ä–µ–∑ –º—å—é—Ç–µ–∫—Å ‚Äî –Ω–∞–ø—Ä–∏–º–µ—Ä &lt;code&gt;xSemaphoreTake( xP4P5P6Mutex, portMAX_DELAY ); P4OUT |= ~0b11111; xSemaphoreGive( xP4P5P6Mutex );&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;–ú—å—é—Ç–µ–∫—Å –±—ã–≤–∞–µ—Ç –∏ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω—ã–º —Ç.–µ. –∫–æ–≥–¥–∞ –æ–¥–Ω–∞ –∑–∞–¥–∞—á–∞ –º–æ–∂–µ—Ç –µ–≥–æ –≤–∑—è—Ç—å –¥–≤–∞–∂–¥—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –≤–ª–æ–∂–µ–Ω–Ω–æ–π —Ñ—É–∫–Ω—Ü–∏–∏. –í —ç—Ç–æ–º —Å–ª—É—á–∞–µ –¥–ª—è –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è –µ–≥–æ –æ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –µ–≥–æ —Å—Ç–æ–ª—å–∫–æ –∂–µ —Ä–∞–∑ –≤–µ—Ä–Ω—É—Ç—å –æ–±—Ä–∞—Ç–Ω–æ. –ï—â–µ –æ–¥–Ω–∞ –≤–∞–∂–Ω–∞—è –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å –º—É—Ç–µ–∫—Å–∞ –≤ —Ç–æ–º, —á—Ç–æ –æ–Ω –º–æ–∂–µ—Ç &lt;strong&gt;–∏–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç&lt;/strong&gt; ‚Äî —ç—Ç–æ –∫–æ–≥–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—ã—Å–æ–∫–æ–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–æ–π –∑–∞–¥–∞—á–∏ –æ—Ç–∫–ª–∞–¥—ã–≤–∞–µ—Ç—Å—è –Ω–∏–∑–∫–æ–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–æ–π –∑–∞–¥–∞—á–µ–π, –≤–ª–∞–¥–µ—é—â–µ–π –º—É—Ç–µ–∫—Å–æ–º –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç. –ò –Ω–∞–∫–æ–Ω–µ—Ü –º—É—Ç–µ–∫—Å—ã –º–æ–≥—É—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ &lt;strong&gt;–≤–∑–∞–∏–º–Ω–æ–π –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ&lt;/strong&gt; (Deadlock –∏–ª–∏ Deadly Embrace) ‚Äî —ç—Ç–æ —Å–∏—Ç—É–∞—Ü–∏—è –≤ –º–Ω–æ–≥–æ–∑–∞–¥–∞—á–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ, –∫–æ–≥–¥–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–¥–∞—á –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–≥–æ –æ–∂–∏–¥–∞–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–µ—Å—É—Ä—Å–∞–º, –∑–∞–Ω—è—Ç—ã–º —Å–∞–º–∏–º–∏ —ç—Ç–∏–º–∏ –∑–∞–¥–∞—á–∞–º–∏.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mazko.github.io/blog/posts/2017/04/29/freertos-obmen-dannymi-mezhdu-zadachami/"&gt;–î–∞–ª–µ–µ&lt;/a&gt; –æ–±–º–µ–Ω –¥–∞–Ω–Ω—ã–º–∏ –º–µ–∂–¥—É –∑–∞–¥–∞—á–∞–º–∏.&lt;/p&gt;</content><category term="msp430"></category><category term="RTOS"></category></entry><entry><title>FreeRTOS - –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ—à–∏–±–æ–∫ –∏ —Ö—É–∫–∏</title><link href="https://mazko.github.io/blog/posts/2017/04/27/freertos-diagnostika-oshibok-i-khuki/" rel="alternate"></link><published>2017-04-27T00:00:00+03:00</published><updated>2017-04-27T00:00:00+03:00</updated><author><name>Oleg Mazko</name></author><id>tag:mazko.github.io,2017-04-27:/blog/posts/2017/04/27/freertos-diagnostika-oshibok-i-khuki/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;Programming is like sex. One mistake and you have to support it for the rest of your life. ‚Äî Michael Sinz&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ—Å–≤–∞–∏–≤–∞—Ç—å &lt;a href="https://mazko.github.io/blog/posts/2017/04/26/freertos-operatsionnaia-sistema-dlia-mikrokontrollerov/"&gt;FreeRTOS&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;–†–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–π —Ä–∞–Ω–µ–µ –ø—Ä–∏–º–µ—Ä –æ—Ç–ª–∏—á–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞–≥–∏–∏ ‚Äî –Ω–∞–ø—Ä–∏–º–µ—Ä –∫–∞–∫–æ–π —Ä–∞–∑–º–µ—Ä —Å—Ç–µ–∫–∞ –Ω—É–∂–Ω–æ –≤—ã–¥–µ–ª—è—Ç—å –ø–æ–¥ –∑–∞–¥–∞—á—É –¥–∞ –∏ –≤–æ–æ–±—â–µ –∫–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–æ–≤–∏—Ç—å –æ—à–∏–±–∫–∏ —è–¥—Ä–∞ RTOS, –∫–æ—Ç–æ—Ä—ã–µ ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;Programming is like sex. One mistake and you have to support it for the rest of your life. ‚Äî Michael Sinz&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ—Å–≤–∞–∏–≤–∞—Ç—å &lt;a href="https://mazko.github.io/blog/posts/2017/04/26/freertos-operatsionnaia-sistema-dlia-mikrokontrollerov/"&gt;FreeRTOS&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;–†–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–π —Ä–∞–Ω–µ–µ –ø—Ä–∏–º–µ—Ä –æ—Ç–ª–∏—á–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞–≥–∏–∏ ‚Äî –Ω–∞–ø—Ä–∏–º–µ—Ä –∫–∞–∫–æ–π —Ä–∞–∑–º–µ—Ä —Å—Ç–µ–∫–∞ –Ω—É–∂–Ω–æ –≤—ã–¥–µ–ª—è—Ç—å –ø–æ–¥ –∑–∞–¥–∞—á—É –¥–∞ –∏ –≤–æ–æ–±—â–µ –∫–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–æ–≤–∏—Ç—å –æ—à–∏–±–∫–∏ —è–¥—Ä–∞ RTOS, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–ª—å–∑—è –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞ —ç—Ç–∞–ø–µ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ? –í–æ FreeRTOS –¥–ª—è —ç—Ç–∏—Ö —Ü–µ–ª–µ–π –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –º–µ—Ö–∞–Ω–∏–∑–º—ã:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;–º–∞–∫—Ä–æ—Å &lt;code&gt;configASSERT()&lt;/code&gt; –∞–∫—Ç–∏–≤–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —è–¥—Ä–æ–º, –∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –º–æ–∂–µ—Ç (–¥–æ–ª–∂–µ–Ω) –∑–∞–¥–∞—Ç—å —Å–≤–æ—é —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –≤—ã–≤–æ–¥–∞ –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;–≤–æ FreeRTOS —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –º–µ—Ö–∞–Ω–∏–∑–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –≤—ã–¥–µ–ª–µ–Ω–∏—è –ø–∞–º—è—Ç–∏, –∞ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø–æ–¥–æ–±–Ω–æ–≥–æ —Ä–æ–¥–∞ –æ—à–∏–±–æ–∫ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω—ã —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫–∏ (—Ö—É–∫–∏) &lt;code&gt;configUSE_MALLOC_FAILED_HOOK&lt;/code&gt; –∏ &lt;code&gt;configCHECK_FOR_STACK_OVERFLOW&lt;/code&gt; –∏ –≤–æ–∑–º–æ–∂–Ω–æ —á—Ç–æ-—Ç–æ –µ—â–µ ‚Äî –¥–æ–∫–∏ –≤ —Ä—É–∫–∏&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;–í –Ω–∞—à–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –º–æ–Ω–æ—Ö—Ä–æ–º–Ω—ã–π &lt;a href="https://mazko.github.io/blog/posts/2017/04/25/monokhromnyi-oled-displei-na-kontrollere-ssd1306/"&gt;–¥–∏—Å–ø–ª–µ–π&lt;/a&gt; –∏ —Ç—É–¥–∞ –∂–µ –±—É–¥–µ–º –∫–∏–¥–∞—Ç—å –≤—Å–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏. –ë—É–¥–µ—Ç –¥–≤–µ –∑–∞–¥–∞—á–∏ ‚Äî –∞–Ω–∏–º–∞—Ü–∏—è –Ω–∞ –ª–µ–≤—ã—Ö —Å–≤–µ—Ç–æ–¥–∏–æ–¥–∞—Ö –∏ –≤—ã–≤–æ–¥ —Ä–∞–∑–ª–∏—á–Ω–æ–π —Å–∏—Å—Ç–µ–º–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–∞ —ç–∫—Ä–∞–Ω. –ü—Ä–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–∏ –æ—à–∏–±–∫–∏ —è–¥—Ä–∞ –∏–ª–∏ –≤—ã–¥–µ–ª–µ–Ω–∏—è –ø–∞–º—è—Ç–∏ –±—É–¥–µ—Ç ¬´BSoD¬ª ‚Äî –Ω–µ –±–∞–≥, —ç—Ç–æ —Ñ–∏—á–∞. –ë—É–¥–µ–º –Ω–∞–¥–µ—è—Ç—å—Å—è –∑–∞–∫–∞–∑—á–∏–∫ –Ω–∞—à–µ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –µ–≥–æ –Ω–µ —É–≤–∏–¥–∏—Ç ‚Äî –¥–ª—è —ç—Ç–æ–≥–æ –≤ —Ä–µ–ª–∏–∑–µ, —É–∂–µ –ø–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –≤—Å—ë –∑–∞—Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ –Ω–∞–¥–æ, –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É –æ—à–∏–±–æ–∫ FreeRTOS –º–æ–∂–Ω–æ (–¥–∞–∂–µ –Ω—É–∂–Ω–æ) –ø—Ä–æ—Å—Ç–æ –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://mazko.github.io/MSP430.js/24a92b4d7a9052f4214b73dac3355e24"&gt;MSP430.js&lt;/a&gt; | &lt;a href="https://mazko.github.io/blog/posts/2017/04/27/freertos-diagnostika-oshibok-i-khuki/hooks.zip"&gt;–∏—Å—Ö–æ–¥–Ω–∏–∫–∏&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2017/04/27/freertos-diagnostika-oshibok-i-khuki/ui.gif" style="width:55%; margin: 0 auto; display:block;"&gt;&lt;/p&gt;
&lt;p&gt;–í—ã–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —ç–∫—Ä–∞–Ω –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è–º–∏ —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º &lt;code&gt;draw&lt;/code&gt;, –∫–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –±—ã–ª–æ &lt;a href="https://mazko.github.io/blog/posts/2017/04/25/monokhromnyi-oled-displei-na-kontrollere-ssd1306/"&gt;—Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–æ&lt;/a&gt; –≤ –æ–¥–Ω–æ–º –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤. –ü–æ—Å–ª–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ–≥–æ –∏–∑—É—á–µ–Ω–∏—è –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –¥–æ–±–∞–≤–∏–º –≤ –≥–¥–µ-—Ç–æ –≤ –∫–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ &lt;em&gt;FreeRTOSConfig.h&lt;/em&gt; —Å–ª–µ–¥—É—é—â–µ–µ:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;FreeRTOSConfig.h&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// tutorial: 2&lt;/span&gt;
&lt;span class="k"&gt;extern&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;vAssertCalled&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;long&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="cp"&gt;#define configASSERT( x ) if( ( x ) == 0 ) vAssertCalled( __LINE__, __FILE__ )&lt;/span&gt;

&lt;span class="c1"&gt;// Method 2 is a bit slower than method 1 &lt;/span&gt;
&lt;span class="c1"&gt;// but it will most likely catch all stack overflows.&lt;/span&gt;
&lt;span class="cp"&gt;#define configCHECK_FOR_STACK_OVERFLOW     2&lt;/span&gt;
&lt;span class="cp"&gt;#define configUSE_MALLOC_FAILED_HOOK       1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;hooks.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;FreeRTOS.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;task.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;draw.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;vApplicationStackOverflowHook&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;xTaskHandle&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pxTsk&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;signed&lt;/span&gt; &lt;span class="n"&gt;portCHAR&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pcTskNm&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;vApplicationStackOverflowHook&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;xTaskHandle&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pxTsk&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;signed&lt;/span&gt; &lt;span class="n"&gt;portCHAR&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pcTskNm&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;taskDISABLE_INTERRUPTS&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// game over&lt;/span&gt;

  &lt;span class="n"&gt;draw_clr&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="n"&gt;draw_str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="s"&gt;&amp;quot;Error: StackOverflow&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;draw_str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="s"&gt;&amp;quot;Task Name:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;draw_str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Task Name:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;pcTskNm&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;;;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;vApplicationMallocFailedHook&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;vApplicationMallocFailedHook&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;taskDISABLE_INTERRUPTS&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// game over&lt;/span&gt;

  &lt;span class="n"&gt;draw_clr&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="n"&gt;draw_str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="s"&gt;&amp;quot;Error: MallocFailed&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;;;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;vAssertCalled&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;long&lt;/span&gt; &lt;span class="n"&gt;ulLine&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;pcFileName&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;taskDISABLE_INTERRUPTS&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// game over&lt;/span&gt;

  &lt;span class="n"&gt;draw_clr&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="n"&gt;draw_str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="s"&gt;&amp;quot;Error: AssertCalled&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;draw_str_hex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;File Name:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ulLine&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;;;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ó–∞–¥–∞—á–∞ —Å –∞–Ω–∏–º–∞—Ü–∏—è–º–∏ –¥–ª—è –ª–µ–≤—ã—Ö —Å–≤–µ—Ç–æ–¥–∏–æ–¥–æ–≤ –ø–æ—á—Ç–∏ –Ω–∏—á–µ–º –Ω–µ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞, —Ç–æ–ª—å–∫–æ –≤–º–µ—Å—Ç–æ API –≤—Ä–µ–º–µ–Ω–Ω–æ–π –∑–∞–¥–µ—Ä–∂–∫–∏ &lt;code&gt;vTaskDelay&lt;/code&gt; —Ç–µ–ø–µ—Ä—å &lt;code&gt;vTaskDelayUntil&lt;/code&gt;, –∫–æ—Ç–æ—Ä–∞—è —Ç–æ—á–Ω–µ–µ –ø–µ—Ä–≤–æ–π. –î–ª—è –¥–∞–Ω–Ω–æ–π –∑–∞–¥–∞—á–∏ —Ç–æ—á–Ω–æ—Å—Ç—å –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–∞, –Ω–æ –ø—Ä–∏ –ø–µ—Ä–µ–¥–∞—á–µ –≤ —Ñ—É–Ω–∫—Ü–∏—é &lt;code&gt;vTaskDelayUntil&lt;/code&gt; –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç &lt;code&gt;configASSERT&lt;/code&gt;, —á—Ç–æ –¥–∞—Å—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–∞–º—É –ø—Ä–æ–≤–µ—Ä–∫—É:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;task_l_leds.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;FreeRTOS.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;task.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;task_l_leds.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;portTickType&lt;/span&gt; &lt;span class="n"&gt;xLastWakeTime&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;rotate_rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;volatile&lt;/span&gt; &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;b10000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;vTaskDelayUntil&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;xLastWakeTime&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="cm"&gt;/* ticks */&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;vTaskLedsL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pvParameters&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

   &lt;span class="n"&gt;xLastWakeTime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;xTaskGetTickCount&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

   &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;;;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="n"&gt;rotate_rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;P4OUT&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
     &lt;span class="n"&gt;rotate_rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;P5OUT&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
     &lt;span class="n"&gt;rotate_rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;P6OUT&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

   &lt;span class="n"&gt;vTaskDelete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–í—ã–≤–æ–¥ –ø–æ–ª–µ–∑–Ω–æ–π —Ç–µ–∫—É—â–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∏—Å—Ç–µ–º–µ –º–æ–≥ –±—ã –≤—ã–≥–ª—è–¥–µ—Ç—å –ø—Ä–∏–º–µ—Ä–Ω–æ —Å–ª–µ–¥—É—é—â–∏–º –æ–±—Ä–∞–∑–æ–º ‚Äî –æ–ø—è—Ç—å-—Ç–∞–∫–∏ –µ—Å–ª–∏ —Ö–æ—Ä–æ—à–æ –ø–æ–∫–æ–ø–∞—Ç—å—Å—è –≤ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –∫ FreeRTOS —Ç–æ –Ω–∞–≤–µ—Ä–Ω—è–∫–∞ –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –µ—â—ë –∫–∞–∫–∏–µ-–Ω–∏–±—É–¥—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —à—Ç—É–∫–æ–≤–∏–Ω—ã, —ç—Ç–æ —Ç–æ–ª—å–∫–æ –Ω–∞–±—Ä–æ—Å–æ–∫ —Ç–æ–≥–æ —á—Ç–æ –ø–æ–ø–∞–ª–æ—Å—å –Ω–∞ –≥–ª–∞–∑–∞: &lt;/p&gt;
&lt;p&gt;&lt;em&gt;task_stat.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;FreeRTOS.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;task.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;draw.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;task_stat.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;vTaskStat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pvParameters&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="c1"&gt;// once&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;draw_char&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="n"&gt;draw_str_hex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;portBASE_TYPE&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;portBASE_TYPE&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="n"&gt;draw_str_hex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;portTickType&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;portTickType&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="n"&gt;draw_str_hex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;tick rate (Hz)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;configTICK_RATE_HZ&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="c1"&gt;// loop&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;;;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;draw_str_hex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;uptime&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;xTaskGetTickCount&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
    &lt;span class="n"&gt;draw_str_hex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;freeHeapSize&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;xPortGetFreeHeapSize&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
    &lt;span class="n"&gt;draw_str_hex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;numberOfTasks&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;uxTaskGetNumberOfTasks&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="n"&gt;vTaskDelete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ò –∫–∞–∫ –≤—ã –¥—É–º–∞–µ—Ç–µ —á—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ ? –ê –ø–æ–ª—É—á–∏–º –º—ã –≤–æ—Ç —Ç–∞–∫—É—é –∫—Ä–∞—Å–æ—Ç—É !&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2017/04/27/freertos-diagnostika-oshibok-i-khuki/stackoverflow.png" style="width:55%; margin: 0 auto; display:block;"&gt;&lt;/p&gt;
&lt;p&gt;–ö–∞–∫ –Ω–µ—Å–ª–æ–∂–Ω–æ –¥–æ–≥–∞–¥–∞—Ç—å—Å—è —Å—Ä–∞–±–æ—Ç–∞–ª –ø–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫ &lt;code&gt;vApplicationStackOverflowHook&lt;/code&gt;. –ß—Ç–æ–±—ã –ø–æ—á–∏–Ω–∏—Ç—å —ç—Ç–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —É–≤–µ–ª–∏—á–∏—Ç—å &lt;code&gt;configMINIMAL_STACK_SIZE&lt;/code&gt; —Å 50 –¥–æ 100. –¢–æ—á–Ω–æ —Ç–∞–∫ –∂–µ –≤ –∫–∞—á–µ—Å—Ç–≤–µ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞ –º–æ–∂–Ω–æ —Ç–µ–ø–µ—Ä—å —É–º–µ–Ω—å—à–∏—Ç—å &lt;code&gt;configTOTAL_HEAP_SIZE&lt;/code&gt; —Å–∫–∞–∂–µ–º –¥–æ 42 –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ö—É–∫–∞ &lt;code&gt;vApplicationMallocFailedHook&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2017/04/27/freertos-diagnostika-oshibok-i-khuki/maloocfailed.png" style="width:55%; margin: 0 auto; display:block;"&gt;&lt;/p&gt;
&lt;p&gt;–ù—É –∏ –Ω–∞–ø–æ—Å–ª–µ–¥–æ–∫ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ &lt;code&gt;vTaskDelayUntil&lt;/code&gt; –ø–µ—Ä–µ–¥–∞—Ç—å –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ª—é–±–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ 0 –∏ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç &lt;code&gt;configASSERT&lt;/code&gt;, –∫–æ—Ç–æ—Ä—ã–π –∑–Ω–∞–µ—Ç –∏–º—è —Ñ–∞–π–ª–∞ –∏ –Ω–æ–º–µ—Ä —Å—Ç—Ä–æ–∫–∏ –≥–¥–µ —Å–ª—É—á–∏–ª–∞—Å—å –æ—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ —è–¥—Ä–∞: &lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2017/04/27/freertos-diagnostika-oshibok-i-khuki/assert.png" style="width:55%; margin: 0 auto; display:block;"&gt;&lt;/p&gt;
&lt;p&gt;–ï—â—ë —É FreeRTOS –µ—Å—Ç—å –æ–¥–∏–Ω –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –ø–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫ –¥–ª—è –∑–∞–¥–∞—á–∏ –ë–µ–∑–¥–µ–π—Å—Ç–≤–∏—è (Idle task) ‚Äî &lt;code&gt;configUSE_IDLE_HOOK&lt;/code&gt;. –ó–∞–¥–∞—á–∞ idle –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—ë—Ç—Å—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∏ –æ–Ω–∞ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é. –ï–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∑–∞–¥–∞–µ—Ç—Å—è –º–∞–∫—Ä–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º &lt;code&gt;tskIDLE_PRIORITY&lt;/code&gt; –∫–∞–∫ —Å–∞–º—ã–π –Ω–∏–∑–∫–∏–π –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ (–æ–±—ã—á–Ω–æ 0). –≠—Ç–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ –∑–∞–¥–∞—á–∞ –ë–µ–∑–¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è, –ø–æ–∫–∞ –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ –µ—Å—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω–∞ –∑–∞–¥–∞—á–∞ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é –∏ –∫–∞–∫ —Ç–æ–ª—å–∫–æ –ø–æ—è–≤–∏—Ç—Å—è –ª—é–±–∞—è –≥–æ—Ç–æ–≤–∞—è –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é –∑–∞–¥–∞—á–∞, –∑–∞–¥–∞—á–∞ –ë–µ–∑–¥–µ–π—Å—Ç–≤–∏–µ –±—É–¥–µ—Ç –µ—é –≤—ã—Ç–µ—Å–Ω–µ–Ω–∞. –ï—â—ë —ç—Ç–∞ –∑–∞–¥–∞—á–∞ –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ–º –ø–∞–º—è—Ç–∏, –≤—ã–¥–µ–ª–µ–Ω–Ω–æ–π –∑–∞–¥–∞—á–∞–º, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã –∏ –ø–æ—ç—Ç–æ–º—É –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö, –∏—Å–ø–æ–ª—å–∑—É—é—â–∏—Ö &lt;code&gt;vTaskDelete()&lt;/code&gt;, –≤–∞–∂–Ω–æ –æ–±–µ—Å–ø–µ—á–∏—Ç—å –≤—Ä–µ–º—è –¥–ª—è –∑–∞–¥–∞—á–∏ idle. –¢–∞–∫–∂–µ —á–∞—Å—Ç–æ –∑–∞–¥–∞—á—É –ë–µ–∑–¥–µ–π—Å—Ç–≤–∏–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤—ã–∑—ã–≤–∞—Ç—å —Ä–µ–∂–∏–º —ç–Ω–µ—Ä–≥–æ—Å–±–µ—Ä–µ–∂–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mazko.github.io/blog/posts/2017/04/28/freertos-sovmestnyi-dostup-k-obshchim-resursam/"&gt;–î–∞–ª–µ–µ&lt;/a&gt; –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
—Å–æ–≤–º–µ—Å—Ç–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∑–∞–¥–∞—á/–ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–π –∫ –æ–¥–Ω–æ–º—É —Ä–µ—Å—É—Ä—Å—É.&lt;/p&gt;</content><category term="msp430"></category><category term="RTOS"></category></entry><entry><title>FreeRTOS - –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –¥–ª—è –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤</title><link href="https://mazko.github.io/blog/posts/2017/04/26/freertos-operatsionnaia-sistema-dlia-mikrokontrollerov/" rel="alternate"></link><published>2017-04-26T00:00:00+03:00</published><updated>2017-04-26T00:00:00+03:00</updated><author><name>Oleg Mazko</name></author><id>tag:mazko.github.io,2017-04-26:/blog/posts/2017/04/26/freertos-operatsionnaia-sistema-dlia-mikrokontrollerov/</id><summary type="html">&lt;p&gt;FreeRTOS ‚Äî –º–Ω–æ–≥–æ–∑–∞–¥–∞—á–Ω–∞—è, –º—É–ª—å—Ç–∏–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∂–µ—Å—Ç–∫–æ–≥–æ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ (&lt;a href="https://mazko.github.io/blog/posts/2017/02/05/picsimjs-soprogrammy-i-prosteishaia-mnogozadachnost/"&gt;RTOS&lt;/a&gt;) –¥–ª—è –≤—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã—Ö —Å–∏—Å—Ç–µ–º. –ù–∞–ø–∏—Å–∞–Ω–∞ –Ω–∞ —è–∑—ã–∫–µ –°–∏ —Å –∞—Å—Å–µ–º–±–ª–µ—Ä–Ω—ã–º–∏ –≤—Å—Ç–∞–≤–∫–∞–º–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∞–ø–ø–∞—Ä–∞—Ç–Ω–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã. –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ FreeRTOS –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ç—Ä–∏ —Ç–∏–ø–∞ –º–Ω–æ–≥–æ–∑–∞–¥–∞—á–Ω–æ—Å—Ç–∏: –≤—ã—Ç–µ—Å–Ω—è—é—â—É—é —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞–º–∏, &lt;a href="https://mazko.github.io/blog/posts/2017/02/05/picsimjs-soprogrammy-i-prosteishaia-mnogozadachnost/"&gt;–∫–æ–æ–ø–µ—Ä–∞—Ç–∏–≤–Ω—É—é&lt;/a&gt; –∏ –≥–∏–±—Ä–∏–¥–Ω—É—é. –ö–∞–∫–∞—è –∏–∑ –Ω–∏—Ö –ª—É—á—à–µ ? –í –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–µ —Å–ª—É—á–∞–µ–≤ –≤—ã—Ç–µ—Å–Ω—è—é—â–∞—è –º–Ω–æ–≥–æ–∑–∞–¥–∞—á–Ω–æ—Å—Ç—å —è–≤–ª—è–µ—Ç—Å—è –±–æ–ª–µ–µ –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–æ–π —Ç.–∫. –≤ ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;FreeRTOS ‚Äî –º–Ω–æ–≥–æ–∑–∞–¥–∞—á–Ω–∞—è, –º—É–ª—å—Ç–∏–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∂–µ—Å—Ç–∫–æ–≥–æ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ (&lt;a href="https://mazko.github.io/blog/posts/2017/02/05/picsimjs-soprogrammy-i-prosteishaia-mnogozadachnost/"&gt;RTOS&lt;/a&gt;) –¥–ª—è –≤—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã—Ö —Å–∏—Å—Ç–µ–º. –ù–∞–ø–∏—Å–∞–Ω–∞ –Ω–∞ —è–∑—ã–∫–µ –°–∏ —Å –∞—Å—Å–µ–º–±–ª–µ—Ä–Ω—ã–º–∏ –≤—Å—Ç–∞–≤–∫–∞–º–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∞–ø–ø–∞—Ä–∞—Ç–Ω–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã. –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ FreeRTOS –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ç—Ä–∏ —Ç–∏–ø–∞ –º–Ω–æ–≥–æ–∑–∞–¥–∞—á–Ω–æ—Å—Ç–∏: –≤—ã—Ç–µ—Å–Ω—è—é—â—É—é —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞–º–∏, &lt;a href="https://mazko.github.io/blog/posts/2017/02/05/picsimjs-soprogrammy-i-prosteishaia-mnogozadachnost/"&gt;–∫–æ–æ–ø–µ—Ä–∞—Ç–∏–≤–Ω—É—é&lt;/a&gt; –∏ –≥–∏–±—Ä–∏–¥–Ω—É—é. –ö–∞–∫–∞—è –∏–∑ –Ω–∏—Ö –ª—É—á—à–µ ? –í –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–µ —Å–ª—É—á–∞–µ–≤ –≤—ã—Ç–µ—Å–Ω—è—é—â–∞—è –º–Ω–æ–≥–æ–∑–∞–¥–∞—á–Ω–æ—Å—Ç—å —è–≤–ª—è–µ—Ç—Å—è –±–æ–ª–µ–µ –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–æ–π —Ç.–∫. –≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç –∫–æ–æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –º–Ω–æ–≥–æ–∑–∞–¥–∞—á–Ω–æ—Å—Ç–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è –≤–Ω–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ä–∞–±–æ—Ç–∞—é—â–∏—Ö –∑–∞–¥–∞—á, –±–ª–∞–≥–æ–¥–∞—Ä—è —á–µ–º—É –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è —Å–≤–æ–µ–≤—Ä–µ–º–µ–Ω–Ω–∞—è —Ä–µ–∞–∫—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –Ω–∞ –∫–∞–∫–æ–µ-–ª–∏–±–æ –±–æ–ª–µ–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ. –¢–∞–∫–∏–µ —Å–∏—Å—Ç–µ–º—ã –ø—Ä–∏–Ω—è—Ç–æ –Ω–∞–∑—ã–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º–∞–º–∏ &lt;strong&gt;–∂–µ—Å—Ç–∫–æ–≥–æ&lt;/strong&gt; —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏. –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ –∫–æ–æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –º–Ω–æ–≥–æ–∑–∞–¥–∞—á–Ω–æ—Å—Ç—å –ø–æ —Å–≤–æ–µ–π –ø—Ä–∏—Ä–æ–¥–µ —è–≤–ª—è–µ—Ç—Å—è —Å–∏—Å—Ç–µ–º–æ–π &lt;strong&gt;–º—è–≥–∫–æ–≥–æ&lt;/strong&gt; —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Ç.–∫. –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ—Ä–≤–∞—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –∑–∞–¥–∞—á–∏ –¥–∞–∂–µ –µ—Å–ª–∏ –ø–æ—è–≤–∏–ª–∞—Å—å –≥–æ—Ç–æ–≤–∞—è –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é –∑–∞–¥–∞—á–∞ —Å –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–∏–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º ‚Äî —Ç—É—Ç –∫–∞–∂–¥–∞—è –∑–∞–¥–∞—á–∞ –¥–æ–ª–∂–Ω–∞ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫—É. –ì–∏–±—Ä–∏–¥–Ω–∞—è –∏ –∫–æ–æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –º–Ω–æ–≥–æ–∑–∞–¥–∞—á–Ω–æ—Å—Ç—å –≤–æ FreeRTOS —è–≤–ª—è–µ—Ç—Å—è –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º–∏ –∏ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Å–ª—É–∂–∞—Ç –¥–ª—è –±–æ–ª–µ–µ —Ä–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞, –∫–æ—Ç–æ—Ä—ã—Ö –≤—Å–µ–≥–¥–∞ –æ—á–µ–Ω—å –º–∞–ª–æ :)&lt;/p&gt;
&lt;p&gt;&lt;a href="http://mazko.github.io/MSP430.js/4762128c15a0dcc8e4d8f849a0998f20"&gt;MSP430.js&lt;/a&gt; | &lt;a href="https://mazko.github.io/blog/posts/2017/04/26/freertos-operatsionnaia-sistema-dlia-mikrokontrollerov/tasks.zip"&gt;–∏—Å—Ö–æ–¥–Ω–∏–∫–∏&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2017/04/26/freertos-operatsionnaia-sistema-dlia-mikrokontrollerov/ui.gif" style="width:55%; margin: 0 auto; display:block;"&gt;&lt;/p&gt;
&lt;p&gt;–ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ FreeRTOS —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –±—Ä–∞—Ç—å –∑–∞ –æ—Å–Ω–æ–≤—É –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç –∏–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–∏–º–µ—Ä–æ–≤. –í –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä &lt;a href="https://mazko.github.io/blog/posts/2017/03/20/s-18-dlia-mikrokontrollerov-razvedka-boem/"&gt;MSP430F1611&lt;/a&gt;, –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞ makefile –∏ –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä (msp430-gcc 6.2.1.16) —Å–∞–º—ã–π —Å–≤–µ–∂–∏–π –Ω–∞ —Ç–µ–∫—É—â–∏–π –º–æ–º–µ–Ω—Ç –æ—Ç &lt;a href="http://www.ti.com/tool/msp430-gcc-opensource" rel="nofollow"&gt;–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è&lt;/a&gt;. –í—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏, –∫–∞—Å–∞—é—â–∏–µ—Å—è FreeRTOS, –ø—Ä–∏–Ω—è—Ç–æ –ø–æ–º–µ—â–∞—Ç—å –≤ –æ–¥–∏–Ω –æ—Ç–¥–µ–ª—å–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ—á–Ω—ã–π —Ñ–∞–π–ª &lt;em&gt;FreeRTOSConfig.h&lt;/em&gt;. –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤ —ç—Ç–æ–º —Ñ–∞–π–ª–µ —è–≤–ª—è—é—Ç—Å—è –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º–∏ —Ç.–∫. —É–∂–µ –∏–º–µ—é—Ç –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –æ–¥–Ω–∞–∫–æ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ–ø—Ä–µ–¥–µ–ª—è—Ç—å –≤ –∫–∞–∂–¥–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∏–±–æ —Å–ª–æ–º–∞–µ—Ç—Å—è –∫–æ–º–ø–∏–ª—è—Ü–∏—è:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;FreeRTOSConfig.h&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#ifndef FREERTOS_CONFIG_H&lt;/span&gt;
&lt;span class="cp"&gt;#define FREERTOS_CONFIG_H&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;msp430.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cm"&gt;/*-----------------------------------------------------------&lt;/span&gt;
&lt;span class="cm"&gt; * Application specific definitions.&lt;/span&gt;
&lt;span class="cm"&gt; *&lt;/span&gt;
&lt;span class="cm"&gt; * These definitions should be adjusted for your particular hardware and&lt;/span&gt;
&lt;span class="cm"&gt; * application requirements.&lt;/span&gt;
&lt;span class="cm"&gt; *&lt;/span&gt;
&lt;span class="cm"&gt; * THESE PARAMETERS ARE DESCRIBED WITHIN THE &amp;#39;CONFIGURATION&amp;#39; SECTION OF THE&lt;/span&gt;
&lt;span class="cm"&gt; * FreeRTOS API DOCUMENTATION AVAILABLE ON THE FreeRTOS.org WEB SITE. &lt;/span&gt;
&lt;span class="cm"&gt; *&lt;/span&gt;
&lt;span class="cm"&gt; * See http://www.freertos.org/a00110.html.&lt;/span&gt;
&lt;span class="cm"&gt; *----------------------------------------------------------*/&lt;/span&gt;

&lt;span class="cp"&gt;#define configUSE_PREEMPTION        1&lt;/span&gt;
&lt;span class="cp"&gt;#define configUSE_IDLE_HOOK         0&lt;/span&gt;
&lt;span class="cp"&gt;#define configUSE_TICK_HOOK         0&lt;/span&gt;
&lt;span class="cp"&gt;#define configCPU_CLOCK_HZ          ( ( unsigned long ) 130000 )&lt;/span&gt;
&lt;span class="cp"&gt;#define configTICK_RATE_HZ          ( ( TickType_t ) 10 )&lt;/span&gt;
&lt;span class="cp"&gt;#define configMAX_PRIORITIES        2&lt;/span&gt;
&lt;span class="cp"&gt;#define configMINIMAL_STACK_SIZE    ( ( unsigned short ) 50 )&lt;/span&gt;
&lt;span class="cp"&gt;#define configTOTAL_HEAP_SIZE       ( ( size_t ) ( 8 * 1024 ) )&lt;/span&gt;
&lt;span class="cp"&gt;#define configUSE_16_BIT_TICKS      1&lt;/span&gt;

&lt;span class="cp"&gt;#endif &lt;/span&gt;&lt;span class="cm"&gt;/* FREERTOS_CONFIG_H */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ò—Ç–∞–∫ –ø—Ä–æ–±–µ–∂–∏–º—Å—è –ø–æ –ø–æ—Ä—è–¥–∫—É –ø–æ –≤—Å–µ–º —É–∫–∞–∑–∞–Ω–Ω—ã–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;configUSE_PREEMPTION&lt;/em&gt; –∑–∞–¥–∞—ë—Ç —Ä–µ–∂–∏–º –º–Ω–æ–≥–æ–∑–∞–¥–∞—á–Ω–æ—Å—Ç–∏ ‚Äî –∫–æ–æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è (0) –∏–ª–∏ –≤—ã—Ç–µ—Å–Ω—è—é—â–∞—è (1)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;configUSE_IDLE_HOOK&lt;/em&gt;, &lt;em&gt;configUSE_TICK_HOOK&lt;/em&gt; ‚Äî —Ö—É–∫–∏ —Å–µ–π—á–∞—Å –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º (0), –Ω–æ –±—É–¥–µ–º –≤ —Å–ª–µ–¥—É—é—â–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª–µ&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;configCPU_CLOCK_HZ&lt;/em&gt; ‚Äî –≤ –ø–æ–¥–∞–≤–ª—è—é—â–µ–º –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–µ –∑–∞–¥–∞—á –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–º–µ—Ä—è—Ç—å –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã –≤—Ä–µ–º–µ–Ω–∏, –¥–∞–Ω–Ω–∞—è –≤–µ–ª–∏—á–∏–Ω–∞ ‚Äî —Ç–∞–∫—Ç–æ–≤–∞—è —á–∞—Å—Ç–æ—Ç—ã –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ (–ø–æ—Ö–æ–∂–µ –ø–æ—Ä—Ç MSP430 –µ—ë –Ω–∏–≥–¥–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç, —Å–µ–π—á–∞—Å —Ç–∞–º –ø—Ä–∏ —Ä–∞—Å—á—ë—Ç–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∫–≤–∞–Ω—Ç–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è &lt;code&gt;portACLK_FREQUENCY_HZ&lt;/code&gt; –∏–∑ —Ä–∞—Å—á—ë—Ç–∞ &lt;code&gt;LFXT1CLK = 32768 Hz&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;configTICK_RATE_HZ&lt;/em&gt; ‚Äî –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É –∑–∞–¥–∞—á–∞–º–∏ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ —Ä–∞–≤–Ω—ã–µ –∫–≤–∞–Ω—Ç—ã –≤—Ä–µ–º–µ–Ω–∏ —Ä–∞–±–æ—Ç—ã –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∏ –≤—Ä–µ–º—è —Ä–µ–∞–∫—Ü–∏–∏ FreeRTOS –Ω–∞ –≤–Ω–µ—à–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è –≤ —Ä–µ–∂–∏–º–µ –≤—ã—Ç–µ—Å–Ω—è—é—â–µ–π –º–Ω–æ–≥–æ–∑–∞–¥–∞—á–Ω–æ—Å—Ç–∏ –Ω–µ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –æ–¥–Ω–æ–≥–æ –∫–≤–∞–Ω—Ç–∞. –ü–æ –∏–¥–µ–µ —á–µ–º –º–µ–Ω—å—à–µ –∫–≤–∞–Ω—Ç —Ç–µ–º –ª—É—á—à–µ, –æ–¥–Ω–∞–∫–æ –∑–∞ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ–º —á–∞—Å—Ç–æ—Ç—ã –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–π —Å–ª–µ–¥—É–µ—Ç —Ç–æ, —á—Ç–æ —è–¥—Ä–æ —Å–∏—Å—Ç–µ–º—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –±–æ–ª—å—à–µ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –∏ —Ç–æ–≥–¥–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ –º–µ–Ω—å—à–µ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–Ω–æ–≥–æ –≤—Ä–µ–º—è –æ—Å—Ç–∞—ë—Ç—Å—è –ø–æ–¥ –∑–∞–¥–∞—á–∏. –ß–µ–º –≤—ã—à–µ —Ç–∞–∫—Ç–æ–≤–∞—è —á–∞—Å—Ç–æ—Ç–∞, —Ç–µ–º –±–æ–ª—å—à—É—é —á–∞—Å—Ç–æ—Ç—É –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –º–æ–∂–Ω–æ –∑–∞–¥–∞–≤–∞—Ç—å&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;configMAX_PRIORITIES&lt;/em&gt; ‚Äî –∫–∞–∂–¥–æ–π –∑–∞–¥–∞—á–µ –Ω–∞–∑–Ω–∞—á–∞–µ—Ç—Å—è –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –æ—Ç 0 –¥–æ (configMAX_PRIORITIES - 1). –ù–∞–∏–±–æ–ª–µ–µ –Ω–∏–∑–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç —É –∑–∞–¥–∞—á–∏ ¬´–±–µ–∑–¥–µ–π—Å—Ç–≤–∏–µ¬ª, –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–≥–æ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ –∫–∞–∫ 0. –£–º–µ–Ω—å—à–µ–Ω–∏–µ configMAX_PRIORITIES –ø–æ–∑–≤–æ–ª—è–µ—Ç —É–º–µ–Ω—å—à–∏—Ç—å –æ–±—ä–µ–º –û–ó–£, –ø–æ—Ç—Ä–µ–±–ª—è–µ–º—ã–π —è–¥—Ä–æ–º&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;configMINIMAL_STACK_SIZE&lt;/em&gt;, &lt;em&gt;configTOTAL_HEAP_SIZE&lt;/em&gt; ‚Äî –ø–æ–∫–∞ —á—Ç–æ –ø—É—Å—Ç—å —ç—Ç–æ –±—É–¥—É—Ç –Ω–µ–∫–∏–µ &lt;a href="https://mazko.github.io/blog/posts/2012/10/08/idiomy-v-ansi-c/"&gt;–º–∞–≥–∏—á–µ—Å–∫–∏–µ —á–∏—Å–ª–∞&lt;/a&gt;, –æ–ø—Ä–µ–¥–µ–ª—è—é—â–∏–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π –æ–±—ä—ë–º –ø–∞–º—è—Ç–∏ –¥–ª—è –Ω–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–¥–∞—á. –ß—Ç–æ –±—É–¥–µ—Ç –µ—Å–ª–∏ –∏—Ö –ø–æ–º–µ–Ω—è—Ç—å –∏–ª–∏ –∑–∞–¥–∞—Ç—å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–∏–º –≤ —Å–ª–µ–¥—É—é—â–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª–µ&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;configUSE_16_BIT_TICKS&lt;/em&gt; ‚Äî —Ä–∞–∑—Ä—è–¥–Ω–æ—Å—Ç—å —Å—á—ë—Ç—á–∏–∫–∞ –∫–≤–∞–Ω—Ç–æ–≤ –≤—Ä–µ–º–µ–Ω–∏, –ø—Ä–æ—à–µ–¥—à–∏—Ö —Å –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã 16 –±–∏—Ç (1) –∏–ª–∏ 32 –±–∏—Ç (0)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ RTOS –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∏–∑ —Å–µ–±—è –Ω–∞–±–æ—Ä —Å–æ–æ–±—â–∞—é—â–∏—Ö—Å—è –º–µ–∂–¥—É —Å–æ–±–æ–π –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã—Ö –∑–∞–¥–∞—á. –ö–∞–∂–¥–∞—è –∑–∞–¥–∞—á–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤ —Å–≤–æ—ë–º —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ. –í —Ä–∞–º–∫–∞—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∞ –∑–∞–¥–∞—á–∞, –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Ç–æ, –∫–∞–∫–∏–µ –∑–∞–¥–∞—á–∏ –∫–æ–≥–¥–∞ –¥–æ–ª–∂–Ω—ã –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è. –í—ã—Ç–µ—Å–Ω—è—é—â–∏–π –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —Å–∞–º –ø—Ä–∏–æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∏ –≤–æ–∑–æ–±–Ω–æ–≤–ª—è–µ—Ç –∑–∞–¥–∞—á–∏ (–ø–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç –∑–∞–¥–∞—á–∏) –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –∏ —Ç.–∫. –∑–∞–¥–∞—á–∞ –Ω–µ –∑–Ω–∞–µ—Ç –æ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞, —Ç–æ –∏–º–µ–Ω–Ω–æ –æ–Ω –∏ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞, —á—Ç–æ–±—ã –∑–∞–¥–∞—á–∞ –±—ã–ª–∞ –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∞ –≤ —Ç–æ–º –∂–µ —Å–æ—Å—Ç–æ—è–Ω–∏–∏, —á—Ç–æ –∏ –±—ã–ª–∞ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞. –î–ª—è —ç—Ç–æ–≥–æ –∫–∞–∂–¥–æ–π –∑–∞–¥–∞—á–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω—ã–π —Å—Ç–µ–∫. –ö–æ–≥–¥–∞ –∑–∞–¥–∞—á–∞ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, –∫–æ–Ω—Ç–µ–∫—Å—Ç –∑–∞–¥–∞—á–∏ —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ —Å—Ç–µ–∫–µ –∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–µ—Ä–µ–¥ –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º.&lt;/p&gt;
&lt;p&gt;–¢–µ–ø–µ—Ä—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ –ø–æ—Ä–∞ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∏ —Å–∞–º–∏ –∑–∞–¥–∞—á–∏. –£ –Ω–∞—Å –¥–≤–µ –≥—Ä—É–ø–ø—ã —Å–≤–µ—Ç–æ–¥–∏–æ–¥–æ–≤ ‚Äî –ª–µ–≤—ã–µ –∏ –ø—Ä–∞–≤—ã–µ –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ –¥–≤–µ –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–µ –∑–∞–¥–∞—á–∏ —Å –∞–Ω–∏–º–∞—Ü–∏—è–º–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –≥—Ä—É–ø–ø—ã.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;task_r_leds.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;FreeRTOS.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;task.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;task_r_leds.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;vTaskLedsR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pvParameters&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;;;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="n"&gt;P3OUT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;P3OUT&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt; &lt;span class="mh"&gt;0xFF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;b11&lt;/span&gt; &lt;span class="cm"&gt;/* don&amp;#39;t toggle LCD pins 0b11 */&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;volatile&lt;/span&gt; &lt;span class="kt"&gt;uint16_t&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10000&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// delay&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="cm"&gt;/* Should the task implementation ever break out of the above loop, then the task&lt;/span&gt;
&lt;span class="cm"&gt;    must be deleted before reaching the end of its implementing function. The NULL&lt;/span&gt;
&lt;span class="cm"&gt;    parameter passed to the vTaskDelete() API function indicates that the task to be&lt;/span&gt;
&lt;span class="cm"&gt;    deleted is the calling (this) task. */&lt;/span&gt;

   &lt;span class="n"&gt;vTaskDelete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;task_l_leds.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;FreeRTOS.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;task.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;task_l_leds.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;rotate_rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;volatile&lt;/span&gt; &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;b10000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;volatile&lt;/span&gt; &lt;span class="kt"&gt;uint16_t&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5000&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// delay&lt;/span&gt;
        &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;vTaskLedsL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pvParameters&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;;;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;volatile&lt;/span&gt; &lt;span class="kt"&gt;uint16_t&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;42000&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="c1"&gt;// delay&lt;/span&gt;
     &lt;span class="n"&gt;rotate_rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;P4OUT&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
     &lt;span class="n"&gt;rotate_rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;P5OUT&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
     &lt;span class="n"&gt;rotate_rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;P6OUT&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

   &lt;span class="n"&gt;vTaskDelete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ò–º–µ–Ω–∞ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–≤ –≤ –∏—Å—Ö–æ–¥–Ω–æ–º –∫–æ–¥–µ —è–¥—Ä–∞ FreeRTOS –∏ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö –ø–æ–¥—á–∏–Ω—è—é—Ç—Å—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º —Å–æ–≥–ª–∞—à–µ–Ω–∏—è–º –æ–± –∏–º–µ–Ω–æ–≤–∞–Ω–∏–∏, –∑–Ω–∞—è –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ—â–µ –ø–æ–Ω–∏–º–∞—Ç—å —Ç–µ–∫—Å—Ç—ã –ø—Ä–æ–≥—Ä–∞–º–º. –ò–º–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏ —Ñ—É–Ω–∫—Ü–∏–π –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –≤ –ø—Ä–µ—Ñ–∏–∫—Å–Ω–æ–π —Ñ–æ—Ä–º–µ (—Ç–∞–∫ –Ω–∞–∑—ã–≤–∞–µ–º–∞—è
–í–µ–Ω–≥–µ—Ä—Å–∫–∞—è –Ω–æ—Ç–∞—Ü–∏—è), –Ω–∞–ø—Ä–∏–º–µ—Ä &lt;code&gt;ulMemCheck&lt;/code&gt; ‚Äî –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Ç–∏–ø–∞ &lt;code&gt;unsigned long&lt;/code&gt;, &lt;code&gt;pxCreatedTask&lt;/code&gt; ‚Äî –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Ç–∏–ø–∞ ¬´—É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—É¬ª, –≤ –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ &lt;code&gt;vTaskDelete&lt;/code&gt; ‚Äî —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç &lt;code&gt;void&lt;/code&gt;. –§—É–Ω–∫—Ü–∏–∏-–∑–∞–¥–∞—á–∏ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –ø—Ä–µ—Ä—ã–≤–∞—é—Ç—Å—è, –ø–æ—ç—Ç–æ–º—É –æ–±—ã—á–Ω–æ —Ä–µ–∞–ª–∏–∑—É—é—Ç—Å—è –ø—Ä–∏ –ø–æ–º–æ—â–∏ –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–≥–æ —Ü–∏–∫–ª–∞, –∞ –µ—Å–ª–∏ –≤—Å–µ-—Ç–∞–∫–∏ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç –≤—ã—Ö–æ–¥ –∏–∑ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–≥–æ —Ü–∏–∫–ª–∞, —Ç–æ –∑–∞–¥–∞—á–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∞ –¥–æ –∫–æ–Ω—Ü–∞ —Ñ—É–Ω–∫—Ü–∏–∏ ‚Äî –ø–æ –∫—Ä–∞–π–Ω–µ–π –º–µ—Ä–µ —Ç–∞–∫ –ø–æ–∫–∞–∑–∞–Ω–æ –≤ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–∏–º–µ—Ä–∞—Ö –∫ FreeRTOS. –ü–∞—Ä–∞–º–µ—Ç—Ä NULL –æ–±–æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —É–Ω–∏—á—Ç–æ–∂–∞–µ—Ç—Å—è —Å–∞–º–∞ –∑–∞–¥–∞—á–∞, –∏–∑ –∫–æ—Ç–æ—Ä–æ–π –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤—ã–∑–æ–≤ API-—Ñ—É–Ω–∫—Ü–∏–∏ &lt;code&gt;vTaskDelete()&lt;/code&gt; (—Ö–∞—Ä–∞–∫–∏—Ä–∏).&lt;/p&gt;
&lt;p&gt;–§—Ä–∞–≥–º–µ–Ω—Ç –∫–æ–¥–∞ —Å &lt;code&gt;disable_watchdog&lt;/code&gt; –Ω–µ –∏–º–µ–µ—Ç –æ—Ç–Ω–æ—à–µ–Ω–∏—è –∫ FreeRTOS ‚Äî —ç—Ç–æ –æ–±—Ö–æ–¥ –≥—Ä–∞–±–ª–µ–π –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä–∞. –ë–µ–∑ —ç—Ç–æ–≥–æ –∫–æ—Å—Ç—ã–ª—è –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ–ª—å—à–∏—Ö –º–∞—Å—Å–∏–≤–æ–≤ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç &lt;a href="https://mazko.github.io/blog/posts/2017/01/17/picsimjs-storozhevoi-taimer-i-spiashchii-rezhim/"&gt;—Å—Ç–æ—Ä–æ–∂–µ–≤–æ–π —Ç–∞–π–º–µ—Ä&lt;/a&gt; –µ—â—ë –¥–æ —Ç–æ—á–∫–∏ –≤—Ö–æ–¥–∞ &lt;code&gt;int main( void )&lt;/code&gt; –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä :(&lt;/p&gt;
&lt;p&gt;&lt;em&gt;main.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;FreeRTOS.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;task.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;task_r_leds.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;task_l_leds.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="c1"&gt;// !!!!   msp430-gcc 6.2.1.16   !!!!&lt;/span&gt;
&lt;span class="c1"&gt;// msp430_gcc/examples/watchdog.txt&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;__attribute__&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="kr"&gt;naked&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;section&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;.crt_0042&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;used&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;disable_watchdog&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;WDTCTL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;WDTPW&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;WDTHOLD&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Stop watchdog timer&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/* Demo task priorities. */&lt;/span&gt;

&lt;span class="k"&gt;enum&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="n"&gt;main_TASK_PRIORITY_LEDS_L&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tskIDLE_PRIORITY&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="n"&gt;main_TASK_PRIORITY_LEDS_R&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;main_TASK_PRIORITY_LEDS_L&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt; * Start the demo application tasks - then start the real time scheduler.&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="cm"&gt;/* Setup the hardware ready for the demo. */&lt;/span&gt;

  &lt;span class="c1"&gt;// DCO = 3, RSEL = 0, f = 0.13 MHz&lt;/span&gt;
  &lt;span class="n"&gt;DCOCTL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="cm"&gt;/* DCO2 + */&lt;/span&gt; &lt;span class="n"&gt;DCO1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;DCO0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
  &lt;span class="n"&gt;BCSCTL1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;XT2OFF&lt;/span&gt; &lt;span class="cm"&gt;/* + RSEL1 + RSEL0 + RSEL2 */&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// Shared between L/R tasks 8*RGB LEDS &lt;/span&gt;
  &lt;span class="n"&gt;P4OUT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;P5OUT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;P6OUT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;P4DIR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;P5DIR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;P6DIR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mh"&gt;0xFF&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// 2 RGB LEDS (pins 2..7)&lt;/span&gt;
  &lt;span class="n"&gt;P3OUT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;P3DIR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mh"&gt;0xFF&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// create tasks&lt;/span&gt;
  &lt;span class="c1"&gt;// Passing a uxPriority value above (configMAX_PRIORITIES ‚Äì 1) &lt;/span&gt;
  &lt;span class="c1"&gt;// will result in the priority assigned to the task&lt;/span&gt;
  &lt;span class="c1"&gt;// being capped silently to the maximum legitimate value.&lt;/span&gt;

  &lt;span class="cm"&gt;/* Task: left side LEDS animation */&lt;/span&gt;
  &lt;span class="n"&gt;xTaskCreate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vTaskLedsL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
          &lt;span class="s"&gt;&amp;quot;LedsL&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
          &lt;span class="n"&gt;configMINIMAL_STACK_SIZE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
          &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
          &lt;span class="n"&gt;main_TASK_PRIORITY_LEDS_L&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
          &lt;span class="nb"&gt;NULL&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="cm"&gt;/* Task: right side LEDS animation */&lt;/span&gt;
  &lt;span class="n"&gt;xTaskCreate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vTaskLedsR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
          &lt;span class="s"&gt;&amp;quot;LedsR&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
          &lt;span class="n"&gt;configMINIMAL_STACK_SIZE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
          &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
          &lt;span class="n"&gt;main_TASK_PRIORITY_LEDS_R&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
          &lt;span class="nb"&gt;NULL&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="cm"&gt;/* Start the scheduler. */&lt;/span&gt;
  &lt;span class="n"&gt;vTaskStartScheduler&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="cm"&gt;/* As the scheduler has been started the demo applications tasks will be&lt;/span&gt;
&lt;span class="cm"&gt;  executing and we should never get here! */&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–í—Å–µ –∑–∞–¥–∞—á–∏ –º–æ–≥—É—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –æ–¥–Ω–æ–º –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Running (–∑–∞–ø—É—â–µ–Ω–∞) ‚Äî –∑–∞–¥–∞—á–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä –∑–∞–Ω—è—Ç –µ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ready (–≥–æ—Ç–æ–≤–∞) ‚Äî –≥–æ—Ç–æ–≤–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é, –Ω–æ –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä –∑–∞–Ω—è—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º –¥—Ä—É–≥–æ–π –∑–∞–¥–∞—á–∏. –ü–æ –æ–∫–æ–Ω—á–∞–Ω–∏–∏ —Ç–µ–∫—É—â–µ–≥–æ –∫–≤–∞–Ω—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏ –∏–∑ –≤—Å–µ—Ö –≥–æ—Ç–æ–≤—ã—Ö –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é –∑–∞–¥–∞—á –±—É–¥–µ—Ç –∑–∞–ø—É—â–µ–Ω–∞ (–ø–µ—Ä–µ–π–¥—ë—Ç –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è) –∑–∞–¥–∞—á–∞ —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º. –ï—Å–ª–∏ –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é –≥–æ—Ç–æ–≤—ã –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–¥–∞—á —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º, —Ç–æ –±–∏—à—å –∫–∞–∫ –≤ –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ —Å &lt;code&gt;vTaskLedsL&lt;/code&gt; –∏ &lt;code&gt;vTaskLedsR&lt;/code&gt;, —Ç–æ –æ–Ω–∏ –ø–æ –æ—á–µ—Ä–µ–¥–∏ –ø–µ—Ä–µ—Ö–æ–¥—è—Ç –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ –ø—Ä–µ–±—ã–≤–∞—é—Ç –≤ –Ω–µ–º –≤ —Ç–µ—á–µ–Ω–∏–µ –æ–¥–Ω–æ–≥–æ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –∫–≤–∞–Ω—Ç–∞&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Blocked (–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞) ‚Äî –∑–∞–¥–∞—á–∞ –æ–∂–∏–¥–∞–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∏–ª–∏ –≤–Ω–µ—à–Ω–µ–≥–æ —Å–æ–±—ã—Ç–∏—è. –ù–∞–ø—Ä–∏–º–µ—Ä,
–≤—ã–∑–≤–∞–≤ API-—Ñ—É–Ω–∫—Ü–∏—é &lt;code&gt;vTaskDelay(42)&lt;/code&gt;, –∑–∞–¥–∞—á–∞ –ø–µ—Ä–µ–≤–µ–¥–µ—Ç —Å–µ–±—è –≤ –±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –Ω–µ –ø—Ä–æ–π–¥–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø–µ—Ä–∏–æ–¥ –∑–∞–¥–µ—Ä–∂–∫–∏ 42. –ë–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∑–∞–¥–∞—á–∞ –Ω–µ —Ä–∞—Å—Ö–æ–¥—É–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏, —ç—Ç–æ –≤—Ä–µ–º—è –º–æ–∂–Ω–æ —Å –ø–æ–ª—å–∑–æ–π –¥–ª—è –¥–µ–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –º–µ–Ω–µ–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã—Ö –∑–∞–¥–∞—á–∞—Ö&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Suspended (–ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞) ‚Äî —Ç–∞–∫–∏–µ –∑–∞–¥–∞—á–∏ —Ç–∞–∫–∂–µ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏, –æ–¥–Ω–∞–∫–æ –≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è, –ø–µ—Ä–µ—Ö–æ–¥ –≤ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –≤—ã—Ö–æ–¥ –∏–∑ –Ω–µ–≥–æ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –≤ —è–≤–Ω–æ–º –≤–∏–¥–µ –≤—ã–∑–æ–≤–æ–º API-—Ñ—É–Ω–∫—Ü–∏–π &lt;code&gt;vTaskSuspend()&lt;/code&gt; –∏ &lt;code&gt;xTaskResume()&lt;/code&gt;. –ó–∞–¥–∞—á–∞ –º–æ–∂–µ—Ç –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–π —Å–∫–æ–ª—å —É–≥–æ–¥–Ω–æ –¥–æ–ª–≥–æ&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;–í –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω–æ–º –ø—Ä–∏–º–µ—Ä–µ –∑–∞–¥–∞—á–∏ &lt;code&gt;vTaskLedsL&lt;/code&gt; –∏ &lt;code&gt;vTaskLedsR&lt;/code&gt; –≤—ã–ø–æ–ª–Ω—è—é—Ç –ø–æ–ª–µ–∑–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ (–≤ –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ ‚Äî –º–∏–≥–∞—é—Ç), –ø–æ—Å–ª–µ —á–µ–≥–æ –æ–∂–∏–¥–∞—é—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –≤—Ä–µ–º–µ–Ω–∏. –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏ –≤ –≤–∏–¥–µ –ø—É—Å—Ç–æ–≥–æ —Ü–∏–∫–ª–∞ &lt;code&gt;for(volatile uint16_t i = 42; i--;);&lt;/code&gt; –∫—Ä–∞–π–Ω–µ –Ω–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–∞ ‚Äî –æ–Ω–∞ –∫–∞–∫ –±—ã —Å–ª–∏—à–∫–æ–º ¬´–∂–∞–¥–Ω–∞—è¬ª. –ß—Ç–æ –±—É–¥–µ—Ç, –µ—Å–ª–∏ —Ç–∞–∫–∏–º –∑–∞–¥–∞—á–∞–º –Ω–∞–∑–Ω–∞—á–∏—Ç—å —Ä–∞–∑–Ω—ã–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç ? –í—ã—Å–æ–∫–æ–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –∑–∞–¥–∞—á–∞ –≤—Å–µ –≤—Ä–µ–º—è –æ—Å—Ç–∞–µ—Ç—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é (–Ω–µ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –Ω–∏ –≤ –±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ, –Ω–∏ –≤ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ), –æ–Ω–∞ –ø–æ–≥–ª–æ—â–∞–µ—Ç –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–Ω–æ–µ –≤—Ä–µ–º—è, –≤—Å–ª–µ–¥—Å—Ç–≤–∏–µ —á–µ–≥–æ –Ω–∏–∑–∫–æ–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ –∑–∞–¥–∞—á–∏ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è. –î–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–∞–¥–µ—Ä–∂–µ–∫ —Å—Ä–µ–¥—Å—Ç–≤–∞–º–∏ FreeRTOS –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–∞ API-—Ñ—É–Ω–∫—Ü–∏—è &lt;code&gt;vTaskDelay()&lt;/code&gt;, –∫–æ—Ç–æ—Ä–∞—è –ø–µ—Ä–µ–≤–æ–¥–∏—Ç –∑–∞–¥–∞—á—É, –≤—ã–∑—ã–≤–∞—é—â—É—é —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é, –≤ –±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ —Ç—Ä–µ–±—É–µ–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–≤–∞–Ω—Ç–æ–≤ –≤—Ä–µ–º–µ–Ω–∏. –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤ —Ñ–∞–π–ª–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ &lt;em&gt;FreeRTOSConfig.h&lt;/em&gt; –¥–æ–±–∞–≤–∏—Ç—å –º–∞–∫—Ä–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ &lt;code&gt;#define INCLUDE_vTaskDelay 1&lt;/code&gt;, –∞ –µ—Å–ª–∏ –∑–∞–±—ã—Ç—å —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å, —Ç–æ –ø—Ä–æ–µ–∫—Ç –ø–æ–ø—Ä–æ—Å—Ç—É –Ω–µ —Å–æ–±–µ—Ä—ë—Ç—Å—è:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;task_r_leds.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;FreeRTOS.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;task.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;task_r_leds.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;vTaskLedsR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pvParameters&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;;;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="n"&gt;P3OUT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;P3OUT&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt; &lt;span class="mh"&gt;0xFF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;b11&lt;/span&gt; &lt;span class="cm"&gt;/* don&amp;#39;t toggle LCD pins 0b11 */&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="n"&gt;vTaskDelay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt; &lt;span class="cm"&gt;/* ticks */&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

   &lt;span class="n"&gt;vTaskDelete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;task_l_leds.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;FreeRTOS.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;task.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;task_l_leds.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;rotate_rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;volatile&lt;/span&gt; &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;b10000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;vTaskDelay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="cm"&gt;/* ticks */&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;vTaskLedsL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pvParameters&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;;;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="n"&gt;vTaskDelay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;42&lt;/span&gt; &lt;span class="cm"&gt;/* ticks */&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
     &lt;span class="n"&gt;rotate_rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;P4OUT&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
     &lt;span class="n"&gt;rotate_rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;P5OUT&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
     &lt;span class="n"&gt;rotate_rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;P6OUT&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

   &lt;span class="n"&gt;vTaskDelete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–û–∫, –∞ –ø–æ—á–µ–º—É –≤ —Ñ–∞–π–ª–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ &lt;em&gt;FreeRTOSConfig.h&lt;/em&gt; –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –º–∞–∫—Ä–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ &lt;code&gt;#define INCLUDE_vTaskDelete 1&lt;/code&gt;, –∞ –ø—Ä–æ–µ–∫—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç –∫–æ–º–ø–∏–ª—è—Ü–∏—é –±–µ–∑ –æ—à–∏–±–æ–∫ ? –¢—É—Ç –≤—Å—ë –¥–µ–ª–æ –≤ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä–∞ ‚Äî –ø–µ—Ä–µ–¥ –≤—ã–∑–æ–≤–æ–º &lt;code&gt;vTaskDelete&lt;/code&gt; –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä –≤–∏–¥–∏—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª –∏ –ø—Ä–æ—Å—Ç–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç –≤–µ—Å—å –∫–æ–¥ –ø–æ—Å–ª–µ –Ω–µ–≥–æ, —á—Ç–æ –≤ –ø—Ä–∏–Ω—Ü–∏–ø–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ù–æ —Å—Ç–æ–∏—Ç –Ω–∞–ø—Ä–∏–º–µ—Ä –ø–æ –æ—à–∏–±–∫–µ –≤—ã–π—Ç–∏ –∏–∑ —Ü–∏–∫–ª–∞ &lt;code&gt;break&lt;/code&gt; –∏ –±—É–¥–µ—Ç –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ.&lt;/p&gt;
&lt;p&gt;P.S. –í –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –∏–º–µ–Ω–∞ –ø–æ–¥–∫–ª—é—á–∞–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤ FreeRTOS –±–µ—Ä—É—Ç—Å—è –≤ –∫–∞–≤—ã—á–∫–∏ –Ω–∞–ø—Ä–∏–º–µ—Ä &lt;code&gt;#include "FreeRTOS.h"&lt;/code&gt;, –≤ —Ç–µ–∫—É—â–∏—Ö –ø—Ä–∏–º–µ—Ä–∞—Ö –µ—Å—Ç—å –Ω–µ–±–æ–ª—å—à–æ–µ –æ—Ç–ª–∏—á–∏–µ &lt;code&gt;#include &amp;lt;FreeRTOS.h&amp;gt;&lt;/code&gt;. –≠—Ç–æ –ª–µ–≥–∫–æ –ø—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏ –ø–æ–º–µ–Ω—è—Ç—å:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;~$ ls -1 *.h *.c &lt;span class="p"&gt;|&lt;/span&gt; xargs -n1 sed -i                          &lt;span class="se"&gt;\&lt;/span&gt;
      -e &lt;span class="s1"&gt;&amp;#39;s/#include\s\+&amp;lt;FreeRTOS.h&amp;gt;/#include &amp;quot;FreeRTOS.h&amp;quot;/&amp;#39;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
      -e &lt;span class="s1"&gt;&amp;#39;s/#include\s\+&amp;lt;task.h&amp;gt;/#include &amp;quot;task.h&amp;quot;/&amp;#39;&lt;/span&gt;         &lt;span class="se"&gt;\&lt;/span&gt;
      -e &lt;span class="s1"&gt;&amp;#39;s/#include\s\+&amp;lt;semphr.h&amp;gt;/#include &amp;quot;semphr.h&amp;quot;/&amp;#39;&lt;/span&gt;     &lt;span class="se"&gt;\&lt;/span&gt;
      -e &lt;span class="s1"&gt;&amp;#39;s/#include\s\+&amp;lt;queue.h&amp;gt;/#include &amp;quot;queue.h&amp;quot;/&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ù–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏–º–µ—Ä–æ–≤ —ç—Ç–æ –Ω–∏–∫–∞–∫ –Ω–µ –≤–ª–∏—è–µ—Ç ‚Äî –±–∏–Ω–∞—Ä–Ω–∏–∫ –Ω–∞ –≤—ã—Ö–æ–¥–µ &lt;em&gt;a.out&lt;/em&gt; –±—É–¥–µ—Ç –æ–¥–∏–Ω–∞–∫–æ–≤ –≤ –æ–±–æ–∏—Ö —Å–ª—É—á–∞—è—Ö.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mazko.github.io/blog/posts/2017/04/27/freertos-diagnostika-oshibok-i-khuki/"&gt;–î–∞–ª–µ–µ&lt;/a&gt; —Ö—É–∫–∏.&lt;/p&gt;</content><category term="msp430"></category><category term="RTOS"></category></entry><entry><title>–ú–æ–Ω–æ—Ö—Ä–æ–º–Ω—ã–π OLED –¥–∏—Å–ø–ª–µ–π –Ω–∞ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–µ SSD1306</title><link href="https://mazko.github.io/blog/posts/2017/04/25/monokhromnyi-oled-displei-na-kontrollere-ssd1306/" rel="alternate"></link><published>2017-04-25T00:00:00+03:00</published><updated>2017-04-25T00:00:00+03:00</updated><author><name>Oleg Mazko</name></author><id>tag:mazko.github.io,2017-04-25:/blog/posts/2017/04/25/monokhromnyi-oled-displei-na-kontrollere-ssd1306/</id><summary type="html">&lt;p&gt;–î–∞–Ω–Ω—ã–π –¥–≤—É—Ö—Ü–≤–µ—Ç–Ω—ã–π (—á—ë—Ä–Ω–æ-–±–µ–ª—ã–π) —ç–∫—Ä–∞–Ω—á–∏–∫ –∏–º–µ–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ 128—Ö64 –ø–∏–∫—Å–µ–ª–∞ –∏ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä SSD1306 —Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –ª–∏–±–æ –ø–æ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–º—É 8-–±–∏—Ç–Ω–æ–º—É –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É 6800/8080 –ª–∏–±–æ –ø–æ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–º—É I2C/SPI. –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤ —Ü–µ–ª–æ–º –ø–æ—Ö–æ–∂ –Ω–∞ &lt;a href="https://mazko.github.io/blog/posts/2017/01/27/picsimjs-simvolnyi-displei-na-baze-hd44780/"&gt;HD44780&lt;/a&gt; - –¥–ª—è –æ–¥–Ω–æ—Å—Ç–æ—Ä–æ–Ω–Ω–µ–≥–æ –æ–±–º–µ–Ω–∞ –¥–∞–Ω–Ω—ã–º–∏ (–∑–∞–ø–∏—Å–∏) –≤—ã—Å—Ç–∞–≤–ª—è—é—Ç—Å—è –¥–∞–Ω–Ω—ã–µ 8 –±–∏—Ç, –µ—â—ë –æ–¥–∏–Ω –±–∏—Ç —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É/–¥–∞–Ω–Ω—ã–µ, –∏ –æ–¥–∏–Ω ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;–î–∞–Ω–Ω—ã–π –¥–≤—É—Ö—Ü–≤–µ—Ç–Ω—ã–π (—á—ë—Ä–Ω–æ-–±–µ–ª—ã–π) —ç–∫—Ä–∞–Ω—á–∏–∫ –∏–º–µ–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ 128—Ö64 –ø–∏–∫—Å–µ–ª–∞ –∏ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä SSD1306 —Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –ª–∏–±–æ –ø–æ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–º—É 8-–±–∏—Ç–Ω–æ–º—É –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É 6800/8080 –ª–∏–±–æ –ø–æ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–º—É I2C/SPI. –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤ —Ü–µ–ª–æ–º –ø–æ—Ö–æ–∂ –Ω–∞ &lt;a href="https://mazko.github.io/blog/posts/2017/01/27/picsimjs-simvolnyi-displei-na-baze-hd44780/"&gt;HD44780&lt;/a&gt; - –¥–ª—è –æ–¥–Ω–æ—Å—Ç–æ—Ä–æ–Ω–Ω–µ–≥–æ –æ–±–º–µ–Ω–∞ –¥–∞–Ω–Ω—ã–º–∏ (–∑–∞–ø–∏—Å–∏) –≤—ã—Å—Ç–∞–≤–ª—è—é—Ç—Å—è –¥–∞–Ω–Ω—ã–µ 8 –±–∏—Ç, –µ—â—ë –æ–¥–∏–Ω –±–∏—Ç —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É/–¥–∞–Ω–Ω—ã–µ, –∏ –æ–¥–∏–Ω –±–∏—Ç –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —ç—Ç–æ–π –ø–∞—Ä–æ—á–∫–∏ –∏—Ç–æ–≥–æ –º–∏–Ω–∏–º—É–º 10 –Ω–æ–≥ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞. –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –ø–æ–∑–≤–æ–ª—è—é—Ç –æ–±–æ–π—Ç–∏—Å—å –º–µ–Ω—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π, –Ω–æ —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç—É–ø–∞—é—Ç –≤ —Å–∫–æ—Ä–æ—Å—Ç–∏ –æ–±–º–µ–Ω–∞ –¥–∞–Ω–Ω—ã–º–∏. –£ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ msp430f1611 –ø—Ä–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤—ã–≤–æ–¥–æ–≤ –∏ –≤ –¥–∞–Ω–Ω–æ–º –æ–±—É—á–∞—é—â–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª–µ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç—Å—è –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –ø–µ—Ä–∏—Ñ–µ—Ä–∏—é I2C/SPI, —á—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á–∏—Ç—å—Å—è –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –Ω–∞ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—è—Ö SSD1306. –ü—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±—É–¥–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å —Ç–æ–ª—å–∫–æ –¥–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏ - &lt;code&gt;ssd1306_write_data&lt;/code&gt; –∏ &lt;code&gt;ssd1306_write_instruction&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://mazko.github.io/MSP430.js/4a1dee2b02e6d149594b10d03b7925c8"&gt;MSP430.js&lt;/a&gt; | &lt;a href="https://mazko.github.io/blog/posts/2017/04/25/monokhromnyi-oled-displei-na-kontrollere-ssd1306/img.zip"&gt;–∏—Å—Ö–æ–¥–Ω–∏–∫–∏&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2017/04/25/monokhromnyi-oled-displei-na-kontrollere-ssd1306/ui.gif" style="width:55%; margin: 0 auto; display:block;"&gt;&lt;/p&gt;
&lt;p&gt;–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ SSD1306 –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç—Å—è –¥–≤—É–º—è —Ñ—É–Ω–∫—Ü–∏—è–º–∏ - –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –∏ –∑–∞–ø–∏—Å—å –∫–æ–º–∞–Ω–¥. –ö–∞—Ä—Ç–∞ –ø–∞–º—è—Ç–∏ GDDRAM –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω–∞ 8-—é —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏ –ø–æ 128 –±–∞–π—Ç. –°–∏—Å—Ç–µ–º–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –∏–º–µ–µ—Ç –Ω–∞—á–∞–ª–æ –≤ –ª–µ–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É. –î–ª—è –∑–∞–ø–∏—Å–∏ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–≥–æ –±–∞–π—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–º—É –∞–¥—Ä–µ—Å—É –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è &lt;code&gt;ssd1306_write_byte&lt;/code&gt;. –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –ø–∞–º—è—Ç–∏ SSD1306 –Ω–µ –¥–∞—ë—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–¥–∞–≤–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω—É—é —Ç–æ—á–∫—É –Ω–∞ –¥–∏—Å–ø–ª–µ–µ, —Ç–æ–ª—å–∫–æ –±–∞–π—Ç. –ï—Å–ª–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–æ—Ä–∏—Å–æ–≤—ã–≤–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–µ –ø–∏–∫—Å–µ–ª–∏ –≤–º–µ—Å—Ç–æ –±–∞–π—Ç –Ω—É–∂–Ω–æ –¥–µ—Ä–∂–∞—Ç—å –≤—Å–µ –ø–∏–∫—Å–µ–ª–∏ –≤ –ø–∞–º—è—Ç–∏ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ (–±—É—Ñ–µ—Ä 128x8) –∏ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ —Å–∫–∏–¥—ã–≤–∞—Ç—å –∏—Ö –Ω–∞ –¥–∏—Å–ø–ª–µ–π –ø–æ–±–∞–π—Ç–æ–≤–æ. –ü—Ä–∏ –∑–∞–ø–∏—Å–∏ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –±–∞–π—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–∞–¥–∞—Ç—å –Ω–∞—á–∞–ª—å–Ω—ã–π –∞–¥—Ä–µ—Å —Ç.–∫. –∫–∞–∂–¥–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ GDDRAM –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º—É –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç—É –∞–¥—Ä–µ—Å–∞ —Å—Ç–æ–ª–±—Ü–∞, –ø–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ –∫–æ–Ω–µ—á–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è (128) —Å—á—ë—Ç—á–∏–∫ –∞–¥—Ä–µ—Å–∞ —Å—Ç–æ–ª–±—Ü–∞ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è –≤ –Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (0), –∞ —Å—á—ë—Ç—á–∏–∫ –∞–¥—Ä–µ—Å–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ –µ–¥–∏–Ω–∏—Ü—É. –ü–æ—Å–ª–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å—á—ë—Ç—á–∏–∫–æ–º –∞–¥—Ä–µ—Å–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–æ–Ω–µ—á–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è (8) –æ–±–∞ —Å—á—ë—Ç—á–∏–∫–∞ —Å–±—Ä–æ—Å—è—Ç—Å—è –≤ –Ω–∞—á–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–π–¥—ë—Ç –ø–æ –≤—Ç–æ—Ä–æ–º—É –∫—Ä—É–≥—É.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;ssd1306.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// Address setting commands&lt;/span&gt;
&lt;span class="cp"&gt;#define SSD1306_SET_COL_LO_NIBBLE    0x00&lt;/span&gt;
&lt;span class="cp"&gt;#define SSD1306_SET_COL_HI_NIBBLE    0x10&lt;/span&gt;
&lt;span class="cp"&gt;#define SSD1306_SET_PAGE_START_ADDR  0xB0&lt;/span&gt;

&lt;span class="c1"&gt;// pins&lt;/span&gt;
&lt;span class="cp"&gt;#define SSD1306_DATA_INST            0&lt;/span&gt;
&lt;span class="cp"&gt;#define SSD1306_DATA_E               1&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;strobe&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;P3OUT&lt;/span&gt; &lt;span class="o"&gt;|=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;SSD1306_DATA_E&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;P3OUT&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;=&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;SSD1306_DATA_E&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt;
&lt;span class="nf"&gt;ssd1306_write_data&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="n"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;P2OUT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;P3OUT&lt;/span&gt; &lt;span class="o"&gt;|=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;SSD1306_DATA_INST&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;strobe&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt;
&lt;span class="nf"&gt;ssd1306_write_instruction&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="n"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;P2OUT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;P3OUT&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;=&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;SSD1306_DATA_INST&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;strobe&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt;
&lt;span class="nf"&gt;ssd1306_write_byte&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="n"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;ssd1306_write_instruction&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SSD1306_SET_PAGE_START_ADDR&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;ssd1306_write_instruction&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SSD1306_SET_COL_LO_NIBBLE&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0xF&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="n"&gt;ssd1306_write_instruction&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SSD1306_SET_COL_HI_NIBBLE&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="n"&gt;ssd1306_write_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–õ—é–±–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞ –∏–ª–∏ —Ç–µ–∫—Å—Ç —ç—Ç–æ –≤—Å–µ–≥–æ-–ª–∏—à—å –Ω–∞–±–æ—Ä –ø–∏–∫—Å–µ–ª–µ–π. –í —Å–ª—É—á–∞–µ SSD1306 —Ü–≤–µ—Ç–∞ –≤—Å–µ–≥–æ –¥–≤–∞ –æ–¥–∏–Ω –∏–∑ –Ω–∏—Ö —á—ë—Ä–Ω—ã–π. –î–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –ª—é–±–æ–≥–æ —Ñ–∞–π–ª–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –°–∏ –º–∞—Å—Å–∏–≤ –ø–æ—Å–ª—É–∂–∏—Ç —Å–ª–µ–¥—É—é—â–∏–π —Å–∫—Ä–∏–ø—Ç –Ω–∞ –ø–∏—Ç–æ–Ω–µ + ImageMagick:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# http://grep.js.org/?gist=96caa480d220062b18a693f1b2e9f275&lt;/span&gt;
~$ &lt;span class="nb"&gt;alias&lt;/span&gt; &lt;span class="nv"&gt;c128x64&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;convert -resize 128x64!&amp;#39;&lt;/span&gt;
~$ c128x64 eyes.eps xbm:- &lt;span class="p"&gt;|&lt;/span&gt; grep -o &lt;span class="s1"&gt;&amp;#39;0[xX][0-9a-fA-F]\+&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; python3 -c &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;

&lt;span class="s1"&gt;import sys&lt;/span&gt;

&lt;span class="s1"&gt;# parse stdin image&lt;/span&gt;
&lt;span class="s1"&gt;xbm = [int(line, 16) for line in sys.stdin]&lt;/span&gt;

&lt;span class="s1"&gt;# convert&lt;/span&gt;
&lt;span class="s1"&gt;out = [[0]*128 for i in range(8)]&lt;/span&gt;
&lt;span class="s1"&gt;for y in range(64):&lt;/span&gt;
&lt;span class="s1"&gt;  for x in range(128):&lt;/span&gt;
&lt;span class="s1"&gt;    if x &amp;amp; 7:&lt;/span&gt;
&lt;span class="s1"&gt;      byte &amp;gt;&amp;gt;= 1&lt;/span&gt;
&lt;span class="s1"&gt;    else:&lt;/span&gt;
&lt;span class="s1"&gt;      # 128 / 8 = 16 bytes in one xbm row&lt;/span&gt;
&lt;span class="s1"&gt;      byte = xbm[y * 16 + x // 8]&lt;/span&gt;
&lt;span class="s1"&gt;    if not byte &amp;amp; 1:&lt;/span&gt;
&lt;span class="s1"&gt;      out[y // 8][x] |= (1 &amp;lt;&amp;lt; y % 8)&lt;/span&gt;

&lt;span class="s1"&gt;# print array&lt;/span&gt;
&lt;span class="s1"&gt;for p in out:&lt;/span&gt;
&lt;span class="s1"&gt;  print(&amp;quot;{&amp;quot; + &amp;quot;,&amp;quot;.join(hex(x) for x in p) + &amp;quot;},&amp;quot;)&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–î–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ —Ç–æ–∂–µ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –Ω–∞–±–æ—Ä –≥–æ—Ç–æ–≤—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–∏–º–≤–æ–ª–∞. –ù–∞–∏–±–æ–ª–µ–µ –ø—Ä–æ—Å—Ç–æ–π —Å–ª—É—á–∞–π - –º–æ–Ω–æ—à–∏—Ä–∏–Ω–Ω—ã–π —à—Ä–∏—Ñ—Ç –≤—Å–µ –∑–Ω–∞–∫–∏ (–ø–ª–æ—â–∞–¥–∫–∏ –∑–Ω–∞–∫–æ–≤) –∫–æ—Ç–æ—Ä–æ–≥–æ –∏–º–µ—é—Ç –æ–¥–∏–Ω–∞–∫–æ–≤—É—é —à–∏—Ä–∏–Ω—É. –ù–∞–ø—Ä–∏–º–µ—Ä &lt;a href="https://github.com/adafruit/Adafruit-GFX-Library/blob/master/glcdfont.c" rel="nofollow"&gt;—à—Ä–∏—Ñ—Ç&lt;/a&gt; –¥–ª—è ASCII —Å–∏–º–≤–æ–ª–æ–≤ 5x7.&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2017/04/25/monokhromnyi-oled-displei-na-kontrollere-ssd1306/font.png" style="width:55%; margin: 0 auto; display:block;"&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://mazko.github.io/MSP430.js/56a600e7efa1f648c5305d652d14be6a"&gt;MSP430.js&lt;/a&gt; | &lt;a href="https://mazko.github.io/blog/posts/2017/04/25/monokhromnyi-oled-displei-na-kontrollere-ssd1306/font.zip"&gt;–∏—Å—Ö–æ–¥–Ω–∏–∫–∏&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cm"&gt;/*&lt;/span&gt;

&lt;span class="cm"&gt;reset &amp;amp;&amp;amp; (export GCC_DIR=~/ti/msp430_gcc ; &lt;/span&gt;
&lt;span class="cm"&gt;    $GCC_DIR/bin/msp430-elf-gcc \&lt;/span&gt;
&lt;span class="cm"&gt;    -I $GCC_DIR/include -L $GCC_DIR/include \&lt;/span&gt;
&lt;span class="cm"&gt;    -Werror -Wall -mmcu=msp430f1611 -O2 test.c ssd1306.c)&lt;/span&gt;

&lt;span class="cm"&gt;*/&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;msp430.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdint.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;ssd1306.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;font.c&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#define STATIC_ASSERT(cond) typedef int foo[(cond) ? 1 : -1]&lt;/span&gt;
&lt;span class="n"&gt;STATIC_ASSERT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;256&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="cm"&gt;/* uint8_t values 0..255 == 256 */&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="cp"&gt;#undef STATIC_ASSERT&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;drawchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;ssd1306_write_byte&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;drawstr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;drawchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;     &lt;span class="c1"&gt;// 6 pixels wide&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="n"&gt;SSD1306_X_PIXELS&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;    &lt;span class="c1"&gt;// ran out of this page&lt;/span&gt;
      &lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;page&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="n"&gt;SSD1306_PIXEL_PAGES&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;    &lt;span class="c1"&gt;// ran out of space :(&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;WDTCTL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;WDTPW&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;WDTHOLD&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;     &lt;span class="c1"&gt;// Stop watchdog timer&lt;/span&gt;

    &lt;span class="c1"&gt;// DCO = 3, RSEL = 0, f = 0.13 MHz&lt;/span&gt;
    &lt;span class="n"&gt;DCOCTL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="cm"&gt;/* DCO2 + */&lt;/span&gt; &lt;span class="n"&gt;DCO1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;DCO0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="n"&gt;BCSCTL1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;XT2OFF&lt;/span&gt; &lt;span class="cm"&gt;/* + RSEL1 + RSEL0 + RSEL2 */&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;P2OUT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;P3OUT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;P2DIR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;P3DIR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mh"&gt;0xFF&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;ssd1306_init_display&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(;;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;drawstr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;!&lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;#$%&amp;amp;&amp;#39;()*+,-./0123456789:;&amp;lt;=&amp;gt;?@&amp;quot;&lt;/span&gt;
                    &lt;span class="s"&gt;&amp;quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ[&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;]^_`&amp;quot;&lt;/span&gt;
                    &lt;span class="s"&gt;&amp;quot;abcdefghijklmnopqrstuvwxyz{|}~&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ó–¥–µ—Å—å &lt;code&gt;STATIC_ASSERT&lt;/code&gt; —ç—Ç–æ &lt;a href="https://mazko.github.io/blog/posts/2012/10/08/idiomy-v-ansi-c/"&gt;–∏–¥–∏–æ–º–∞&lt;/a&gt; –°–∏, –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —ç—Ç–∞–ø–µ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ –±—É–¥–µ—Ç –ø–æ–ª–µ–∑–Ω–∞ –≤ —Å–ª—É—á–∞–µ —Å–º–µ–Ω—ã —à—Ä–∏—Ñ—Ç–∞ - –Ω–∞ —Ç—É –∂–µ –∫–∏—Ä–∏–ª–ª–∏—Ü—É –Ω–∞–ø—Ä–∏–º–µ—Ä. –¢–µ–∫—É—â–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω–µ—á–Ω–æ –ø—Ä–æ—Å—Ç–µ–π—à–∞—è, —Å–º–µ—â–µ–Ω–∏–µ –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏ –∑–∞–¥–∞—ë—Ç—Å—è –≤ –ø–∏–∫—Å–µ–ª—è—Ö, –Ω–æ –Ω–∞–∫–ª–∞–¥—ã–≤–∞–µ—Ç—Å—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ —Å–º–µ—â–µ–Ω–∏–µ –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏ - –º–∞–∫—Å–∏–º—É–º 8 —Å—Ç—Ä–æ–∫. –í –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö –º–æ–∂–Ω–æ –∑–∞–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å –∫–∞–∫—É—é-–Ω–∏–±—É–¥—å –≥–æ—Ç–æ–≤—É—é –≥—Ä–∞—Ñ–∏—á–µ—Å–∫—É—é –±–∏–±–ª–∏–æ—Ç–µ–∫—É –¥–ª—è –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –¥–∏—Å–ø–ª–µ—è –Ω–∞–ø–æ–¥–æ–±–∏–µ &lt;a href="https://mazko.github.io/blog/posts/2017/05/20/ugfx-biblioteka-gui-dlia-mikrokontrollerov/"&gt;uGFX&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mazko.github.io/blog/posts/2017/04/26/freertos-operatsionnaia-sistema-dlia-mikrokontrollerov/"&gt;–î–∞–ª–µ–µ&lt;/a&gt; –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ FreeRTOS.&lt;/p&gt;</content><category term="msp430"></category><category term="SSD1306"></category></entry><entry><title>–°++ –¥–ª—è –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤ - ¬´–î–µ–∫–æ—Ä–∞—Ç–æ—Ä¬ª</title><link href="https://mazko.github.io/blog/posts/2017/03/22/s-dlia-mikrokontrollerov-dekorator/" rel="alternate"></link><published>2017-03-22T00:00:00+02:00</published><updated>2017-03-22T00:00:00+02:00</updated><author><name>Oleg Mazko</name></author><id>tag:mazko.github.io,2017-03-22:/blog/posts/2017/03/22/s-dlia-mikrokontrollerov-dekorator/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;–ï—Å—Ç—å –¥–≤–∞ —Å–ø–æ—Å–æ–±–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏–∑–∞–π–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã. –û–¥–∏–Ω –∏–∑ –Ω–∏—Ö, —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å –µ–≥–æ –Ω–∞—Å—Ç–æ–ª—å–∫–æ –ø—Ä–æ—Å—Ç—ã–º, —á—Ç–æ –≤ –Ω–µ–º, –æ—á–µ–≤–∏–¥–Ω–æ, –Ω–µ –±—É–¥–µ—Ç –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–æ–≤. –î—Ä—É–≥–æ–π —Å–ø–æ—Å–æ–± ‚Äî —Å–¥–µ–ª–∞—Ç—å –µ–≥–æ –Ω–∞—Å—Ç–æ–ª—å–∫–æ –∑–∞–ø—É—Ç–∞–Ω–Ω—ã–º, —á—Ç–æ –≤ –Ω–µ–º –Ω–µ –±—É–¥–µ—Ç –æ—á–µ–≤–∏–¥–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–æ–≤. ‚Äî C.A. R. Hoare&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;¬´–ü—Ä–∏–µ–º—ã –æ–±—ä–µ–∫—Ç–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è. –ü–∞—Ç—Ç–µ—Ä–Ω—ã –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è¬ª ‚Äî —ç–ø–æ—Ö–∞–ª—å–Ω–∞—è –∫–Ω–∏–≥–∞ 1994 –≥–æ–¥–∞ –æ–± –∏–Ω–∂–µ–Ω–µ—Ä–∏–∏ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;–ï—Å—Ç—å –¥–≤–∞ —Å–ø–æ—Å–æ–±–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏–∑–∞–π–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã. –û–¥–∏–Ω –∏–∑ –Ω–∏—Ö, —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å –µ–≥–æ –Ω–∞—Å—Ç–æ–ª—å–∫–æ –ø—Ä–æ—Å—Ç—ã–º, —á—Ç–æ –≤ –Ω–µ–º, –æ—á–µ–≤–∏–¥–Ω–æ, –Ω–µ –±—É–¥–µ—Ç –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–æ–≤. –î—Ä—É–≥–æ–π —Å–ø–æ—Å–æ–± ‚Äî —Å–¥–µ–ª–∞—Ç—å –µ–≥–æ –Ω–∞—Å—Ç–æ–ª—å–∫–æ –∑–∞–ø—É—Ç–∞–Ω–Ω—ã–º, —á—Ç–æ –≤ –Ω–µ–º –Ω–µ –±—É–¥–µ—Ç –æ—á–µ–≤–∏–¥–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–æ–≤. ‚Äî C.A. R. Hoare&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;¬´–ü—Ä–∏–µ–º—ã –æ–±—ä–µ–∫—Ç–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è. –ü–∞—Ç—Ç–µ—Ä–Ω—ã –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è¬ª ‚Äî —ç–ø–æ—Ö–∞–ª—å–Ω–∞—è –∫–Ω–∏–≥–∞ 1994 –≥–æ–¥–∞ –æ–± –∏–Ω–∂–µ–Ω–µ—Ä–∏–∏ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è, –æ–ø–∏—Å—ã–≤–∞—é—â–∞—è —Ä–µ—à–µ–Ω–∏—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —á–∞—Å—Ç—ã—Ö –ø—Ä–æ–±–ª–µ–º –≤ –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ü–û. –ö–æ–ª–ª–µ–∫—Ç–∏–≤ –∞–≤—Ç–æ—Ä–æ–≤ –≠. –ì–∞–º–º–∞, –†. –•–µ–ª–º, –†. –î–∂–æ–Ω—Å–æ–Ω, –î–∂. –í–ª–∏—Å—Å–∏–¥–µ—Å —Ç–∞–∫–∂–µ –∏–∑–≤–µ—Å—Ç–µ–Ω –∫–∞–∫ ¬´–ë–∞–Ω–¥–∞ —á–µ—Ç—ã—Ä—ë—Ö¬ª, Gang of Four, GoF.&lt;/p&gt;
&lt;p&gt;GoF –¥–∞—ë—Ç —Å–ª–µ–¥—É—é—â–µ–µ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ: –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä (–∞–Ω–≥–ª. Decorator) ‚Äî –ø–∞—Ç—Ç–µ—Ä–Ω, —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É—é—â–∏–π –æ–±—ä–µ–∫—Ç—ã. –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –æ–±—ä–µ–∫—Ç—É –Ω–æ–≤—ã–µ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏. –Ø–≤–ª—è–µ—Ç—Å—è –≥–∏–±–∫–æ–π –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–æ–π –ø–æ—Ä–æ–∂–¥–µ–Ω–∏—é –ø–æ–¥–∫–ª–∞—Å—Å–æ–≤ —Å —Ü–µ–ª—å—é —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏.&lt;/p&gt;
&lt;p&gt;–û–±—ä–µ–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å (–≤ –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ &lt;a href="https://mazko.github.io/blog/posts/2017/03/20/s-18-dlia-mikrokontrollerov-razvedka-boem/"&gt;—Å–ª–æ–π&lt;/a&gt; –¥–ª—è –ª–∞–º–ø–æ—á–µ–∫), –≤—ã–ø–æ–ª–Ω—è–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏. –û–¥–Ω–∞–∫–æ –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è –¥–æ–±–∞–≤–∏—Ç—å –∫ –Ω–µ–º—É –Ω–µ–∫–æ—Ç–æ—Ä—É—é –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å (&lt;a href="https://mazko.github.io/blog/posts/2017/03/20/s-18-dlia-mikrokontrollerov-razvedka-boem/"&gt;–∞–Ω–∏–º–∞—Ü–∏–∏&lt;/a&gt;), –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –¥–æ, –ø–æ—Å–ª–µ –∏–ª–∏ –¥–∞–∂–µ –≤–º–µ—Å—Ç–æ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –æ–±—ä–µ–∫—Ç–∞.&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2017/03/22/s-dlia-mikrokontrollerov-dekorator/ui.gif" style="width:50%; margin: 0 auto; display:block;"&gt;&lt;/p&gt;
&lt;p&gt;–ü–æ—Å–∫–æ–ª—å–∫—É –∞–Ω–∏–º–∞—Ü–∏–∏ –∏ –∏—Ö –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–∞—Ä–∞–Ω–µ–µ –∏–∑–≤–µ—Å—Ç–Ω—ã –Ω–∞ —ç—Ç–∞–ø–µ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏, –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä –ª–µ–≥–∫–æ —Ä–µ–∞–ª–∏–∑—É–µ—Ç—Å—è –Ω–∞ –°++ —à–∞–±–ª–æ–Ω–∞—Ö. –¢–∞–∫–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –±—É–¥–µ—Ç –∑–∞–Ω–∏–º–∞—Ç—å –±–æ–ª—å—à–µ –ø–∞–º—è—Ç–∏ ROM (code bloat), –Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å –¥–æ–ª–∂–Ω–∞ —à—É—Å—Ç—Ä–µ–µ - —Ö–æ—Ç—è –¥–ª—è –º–∏–≥–∞—é—â–∏—Ö –ª–∞–º–ø–æ—á–µ–∫ —ç—Ç–æ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ. –ï—â—ë –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–æ–≤ –¥–∞—ë—Ç —É–¥–æ–±–Ω—É—é –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–µ–ª–∞—Ç—å –ø—Ä–æ—Å—Ç—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ &lt;code&gt;static_assert()&lt;/code&gt; –Ω–∞ —ç—Ç–∞–ø–µ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏. –ù–µ—á—Ç–æ –ø–æ–¥–æ–±–Ω–æ–µ &lt;a href="https://mazko.github.io/blog/posts/2012/10/08/idiomy-v-ansi-c/"&gt;–º–æ–∂–Ω–æ&lt;/a&gt; –∫–æ–Ω–µ—á–Ω–æ –∂–µ —Å–æ–æ—Ä—É–¥–∏—Ç—å –∏ –Ω–∞ –°–∏ —Å –ø–æ–º–æ—â—å—é –º–∞–∫—Ä–æ—Å–æ–≤, –Ω–æ –≤ –°++ &lt;code&gt;static_assert()&lt;/code&gt; —ç—Ç–æ —É–∂–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –∏ –≤–µ—Å—å–º–∞ –ø–æ–ª–µ–∑–Ω—ã–π –º–µ—Ö–∞–Ω–∏–∑–º —Ç–∞–∫ —á—Ç–æ –Ω–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç—Å—è –∑–∞–Ω–æ–≤–æ –∏–∑–æ–±—Ä–µ—Ç–∞—Ç—å –≤–µ–ª–æ—Å–∏–ø–µ–¥.&lt;/p&gt;
&lt;p&gt;–í—Å–µ –∫–ª–∞—Å—Å—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–π —Ä–µ–∞–ª–∏–∑—É—é—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –î–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞ - –º–µ—Ç–æ–¥—ã &lt;code&gt;void draw(RgbStripLayer&amp;amp; layer);&lt;/code&gt; –∏ &lt;code&gt;void set_color(const auto&amp;amp; co)&lt;/code&gt;. –†–∞–±–æ—Ç–∞—è –≤ —Ü–µ–ø–æ—á–∫–µ –∫–∞–∂–¥—ã–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –¥–æ–±–∞–≤–ª—è–µ—Ç (–¥–µ–∫–æ—Ä–∏—Ä—É–µ—Ç) –∫ —Å–ª–æ—é &lt;code&gt;RgbStripLayer&lt;/code&gt; –Ω–æ–≤—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞. –≠—Ç–∏ –∫–ª–∞—Å—Å—ã –≤–∑–∞–∏–º–æ–∑–∞–º–µ–Ω—è–µ–º—ã, –∏—Ö –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –∞–Ω–∏–º–∞—Ü–∏—é. –í –ø—Ä–∏–ª–∞–≥–∞–µ–º—ã—Ö –∏—Å—Ö–æ–¥–Ω–∏–∫–∞—Ö –¥–æ–±–∞–≤–ª–µ–Ω–æ –±–æ–ª—å—à–µ –∞–Ω–∏–º–∞—Ü–∏–π –ø–ª—é—Å –ø—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–æ–π —à–∞–±–ª–æ–Ω–æ–≤ (STL) –≤ –°++ - –∞–ª–≥–æ—Ä–∏—Ç–º &lt;code&gt;std::rotate&lt;/code&gt; –¥–ª—è –º–∞—Å—Å–∏–≤–æ–≤.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mazko.github.io/blog/posts/2017/03/22/s-dlia-mikrokontrollerov-dekorator/a.out"&gt;elf&lt;/a&gt; | &lt;a href="http://mazko.github.io/MSP430.js/3523e01e3e6c96088d0ac6a4c335609b"&gt;MSP430.js&lt;/a&gt; | &lt;a href="https://mazko.github.io/blog/posts/2017/03/22/s-dlia-mikrokontrollerov-dekorator/src.zip"&gt;–∏—Å—Ö–æ–¥–Ω–∏–∫–∏&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;app.cpp&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;animation.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;animation&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;constexpr&lt;/span&gt; &lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;SZ&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;RgbStripLayer&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;STRIP_SZ&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

        &lt;span class="n"&gt;RgbStripLayer&lt;/span&gt; &lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(;;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;EachColor&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;DynFill&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SZ&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Flush&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;Sleep&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;55555&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Nop&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;EachColor&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;FillCW&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;Sleep&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;4444&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Flush&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;EachColor&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;FillCCW&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;Sleep&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;4444&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Flush&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;animation.h&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;rgb.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;animation&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="nl"&gt;Nop&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;NonCopyable&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;RgbStripLayer&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;layer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;A&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Nop&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Flush&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;NonCopyable&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;m_stream&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;RgbStripLayer&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;layer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;layer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flush&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="n"&gt;m_stream&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;layer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="kt"&gt;int32_t&lt;/span&gt; &lt;span class="n"&gt;cycles&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;A&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Sleep&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;NonCopyable&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;m_stream&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;RgbStripLayer&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;layer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;static_assert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cycles&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;__delay_cycles&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cycles&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;m_stream&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;layer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;RgbStripLayer&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;RGB&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;RgbStripLayer&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;RED&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;FillCW&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;NonCopyable&lt;/span&gt; &lt;span class="cm"&gt;/* clockwise */&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;m_stream&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;RgbStripLayer&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;RGB&lt;/span&gt; &lt;span class="n"&gt;m_color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;RgbStripLayer&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;layer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="nl"&gt;m&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;layer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mem&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;m_color&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="n"&gt;m_stream&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;layer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;set_color&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;co&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;m_color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;co&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;RgbStripLayer&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;RGB&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;RgbStripLayer&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;RED&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;FillCCW&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;NonCopyable&lt;/span&gt; &lt;span class="cm"&gt;/* counterclockwise */&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;m_stream&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;RgbStripLayer&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;RGB&lt;/span&gt; &lt;span class="n"&gt;m_color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;RgbStripLayer&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;layer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;// while a pointer is a form of iterator,&lt;/span&gt;
            &lt;span class="c1"&gt;// not all iterators have the same functionality of pointer&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;layer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mem&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rbegin&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;layer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mem&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;crend&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;m_color&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="n"&gt;m_stream&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;layer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;set_color&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;co&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;m_color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;co&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;A&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;EachColor&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;NonCopyable&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;m_stream&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;constexpr&lt;/span&gt; &lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;colors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;RgbStripLayer&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;RED&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="n"&gt;RgbStripLayer&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;GREEN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;RgbStripLayer&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;BLUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   &lt;span class="n"&gt;RgbStripLayer&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;YELLOW&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;RgbStripLayer&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;VIOLET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;RgbStripLayer&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;CYAN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;RgbStripLayer&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;WHITE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  
        &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;RgbStripLayer&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;layer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="nl"&gt;c&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;m_stream&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_color&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="n"&gt;m_stream&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;layer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="kt"&gt;int8_t&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="kt"&gt;int8_t&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;A&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;DynFill&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;NonCopyable&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;m_stream&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;RgbStripLayer&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;RGB&lt;/span&gt; &lt;span class="n"&gt;m_color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;RgbStripLayer&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;RED&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;RgbStripLayer&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;layer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;static_assert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;static_assert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;static_assert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;layer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mem&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;layer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mem&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;m_color&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="n"&gt;m_stream&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;layer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;set_color&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;co&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;m_color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;co&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –∏ –û–û–ü –≤ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞—Ö –∏–º–µ–µ—Ç —Å–≤–æ—é —Å–ø–µ—Ü–∏—Ñ–∏–∫—É, –Ω–∞–∫–ª–∞–¥—ã–≤–∞–µ–º—É—é –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –º–æ–¥–µ–ª—å—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–∞–º—è—Ç—å—é. –ù–µ–≤–∞–∂–Ω–æ –Ω–∞ —á—ë–º –ø–∏—Å–∞—Ç—å ‚Äî –°–∏ –∏–ª–∏ –°++ –¥–ª—è –≤—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã—Ö —Å–∏—Å—Ç–µ–º –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–µ–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–∞–º—è—Ç—å –≤ —Å—Ç–µ–∫–µ —Ç.–∫. –æ–Ω–∞ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä–æ–º. –í —Å–≤–æ—é –æ—á–µ—Ä–µ–¥—å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –≤—ã–¥–µ–ª–µ–Ω–∏–µ –ø–∞–º—è—Ç–∏ –Ω–∞ –∫—É—á–µ &lt;strong&gt;–Ω–µ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä–æ–º&lt;/strong&gt; –∏ –∫–∞–∫ —Å–ª–µ–¥—Å—Ç–≤–∏–µ –µ—ë –Ω–∞–ª–∏—á–∏–µ –≤ –Ω—É–∂–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã –Ω–µ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è. –û–û–ü –∂–µ –±–æ–ª—å—à–µ –ª—é–±–∏—Ç –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –≤—ã–¥–µ–ª–µ–Ω–∏–µ –ø–∞–º—è—Ç–∏ ‚Äî –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã &lt;code&gt;new&lt;/code&gt;, &lt;code&gt;malloc&lt;/code&gt;, —É–º–Ω—ã–µ —É–∫–∞–∑–∞—Ç–µ–ª–∏. –ù–µ —Å—Ç–æ–∏—Ç —ç—Ç–æ–≥–æ –≤—Å–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞—Ö –±–µ–∑ —è—Å–Ω–æ–≥–æ –ø–æ–Ω–∏–º–∞–Ω–∏—è –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–π.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mazko.github.io/blog/posts/2017/06/22/s-dlia-mikrokontrollerov-upravlenie-pamiatiu/"&gt;–î–∞–ª–µ–µ&lt;/a&gt; –∏–≥—Ä–∞ ¬´–ó–º–µ–π–∫–∞¬ª –≥–¥–µ —Ä–∞–±–æ—Ç–∞ —Å –ø–∞–º—è—Ç—å—é –±—É–¥–µ—Ç –æ–ø–∏—Å–∞–Ω–∞ –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ.&lt;/p&gt;</content><category term="msp430"></category><category term="–ü–∞—Ç—Ç–µ—Ä–Ω"></category></entry><entry><title>–°++ (18+) –¥–ª—è –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤ - —Ä–∞–∑–≤–µ–¥–∫–∞ –±–æ–µ–º</title><link href="https://mazko.github.io/blog/posts/2017/03/20/s-18-dlia-mikrokontrollerov-razvedka-boem/" rel="alternate"></link><published>2017-03-20T00:00:00+02:00</published><updated>2017-03-20T00:00:00+02:00</updated><author><name>Oleg Mazko</name></author><id>tag:mazko.github.io,2017-03-20:/blog/posts/2017/03/20/s-18-dlia-mikrokontrollerov-razvedka-boem/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;–ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –°++ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤ –Ω–µ –∑–Ω–∞—é—Ç, —á—Ç–æ –¥–µ–ª–∞–µ—Ç –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –°++ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤. ‚Äî –ê–Ω–¥—Ä–µ–π –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–µ—Å–∫—É&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;–ü—Ä–æ–≥—Ä–∞–º–º—ã –¥–ª—è –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤ –¥–µ-—Ñ–∞–∫—Ç–æ &lt;a href="https://mazko.github.io/blog/posts/2017/01/13/simuliatsiia-mikrokontrollerov-picsimjs/"&gt;–ø–∏—à—É—Ç—Å—è&lt;/a&gt; –ª–∏–±–æ –Ω–∞ –°–∏ –ª–∏–±–æ –Ω–∞ –∞—Å—Å–µ–º–±–ª–µ—Ä–µ. –°–∏ —ç—Ç–æ –ø—Ä–æ—Ü–µ–¥—É—Ä–Ω—ã–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–ª–∞–±–æ–π —Ç–∏–ø–∏–∑–∞—Ü–∏–µ–π, –æ–±–ª–∞–¥–∞—é—â–∏–π –ø—Ä–æ—Å—Ç—ã–º –∏ –ø–æ–Ω—è—Ç–Ω—ã–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–æ–º, –≤—ã—Å–æ–∫–æ–π –ø–µ—Ä–µ–Ω–æ—Å–∏–º–æ—Å—Ç—å—é (–≤ —Å—Ä–∞–≤–Ω–µ–Ω–∏–∏ —Å –∞—Å—Å–µ–º–±–ª–µ—Ä–æ–º), –æ–Ω —Ö–æ—Ä–æ—à–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –∏ ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;–ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –°++ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤ –Ω–µ –∑–Ω–∞—é—Ç, —á—Ç–æ –¥–µ–ª–∞–µ—Ç –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –°++ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤. ‚Äî –ê–Ω–¥—Ä–µ–π –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–µ—Å–∫—É&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;–ü—Ä–æ–≥—Ä–∞–º–º—ã –¥–ª—è –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤ –¥–µ-—Ñ–∞–∫—Ç–æ &lt;a href="https://mazko.github.io/blog/posts/2017/01/13/simuliatsiia-mikrokontrollerov-picsimjs/"&gt;–ø–∏—à—É—Ç—Å—è&lt;/a&gt; –ª–∏–±–æ –Ω–∞ –°–∏ –ª–∏–±–æ –Ω–∞ –∞—Å—Å–µ–º–±–ª–µ—Ä–µ. –°–∏ —ç—Ç–æ –ø—Ä–æ—Ü–µ–¥—É—Ä–Ω—ã–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–ª–∞–±–æ–π —Ç–∏–ø–∏–∑–∞—Ü–∏–µ–π, –æ–±–ª–∞–¥–∞—é—â–∏–π –ø—Ä–æ—Å—Ç—ã–º –∏ –ø–æ–Ω—è—Ç–Ω—ã–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–æ–º, –≤—ã—Å–æ–∫–æ–π –ø–µ—Ä–µ–Ω–æ—Å–∏–º–æ—Å—Ç—å—é (–≤ —Å—Ä–∞–≤–Ω–µ–Ω–∏–∏ —Å –∞—Å—Å–µ–º–±–ª–µ—Ä–æ–º), –æ–Ω —Ö–æ—Ä–æ—à–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –≤ –∫–æ–Ω—Ü–µ-–∫–æ–Ω—Ü–æ–≤ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–µ–ª –∏—Å–ø—ã—Ç–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–µ–º. –ò –µ—Å–ª–∏ —É –°–∏ –≤—Å—ë —Ç–∞–∫ —Ö–æ—Ä–æ—à–æ, –∑–∞—á–µ–º –≤—Å–µ –≤–µ–¥—É—â–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–∏ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤ (PIC32, MSP430, AVR) –¥—Ä—É–∂–Ω–æ –ø–æ–¥—Ç—è–Ω—É–ª–∏ –≤ —Å–≤–æ–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞—Ä–∏–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ C++ –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä—ã ? –í –æ—Ç–ª–∏—á–∏–µ –æ—Ç —Å–≤–æ–µ–≥–æ –ø—Ä–µ–¥—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫–∞ –°–∏, C++ –¥–µ–∫–ª–∞—Ä–∏—Ä—É–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫—É —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ø–∞—Ä–∞–¥–∏–≥–º –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è ‚Äî –ø—Ä–æ—Ü–µ–¥—É—Ä–Ω–æ–µ, –æ–±—ä–µ–∫—Ç–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ (–û–û–ü), –æ–±–æ–±—â—ë–Ω–Ω–æ–µ (—à–∞–±–ª–æ–Ω—ã). –í–º–µ—Å—Ç–µ —Å —Ç–µ–º C++ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å–µ—Ä–µ–±—Ä—è–Ω–æ–π –ø—É–ª–µ–π –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å–≤–æ–µ–≥–æ –ø—Ä–µ–¥—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫–∞ ‚Äî —Ä—É—á–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∞–º—è—Ç—å—é –ø–æ-–ø—Ä–µ–∂–Ω–µ–º—É –Ω–∞ –ø–ª–µ—á–∞—Ö –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞. C++ –¥–æ–±–∞–≤–ª—è–µ—Ç –∫ –°–∏ –æ–±—ä–µ–∫—Ç–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ ‚Äî –≤–≤–æ–¥—è—Ç—Å—è –∫–ª–∞—Å—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç —Ç—Ä–∏ —Å–∞–º—ã—Ö –≤–∞–∂–Ω—ã—Ö —Å–≤–æ–π—Å—Ç–≤–∞ –û–û–ü: –∏–Ω–∫–∞–ø—Å—É–ª—è—Ü–∏—é, –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∏ –ø–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º. –û–û–ü –ø—Ä–∏ –≥—Ä–∞–º–æ—Ç–Ω–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –ø—Ä–∏–∑–≤–∞–Ω–æ –ø–æ–≤—ã—Å–∏—Ç—å –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç—Ä—É–¥–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤, —á–µ–º—É –ø–æ—Å–≤—è—â–µ–Ω–æ –Ω–µ–º–∞–ª–æ —Ä–∞–∑–ª–∏—á–Ω–æ–π –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—ã –Ω–∞ –ª—é–±–æ–π –≤–∫—É—Å –∏ —Ü–≤–µ—Ç.&lt;/p&gt;
&lt;p&gt;–ï—Å–ª–∏ –æ—Ç–±—Ä–æ—Å–∏—Ç—å —Ä–µ–ª–∏–≥–∏–æ–∑–Ω—ã–µ –ø—Ä–∏—Å—Ç—Ä–∞—Å—Ç–∏—è, —Ç–æ —Å—Ç–æ–∏—Ç –ø—Ä–∏–∑–Ω–∞—Ç—å, —á—Ç–æ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç C++ —ç—Ç–æ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –Ω–∞—Ç–∏–≤–Ω—ã–π —è–∑—ã–∫ –±–µ–∑ GC (garbage collector), –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –ª–µ–≥–∫–æ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç—å—Å—è –æ—Ç —Å–∞–º–æ–≥–æ –Ω–∏–∑–∫–æ–≥–æ —É—Ä–æ–≤–Ω—è, –±–ª–∏–∑–∫–æ–≥–æ –∫ –∞–ø–ø–∞—Ä–∞—Ç—É—Ä–µ, –¥–æ –æ—á–µ–Ω—å –≤—ã—Å–æ–∫–æ–≥–æ, –≤—Ä–æ–¥–µ –û–û–ü –∏ –æ–±–æ–±—â–µ–Ω–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è. –ü—Ä–∏ —ç—Ç–æ–º –¥–∞–Ω–Ω—ã–π —è–∑—ã–∫ —Å–Ω–∞–±–∂–µ–Ω —à–∏—Ä–æ–∫–∏–º –Ω–∞–±–æ—Ä–æ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞—Ä–∏—è, –∫–Ω–∏–≥ –∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏, —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Ä–µ—Å—É—Ä—Å–æ–≤. –ü–ª—é—Å –æ–≥—Ä–æ–º–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –≤–æ –≤—Å–µ–º –º–∏—Ä–µ.&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2017/03/20/s-18-dlia-mikrokontrollerov-razvedka-boem/ui.gif" style="width:50%; margin: 0 auto; display:block;"&gt;&lt;/p&gt;
&lt;p&gt;–ó–∞–ø—É—Å–∫–∞—Ç—å—Å—è –±—É–¥–µ–º –Ω–∞ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞—Ö MSP430, –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä –∫–∞–∫ –æ–±—ã—á–Ω–æ –Ω–∞ —Å–∞–π—Ç–µ &lt;a href="http://www.ti.com/tool/msp430-gcc-opensource" rel="nofollow"&gt;–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è&lt;/a&gt;. MSP430 ‚Äî —Å–µ–º–µ–π—Å—Ç–≤–æ 16-—Ä–∞–∑—Ä—è–¥–Ω—ã—Ö –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤ —Ñ–∏—Ä–º—ã ¬´Texas Instruments¬ª, –∫–æ—Ç–æ—Ä—ã–µ –∏–º–µ—é—Ç —Ñ–æ–Ω-–ù–µ–π–º–∞–Ω–æ–≤—Å–∫—É—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É —Å –µ–¥–∏–Ω—ã–º –∞–¥—Ä–µ—Å–Ω—ã–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ–º –¥–ª—è –∫–æ–º–∞–Ω–¥ –∏ –¥–∞–Ω–Ω—ã—Ö (–¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —É Microchip &lt;a href="https://mazko.github.io/blog/posts/2017/01/13/simuliatsiia-mikrokontrollerov-picsimjs/"&gt;PIC&lt;/a&gt; –∏ Atmel AVR –ì–∞—Ä–≤–∞—Ä–¥—Å–∫–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞).&lt;/p&gt;
&lt;p&gt;C++ –≤ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–µ —Å–ª—É—á–∞–µ–≤ –æ–±—Ä–∞—Ç–Ω–æ —Å–æ–≤–º–µ—Å—Ç–∏–º —Å–æ —Å–≤–æ–∏–º –ø—Ä–µ–¥—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–º, —Ç–∞–∫ —á—Ç–æ –ø–æ–Ω–∞—á–∞–ª—É –≤—Å—ë –≤—ã–≥–ª—è–¥–∏—Ç –∫–∞–∫ –≤ —Å—Ç–∞—Ä–æ–º –¥–æ–±—Ä–æ–º –°–∏ –∏ —Å–æ–≤—Å–µ–º –Ω–µ—Å—Ç—Ä–∞—à–Ω–æ. –ß–∞—Å—Ç–æ—Ç–∞ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤ MSP430 –∑–∞–¥–∞—ë—Ç—Å—è –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ –∏ –º–æ–∂–µ—Ç –º–µ–Ω—è—Ç—å—Å—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–ª—è —Å–Ω–∏–∂–µ–Ω–∏—è —ç–Ω–µ—Ä–≥–æ–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è. –°–µ—Ç–∫–∞ —á–∞—Å—Ç–æ—Ç –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ —Ç–∞–∫—Ç–æ–≤–æ–≥–æ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –æ–ø–∏—Å–∞–Ω–∞ –≤ &lt;a href="http://www.ti.com/lit/ds/symlink/msp430f1611.pdf" rel="nofollow"&gt;–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏&lt;/a&gt; - —Ä–µ–≥–∏—Å—Ç—Ä—ã RSEL —Å–ª—É–∂–∞—Ç –¥–ª—è –≥—Ä—É–±–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏, DCO –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–π. –ú–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä msp430f1611 –∏–º–µ–µ—Ç —à–µ—Å—Ç—å –≤–æ—Å—å–º–∏–±–∏—Ç–Ω—ã—Ö –ø–æ—Ä—Ç–æ–≤ –≤–≤–æ–¥–∞-–≤—ã–≤–æ–¥–∞, –∞ —à–µ—Å—Ç—å –¥–µ–ª–∏—Ç—Å—è –Ω–∞ —Ç—Ä–∏ –∏ –ø–æ–ª—É—á–∞–µ–º 16 RGB —Å–≤–µ—Ç–æ–¥–∏–æ–¥–æ–≤.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mazko.github.io/blog/posts/2017/03/20/s-18-dlia-mikrokontrollerov-razvedka-boem/a.out"&gt;elf&lt;/a&gt; | &lt;a href="http://mazko.github.io/MSP430.js/6f9f42f42b3dbdb860b36607e12e34cf"&gt;MSP430.js&lt;/a&gt; | &lt;a href="https://mazko.github.io/blog/posts/2017/03/20/s-18-dlia-mikrokontrollerov-razvedka-boem/src.zip"&gt;–∏—Å—Ö–æ–¥–Ω–∏–∫–∏&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;main.cpp&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt;reset &amp;amp;&amp;amp; (export GCC_DIR=~/ti/msp430_gcc ; &lt;/span&gt;
&lt;span class="cm"&gt;    $GCC_DIR/bin/msp430-elf-c++ \&lt;/span&gt;
&lt;span class="cm"&gt;    -I $GCC_DIR/include -L $GCC_DIR/include \&lt;/span&gt;
&lt;span class="cm"&gt;    -Werror -Wall -Weffc++ -mmcu=msp430f1611 -O2 *.cpp)&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;msp430.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;app.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;WDTCTL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;WDTPW&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;WDTHOLD&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;     &lt;span class="c1"&gt;// Stop watchdog timer&lt;/span&gt;

    &lt;span class="c1"&gt;// DCO = 3, RSEL = 0, f = 0.13 MHz&lt;/span&gt;
    &lt;span class="n"&gt;DCOCTL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="cm"&gt;/* DCO2 + */&lt;/span&gt; &lt;span class="n"&gt;DCO1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;DCO0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="n"&gt;BCSCTL1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;XT2OFF&lt;/span&gt; &lt;span class="cm"&gt;/* + RSEL1 + RSEL0 + RSEL2 */&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;constexpr&lt;/span&gt; &lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;O&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;P1OUT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;O&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;P2OUT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;O&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;P3OUT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;O&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;P4OUT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;O&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;P5OUT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;O&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;P6OUT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;O&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;P1DIR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;P2DIR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;P3DIR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;P4DIR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;P5DIR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;P6DIR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mh"&gt;0xFF&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–¢—É—Ç –≤ –∫–æ–¥–µ —Ç—Ä–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –º–æ–º–µ–Ω—Ç–∞, –∫–∞—Å–∞—é—â–∏—Ö—Å—è –°++:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;constexpr&lt;/code&gt; - –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞ –Ω–∞ —ç—Ç–∞–ø–µ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏, –≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç &lt;code&gt;const&lt;/code&gt; –Ω–µ –∑–∞–Ω–∏–º–∞–µ—Ç —Ñ–∏–∑–∏—á–µ—Å–∫–∏–π –∞–¥—Ä–µ—Å –≤ –ø–∞–º—è—Ç–∏&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;auto&lt;/code&gt; - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤—ã–≤–µ–¥–µ–Ω–∏–µ —Ç–∏–ø–∞ –Ω–∞ —ç—Ç–∞–ø–µ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ –∏—Å—Ö–æ–¥—è –∏–∑ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;app::run()&lt;/code&gt; - –≤—ã–∑–æ–≤ –º–µ—Ç–æ–¥–∞ –∏–∑ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ –∏–º—ë–Ω app&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;app.h&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;app.cpp&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;initializer_list&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;rgb.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

        &lt;span class="c1"&gt;// rgb_strip: default initialization&lt;/span&gt;
        &lt;span class="n"&gt;rgb&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;RgbStripLayer&lt;/span&gt; &lt;span class="n"&gt;rgb_strip&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;constexpr&lt;/span&gt; &lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;colors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;rgb_strip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RED&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="n"&gt;rgb_strip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GREEN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;rgb_strip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BLUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   &lt;span class="n"&gt;rgb_strip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;YELLOW&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;rgb_strip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;VIOLET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rgb_strip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CYAN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;rgb_strip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WHITE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="n"&gt;rgb_strip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BLACK&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;

        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(;;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="nl"&gt;c&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="nl"&gt;m&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rgb_strip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mem&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                    &lt;span class="n"&gt;rgb_strip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flush&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                    &lt;span class="n"&gt;__delay_cycles&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;—Ñ—É–Ω–∫—Ü–∏—è &lt;code&gt;run&lt;/code&gt; –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ –∏–º—ë–Ω &lt;code&gt;namespace app&lt;/code&gt; - –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –æ–¥–Ω–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ –∏–º—ë–Ω –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã (–∏–º–µ–Ω–∞) –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã, —Ç–æ–≥–¥–∞ –∫–∞–∫ –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–ø—Ä–µ–¥–µ–ª—ë–Ω –≤ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞—Ö –∏–º—ë–Ω&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;–¥–ª—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π &lt;code&gt;rgb_strip&lt;/code&gt; –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∏ –ø–æ—ç—Ç–æ–º—É –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é - –¥–ª—è –∫–ª–∞—Å—Å–æ–≤, —Å—Ç—Ä—É–∫—Ç—É—Ä –∏ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–π —ç—Ç–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å –ø–æ–º–æ—â—å—é –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (–¥–æ –∫–ª–∞—Å—Å–æ–≤ –º—ã –µ—â—ë –¥–æ–π–¥—ë–º)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;—Ü–∏–∫–ª –ø–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É &lt;code&gt;for (const auto&amp;amp; c : colors)&lt;/code&gt; –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–æ–π—Ç–∏—Å—å –ø–æ –≤—Å–µ–º —ç–ª–µ–º–µ–Ω—Ç–∞–º –±–µ–∑ —è–≤–Ω–æ–≥–æ —É–∫–∞–∑–∞–Ω–∏—è –∏–Ω–¥–µ–∫—Å–∞ –∏ —Å—Ç–∞–ª–æ –±—ã—Ç—å –±–µ–∑ –æ—à–∏–±–æ–∫, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –∏–Ω–¥–µ–∫—Å–æ–º –∑–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;–°++ –¥–∞—ë—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—É –∏–∑–±–µ–≥–∞—Ç—å –ª–∏—à–Ω–∏—Ö –∑–≤—ë–∑–¥–æ—á–µ–∫ - –¥–æ—Å—Ç—É–ø –∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º –ø–æ —Å—Å—ã–ª–∫–µ &lt;code&gt;auto&amp;amp; c&lt;/code&gt; –æ–±—ã—á–Ω–æ –±–µ–∑–æ–ø–∞—Å–Ω–µ–µ –∏ –±–æ–ª–µ–µ —Å—Ç—Ä–æ–≥–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä–æ–º —á–µ–º —á–µ—Ä–µ–∑ —Ä–∞–∑—ã–º–µ–Ω–æ–≤—ã–≤–∞–Ω–∏–µ —É–∫–∞–∑–∞—Ç–µ–ª—è &lt;code&gt;*—Å&lt;/code&gt; –≤ —Å—Ç–∏–ª–µ –°–∏&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;hal.h&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;pin.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;msp430.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;cstdint&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;pin&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// MSP430 aliases&lt;/span&gt;
    &lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="n"&gt;msp430_port_t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;decltype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;P1OUT&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="n"&gt;msp430_pin_t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Pin&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;msp430_port_t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="kt"&gt;uint8_t&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;using msp430_port_t = decltype(P1OUT);&lt;/code&gt; - –ø—Å–µ–≤–¥–æ–Ω–∏–º —Ç–∏–ø–∞, –≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ –º–æ–∂–Ω–æ –±—ã–ª–æ –±—ã —Å–ø–æ–∫–æ–π–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ C–∏ &lt;code&gt;typedef decltype(P1OUT) msp430_port_t&lt;/code&gt; - —ç—Ç–æ –¥–µ–ª–æ –≤–∫—É—Å–∞ –∏ —Å—Ç–∏–ª—è&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;decltype(P1OUT)&lt;/code&gt; - –≤ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–µ —Å–ª—É—á–∞–µ–≤ –Ω–∞–º –Ω–µ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å –∫–∞–∫–æ–π —Ç–∞–º –∏–º–µ–Ω–Ω–æ —É –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ –ø–æ—Ä—Ç - 8, 16 –∏–ª–∏ 32 –±–∏—Ç, –Ω–æ –µ–≥–æ —Ç–∏–ø –Ω–∞–º –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è —Ç.–∫. –ø—Ä–æ–≤–µ—Ä–∫—É —Ç–∏–ø–æ–≤ –Ω–∞ —ç—Ç–∞–ø–µ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ –Ω–∏–∫—Ç–æ –Ω–µ –æ—Ç–º–µ–Ω—è–ª&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Pin&amp;lt;msp430_port_t, std::uint8_t&amp;gt;&lt;/code&gt; - –ø—Å–µ–≤–¥–æ–Ω–∏–º —à–∞–±–ª–æ–Ω–∞, –∫—Ç–æ —ç—Ç–æ —Ç–∞–∫–æ–π –∏ –∑–∞—á–µ–º –æ–Ω –Ω—É–∂–µ–Ω —Å—Ç–∞–Ω–µ—Ç –ø–æ–Ω—è—Ç–Ω–æ —á—É—Ç—å –¥–∞–ª—å—à–µ&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;non-copyable.h&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// C++ compile time check idiom: Non-Copyable Class&lt;/span&gt;
&lt;span class="c1"&gt;// TODO: inheritance approach bloats the code size&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;NonCopyable&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="k"&gt;protected&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;NonCopyable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;NonCopyable&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;NonCopyable&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="k"&gt;operator&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;NonCopyable&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;NonCopyable&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è... –í –≤–µ–∂–ª–∏–≤–æ–π —Ñ–æ—Ä–º–µ –ø—Ä–µ–¥–ª–∞–≥–∞—é –µ–≥–æ —Å—Ä–∞–∑—É –æ—Ç–∫–ª—é—á–∞—Ç—å –∏ –∑–∞–±—ã—Ç—å - –¥–ª—è —ç—Ç–æ–≥–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–æ—Å—Ç–æ –Ω–∞—Å–ª–µ–¥–æ–≤–∞—Ç—å –∫–ª–∞—Å—Å—ã –æ—Ç –∫–ª–∞—Å—Å–∞ &lt;code&gt;NonCopyable&lt;/code&gt;. –í —Ç–∞–∫–æ–º —Å–ª—É—á–∞–µ –∫—Ä–∏–≤–æ–π –∫–æ–¥, –ø—ã—Ç–∞—é—â–∏–π—Å—è —Å–æ–∑–¥–∞—Ç—å –ø–æ–±–∏—Ç–æ–≤—É—é –∫–æ–ø–∏—é –æ–±—ä–µ–∫—Ç–∞ –ø—Ä–æ—Å—Ç–æ —Å–ª–æ–º–∞–µ—Ç –∫–æ–º–ø–∏–ª—è—Ü–∏—é –∏ —ç—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;rgb.h&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;hal.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;array&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;rgb&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;pin&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;RgbStripLayer&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;NonCopyable&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

        &lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;msp430_port_t&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;p1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;msp430_port_t&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;p2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;MonoStrip&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;MonoStrip&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;P1OUT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;P2OUT&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;MonoStrip&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;P3OUT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;P4OUT&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;green&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;MonoStrip&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;P5OUT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;P6OUT&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="c1"&gt;// mem: value initialization&lt;/span&gt;
        &lt;span class="n"&gt;RgbStripLayer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;mem&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

        &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;constexpr&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="kt"&gt;size_t&lt;/span&gt; &lt;span class="n"&gt;STRIP_SZ&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;RGB&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;

        &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;RGB&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;STRIP_SZ&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;mem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;constexpr&lt;/span&gt; &lt;span class="n"&gt;RGB&lt;/span&gt; &lt;span class="n"&gt;RED&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="n"&gt;GREEN&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; 
                         &lt;span class="n"&gt;BLUE&lt;/span&gt;    &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="n"&gt;YELLOW&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; 
                         &lt;span class="n"&gt;CYAN&lt;/span&gt;    &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="n"&gt;VIOLET&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; 
                         &lt;span class="n"&gt;WHITE&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="n"&gt;BLACK&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

        &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;flush&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="n"&gt;RgbStripLayer&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="k"&gt;operator&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;RgbStripLayer&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;layer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ò—Ç–∞–∫ –û–û–ü.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;–≤—Å–µ –ø–æ–ª—è –∏ –º–µ—Ç–æ–¥—ã –∫–ª–∞—Å—Å–æ–≤ &lt;code&gt;class&lt;/code&gt; (–∞ —Ç–∞–∫–∂–µ —Å—Ç—Ä—É–∫—Ç—É—Ä &lt;code&gt;struct&lt;/code&gt;) –∏–º–µ—é—Ç –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ - –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—Å–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–ª–∞—Å—Å–∞ —è–≤–ª—è–µ—Ç—Å—è –¥–æ—Å—Ç—É–ø–Ω—ã–º –¥–ª—è —á—Ç–µ–Ω–∏—è –∏ –∑–∞–ø–∏—Å–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è –Ω–µ–≥–æ —Å–∞–º–æ–≥–æ —Ç.–µ. –∑–∞–∫—Ä—ã—Ç–æ (private), –∞ –¥–ª—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã &lt;code&gt;struct&lt;/code&gt; –Ω–∞–æ–±–æ—Ä–æ—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—Å—ë –æ—Ç–∫—Ä—ã—Ç–æ –¥–ª—è –≤—Å–µ—Ö (public)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;–ø–æ–ª—è red, green, blue –≤ –∫–ª–∞—Å—Å–µ &lt;code&gt;RgbStripLayer&lt;/code&gt; (—Å–ª–æ–π –∞–Ω–∏–º–∞—Ü–∏–∏) —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ - –≤—Å–µ —ç–∫–∑–µ–º–ø–ª—è—Ä—ã —ç—Ç–æ–≥–æ –∫–ª–∞—Å—Å–∞ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –æ–¥–Ω—É –∏ —Ç—É –∂–µ –∫–æ–ø–∏—é —ç—Ç–∏—Ö –ø–æ–ª–µ–π –∏ —Ç–µ–º —Å–∞–º—ã–º —ç–∫–æ–Ω–æ–º–∏—Ç—Å—è –ø–∞–º—è—Ç—å RAM&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;std::array&lt;/code&gt; - —ç—Ç–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –º–∞—Å—Å–∏–≤–∞ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞, –∏–º–µ–µ—Ç —Ç—É –∂–µ —Å–µ–º–∞–Ω—Ç–∏–∫—É, —á—Ç–æ –∏ C–∏ –º–∞—Å—Å–∏–≤—ã –ø–ª—é—Å –∑–Ω–∞–µ—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π —Ä–∞–∑–º–µ—Ä, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ, –∏—Ç–µ—Ä–∞—Ç–æ—Ä—ã –∏ —Ç.–¥.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;–º–µ—Ç–æ–¥—ã, —Å–æ–≤–ø–∞–¥–∞—é—â–∏–µ —Å –∏–º–µ–Ω–µ–º –∫–ª–∞—Å—Å–∞ —ç—Ç–æ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã, &lt;code&gt;RgbStripLayer(): mem() {}&lt;/code&gt; —ç—Ç–æ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ç.–∫. –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤, –≤ –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä &lt;code&gt;mem&lt;/code&gt; –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –Ω—É–ª—è–º–∏&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;—Å–ª–æ–∏ –∞–Ω–∏–º–∞—Ü–∏–π &lt;code&gt;RgbStripLayer&lt;/code&gt; –º–æ–∂–Ω–æ —Å–º–µ—à–∏–≤–∞—Ç—å –º–µ–∂–¥—É —Å–æ–±–æ–π - –¥–ª—è —ç—Ç–æ–≥–æ –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω –æ–ø–µ—Ä–∞—Ç–æ—Ä &lt;code&gt;+=&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;rgb.cpp&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;rgb.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;rgb&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;msp430_port_t&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;p1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;msp430_port_t&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;p2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;RgbStripLayer&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nl"&gt;MonoStrip&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;NonCopyable&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;msp430_pin_t&lt;/span&gt; &lt;span class="n"&gt;leds&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;STRIP_SZ&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;p1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;p1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;p1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;p1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;p1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;p1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;p1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;p1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;p2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;p2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;p2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;p2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;p2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;p2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;p2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;p2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="k"&gt;decltype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;RgbStripLayer&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;red&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;RgbStripLayer&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;decltype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;RgbStripLayer&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;green&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;RgbStripLayer&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;green&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;decltype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;RgbStripLayer&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;RgbStripLayer&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;RgbStripLayer&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;flush&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mem&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;red&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;leds&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mem&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;green&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;leds&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mem&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;leds&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mem&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;RgbStripLayer&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;RgbStripLayer&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="k"&gt;operator&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;RgbStripLayer&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;layer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mem&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;mem&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;|=&lt;/span&gt; &lt;span class="n"&gt;layer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mem&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;mem&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt; &lt;span class="o"&gt;|=&lt;/span&gt; &lt;span class="n"&gt;layer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mem&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;mem&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;|=&lt;/span&gt; &lt;span class="n"&gt;layer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mem&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;–æ–±—ä—è–≤–ª–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∞ –∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –≤ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö –≤ –°++ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–π, –æ–¥–Ω–∞–∫–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —É—Å–∫–æ—Ä–∏—Ç—å —Å–±–æ—Ä–∫—É –ø—Ä–æ–µ–∫—Ç–∞ –∑–∞ —Å—á—ë—Ç —Ç.–Ω. —Ä–∞–∑–¥–µ–ª—å–Ω–æ–π –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ - —Ç–∞–∫–∂–µ –∫–∞–∫ –∏ –≤ –°–∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;—à–∞–±–ª–æ–Ω—ã C++ –ø–æ–∑–≤–æ–ª—è—é—Ç –∑–∞–¥–∞–≤–∞—Ç—å –æ–±–æ–±—â—ë–Ω–Ω—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã –±–µ–∑ –ø—Ä–∏–≤—è–∑–∫–∏ –∫ –Ω–µ–∫–æ—Ç–æ—Ä—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º - –≤ —Å–ª—É—á–∞–µ c &lt;code&gt;MonoStrip&lt;/code&gt; —ç—Ç–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø–æ—Ä—Ç—ã –≤–≤–æ–¥–∞ –≤—ã–≤–æ–¥–∞ p1, p2 —Ä–∞–∑–ª–∏—á–Ω—ã–µ —É –∫–∞–∂–¥–æ–≥–æ —Ü–≤–µ—Ç–∞, –∫–æ–¥ —à–∞–±–ª–æ–Ω–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –Ω–∞ —ç—Ç–∞–ø–µ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ –∏ –≤ —ç—Ç–æ–º –æ–Ω–∏ —Å—Ö–æ–∂–∏ —Å –º–∞–∫—Ä–æ—Å–∞–º–∏ –°–∏&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;–∫–∞–∂–¥—ã–π –∫–ª–∞—Å—Å –≤ C++ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–≤–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –∏–º–µ–Ω, –µ—Å–ª–∏ –≤–Ω—É—Ç—Ä–∏ –∫–ª–∞—Å—Å–∞ –∑–∞–ø–∏—Å–∞–Ω–æ —Ç–æ–ª—å–∫–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ, —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –≤ –¥—Ä—É–≥–æ–º –º–µ—Å—Ç–µ —Å –ø–æ–º–æ—â—å—é –æ–ø–µ—Ä–∞—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏ ::&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;–ù—É –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π –∫–ª–∞—Å—Å –æ–Ω —Å–æ–≤—Å–µ–º –ø—Ä–æ—Å—Ç–æ–π - –∫–∞–∂–¥–∞—è –Ω–æ–≥–∞ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ —ç—Ç–æ –æ–±—ä–µ–∫—Ç. –ó–∞ —Å—á—ë—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —à–∞–±–ª–æ–Ω–æ–≤ –∫–ª–∞—Å—Å Pin –Ω–∏—á–µ–≥–æ –Ω–µ –∑–Ω–∞–µ—Ç –æ–± –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ - —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö –ø–æ—Ä—Ç–∞ –≤–≤–æ–¥–∞-–≤—ã–≤–æ–¥–∞ —è–≤–ª—è–µ—Ç—Å—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º —à–∞–±–ª–æ–Ω–∞:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;pin.h&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;non-copyable.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;pin&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt; &lt;span class="n"&gt;port_t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;typename&lt;/span&gt; &lt;span class="n"&gt;pos_t&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Pin&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;NonCopyable&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;port_t&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;m_port&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;port_t&lt;/span&gt; &lt;span class="n"&gt;m_mask&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;Pin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;port_t&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;pos_t&lt;/span&gt; &lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;m_port&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;m_mask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

        &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;m_port&lt;/span&gt; &lt;span class="o"&gt;|=&lt;/span&gt; &lt;span class="n"&gt;m_mask&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;clr&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;clr&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;m_port&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;=&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="n"&gt;m_mask&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;–µ—Å–ª–∏ —Ç–µ–ª–æ –º–µ—Ç–æ–¥–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ –ø—Ä–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–∏ –∫–ª–∞—Å—Å–∞, –º–µ—Ç–æ–¥ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —è–≤–ª—è—é—Ç—Å—è –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–º (inline) - –æ–±—ã—á–Ω–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–º–∏ –¥–µ–ª–∞—é—Ç –∫–æ—Ä–æ—Ç–∫–∏–µ –º–µ—Ç–æ–¥—ã&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;–∞—Ä–≥—É–º–µ–Ω—Ç—ã —Ñ—É–Ω–∫—Ü–∏–π –≤ –°++ –º–æ–≥—É—Ç –∏–º–µ—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—è –∫–∞–∫ –Ω–∞–ø—Ä–∏–º–µ—Ä &lt;code&gt;const bool v = true&lt;/code&gt; , —ç—Ç–æ –∂–µ –º–æ–∂–Ω–æ –±—ã–ª–æ –±—ã —Å–¥–µ–ª–∞—Ç—å –∏ —Å –ø–æ–º–æ—â—å—é –ø–µ—Ä–µ–≥—Ä—É–∑–∫–∏ —Ñ—É–Ω–∫—Ü–∏–π&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;–û–¥–Ω–æ–π –∏–∑ —Ç–∏–ø–∏—á–Ω—ã—Ö –æ—à–∏–±–æ–∫ –ø—Ä–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –Ω–∞ C++ —è–≤–ª—è–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ &lt;strong&gt;–Ω–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö&lt;/strong&gt;. –ß—Ç–µ–Ω–∏–µ –∏–∑ –Ω–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –ø–æ –°—Ç–∞–Ω–¥–∞—Ä—Ç—É —è–≤–ª—è–µ—Ç—Å—è –Ω–µ–æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–º –ø–æ–≤–µ–¥–µ–Ω–∏–µ–º. –ù–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ –æ–±—ã—á–Ω–æ –æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–º –∫–∞–∫–æ–µ-—Ç–æ –ø–æ–ª—É—Å–ª—É—á–∞–π–Ω–æ–µ –º—É—Å–æ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –ø—Ä–∏—á—ë–º –æ–Ω–æ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞–∑–Ω—ã–º –æ—Ç –∑–∞–ø—É—Å–∫–∞ –∫ –∑–∞–ø—É—Å–∫—É –∏ —Ä–∞–∑–Ω—ã–º –Ω–∞ —Ä–∞–∑–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö. –û—Ç—Å—é–¥–∞ –∏ –ø–æ–ª—É—á–∞–µ—Ç—Å—è, —á—Ç–æ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–∏ —Å —Ç–æ–≥–æ –Ω–∏ —Å —Å–µ–≥–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ-—Ä–∞–∑–Ω–æ–º—É.&lt;/p&gt;
&lt;p&gt;–ö–∞–∫ –∏ –≤ –°–∏, –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ—Å—Ç—ã—Ö —Ç–∏–ø–æ–≤ –≤ –°++ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—Ç—Å—è –Ω—É–ª—è–º–∏, –ª–æ–∫–∞–ª—å–Ω—ã–µ ‚Äî –Ω–µ—Ç. –ï—Å–ª–∏ –∂–µ –º—ã —Ä–∞–±–æ—Ç–∞–µ–º —Å –æ–±—ä–µ–∫—Ç–∞–º–∏, –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö –æ–ø—Ä–µ–¥–µ–ª—ë–Ω –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –æ–Ω –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ –∏ –≤ –Ω—ë–º —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ –ø–æ–ª—è, —á—Ç–æ–±—ã –Ω–µ —Å—Ç–∞–ª–∫–∏–≤–∞—Ç—å—Å—è —Å —Ç–µ–º, —á—Ç–æ –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ. –†–∞—Å—Å–º–æ—Ç—Ä–∏–º —Å–ª–µ–¥—É—é—â–∏–π –ø—Ä–∏–º–µ—Ä:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;app.h&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt;reset &amp;amp;&amp;amp; (export GCC_DIR=~/ti/gcc ; &lt;/span&gt;
&lt;span class="cm"&gt;    $GCC_DIR/bin/msp430-elf-c++ \&lt;/span&gt;
&lt;span class="cm"&gt;    -I $GCC_DIR/include -L $GCC_DIR/include \&lt;/span&gt;
&lt;span class="cm"&gt;    -Werror -Wall -mmcu=msp430f1611 *.cpp)&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;rgb.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(;;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;RgbStripLayer&lt;/span&gt; &lt;span class="n"&gt;rgb_strip&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;rgb_strip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flush&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;bug&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rgb_strip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;bug&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;RgbStripLayer&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;RED&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ—Ç–∫–ª—é—á–∏—Ç—å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä–∞ –∏ —É–±—Ä–∞—Ç—å –∏–∑ &lt;code&gt;rgb.h&lt;/code&gt; –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é &lt;code&gt;RgbStripLayer(): mem() {}&lt;/code&gt; –∫–∞–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–∞—á–Ω—ë—Ç –≤–µ—Å—Ç–∏ —Å–µ–±—è –ø–æ-—Ä–∞–∑–Ω–æ–º—É &lt;a href="http://mazko.github.io/MSP430.js/89cdcc2f31e21ba31c3d218c0463e8d4"&gt;ok&lt;/a&gt; | &lt;a href="http://mazko.github.io/MSP430.js/602b5588cb3fb1200af441cd9fc6efee"&gt;bug&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;–í–æ–æ–±—â–µ –ø–æ-—Ö–æ—Ä–æ—à–µ–º—É –Ω–æ—Ä–º–∞–ª—å–Ω—ã–π —è–∑—ã–∫ –ø—Ä–æ—Å—Ç–æ –Ω–µ –¥–æ–ª–∂–µ–Ω –ø–æ–∑–≤–æ–ª—è—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ. –ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω—É–∂–Ω–æ —É–∫–∞–∑—ã–≤–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –∑–Ω–∞—á–µ–Ω–∏–µ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –º–æ–∂–µ—Ç —Å—Ç–∞—Ç—å –≤—Å–µ —Ç–æ—Ç –∂–µ –Ω–æ–ª—å. –î–ª—è –≤—ã—è–≤–ª–µ–Ω–∏—è –Ω–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —É gcc –ø–æ–¥–æ–±–Ω—ã—Ö –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä–æ–≤ –µ—Å—Ç—å –æ–ø—Ü–∏—è –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ &lt;code&gt;-Weffc++&lt;/code&gt;, —Ç–∞–∫–∂–µ –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ —Å—Ç–æ—Ä–æ–Ω—É Valgrind –∏–ª–∏ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–æ–≤ –∫–æ–¥–∞.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mazko.github.io/blog/posts/2017/03/22/s-dlia-mikrokontrollerov-dekorator/"&gt;–î–∞–ª–µ–µ&lt;/a&gt; –ø–∞—Ç—Ç–µ—Ä–Ω –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä.&lt;/p&gt;</content><category term="msp430"></category></entry><entry><title>PICSim.js - –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –∏ –æ–±—Ä–∞—Ç–Ω–∞—è –ø–æ–ª—å—Å–∫–∞—è –∑–∞–ø–∏—Å—å</title><link href="https://mazko.github.io/blog/posts/2017/02/14/picsimjs-kalkuliator-i-obratnaia-polskaia-zapis/" rel="alternate"></link><published>2017-02-14T00:00:00+02:00</published><updated>2017-02-14T00:00:00+02:00</updated><author><name>Oleg Mazko</name></author><id>tag:mazko.github.io,2017-02-14:/blog/posts/2017/02/14/picsimjs-kalkuliator-i-obratnaia-polskaia-zapis/</id><summary type="html">&lt;p&gt;–û–±—Ä–∞—Ç–Ω–∞—è –ü–æ–ª—å—Å–∫–∞—è –ó–∞–ø–∏—Å—å –∞–Ω–≥–ª. (Reverse Polish Notation, RPN) –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏–∑–±–∞–≤–∏—Ç—å—Å—è –æ—Ç —Å–∫–æ–±–æ–∫ –≤ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏—è—Ö. –°–Ω–∞—á–∞–ª–∞ —Å–ª–µ–¥—É—é—Ç –¥–≤–∞ –æ–ø–µ—Ä–∞–Ω–¥–∞ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏, –∞ –∑–∞—Ç–µ–º –∑–Ω–∞–∫ –æ–ø–µ—Ä–∞—Ü–∏–∏. –ù–∞–ø—Ä–∏–º–µ—Ä &lt;code&gt;4 2 + = 4 + 2 = 6&lt;/code&gt; –∏–ª–∏ &lt;code&gt;4 2 * 3 5 / - = (4 * 2) - (3 / 5) = 7.4&lt;/code&gt;. –ü—Ä–æ–≥—Ä–∞–º–º–∞-—Ç—Ä–∞–Ω—Å–ª—è—Ç–æ—Ä RPN-–≤—ã—Ä–∞–∂–µ–Ω–∏–π –æ—Å–Ω–æ–≤—ã–≤–∞–µ—Ç—Å—è –Ω–∞ —Å—Ç–µ–∫–µ - –∫–∞–∂–¥—ã–π –æ–ø–µ—Ä–∞–Ω–¥ –ø–æ—Å—ã–ª–∞–µ—Ç—Å—è ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;–û–±—Ä–∞—Ç–Ω–∞—è –ü–æ–ª—å—Å–∫–∞—è –ó–∞–ø–∏—Å—å –∞–Ω–≥–ª. (Reverse Polish Notation, RPN) –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏–∑–±–∞–≤–∏—Ç—å—Å—è –æ—Ç —Å–∫–æ–±–æ–∫ –≤ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏—è—Ö. –°–Ω–∞—á–∞–ª–∞ —Å–ª–µ–¥—É—é—Ç –¥–≤–∞ –æ–ø–µ—Ä–∞–Ω–¥–∞ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏, –∞ –∑–∞—Ç–µ–º –∑–Ω–∞–∫ –æ–ø–µ—Ä–∞—Ü–∏–∏. –ù–∞–ø—Ä–∏–º–µ—Ä &lt;code&gt;4 2 + = 4 + 2 = 6&lt;/code&gt; –∏–ª–∏ &lt;code&gt;4 2 * 3 5 / - = (4 * 2) - (3 / 5) = 7.4&lt;/code&gt;. –ü—Ä–æ–≥—Ä–∞–º–º–∞-—Ç—Ä–∞–Ω—Å–ª—è—Ç–æ—Ä RPN-–≤—ã—Ä–∞–∂–µ–Ω–∏–π –æ—Å–Ω–æ–≤—ã–≤–∞–µ—Ç—Å—è –Ω–∞ —Å—Ç–µ–∫–µ - –∫–∞–∂–¥—ã–π –æ–ø–µ—Ä–∞–Ω–¥ –ø–æ—Å—ã–ª–∞–µ—Ç—Å—è –≤ —Å—Ç–µ–∫, –∞ –µ—Å–ª–∏ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è –æ–ø–µ—Ä–∞—Ç–æ—Ä, —Ç–æ –∏–∑ —Å—Ç–µ–∫–∞ –∏–∑–≤–ª–µ–∫–∞—é—Ç—Å—è –¥–≤–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –æ–ø–µ—Ä–∞–Ω–¥–∞ –∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è
–æ–ø–µ—Ä–∞—Ü–∏—è, –ø–æ—Å–ª–µ —á–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ—Å—ã–ª–∞–µ—Ç—Å—è –æ–±—Ä–∞—Ç–Ω–æ –≤ —Å—Ç–µ–∫. –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ –Ω–∞ –±–∞–∑–µ –æ–±—Ä–∞—Ç–Ω–æ–π –ø–æ–ª—å—Å–∫–æ–π –∑–∞–ø–∏—Å–∏ –ø–æ–¥—Ä–æ–±–Ω–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∞ –≤ –∫–Ω–∏–≥–µ ¬´–Ø–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –°–∏¬ª –ë—Ä–∞–π–∞–Ω–∞ –ö–µ—Ä–Ω–∏–≥–∞–Ω–∞ –∏ –î–µ–Ω–Ω–∏—Å–∞ –†–∏—Ç—á–∏ (–ø–æ—Å–ª–µ–¥–Ω–∏–π –æ–¥–∏–Ω –∏–∑ –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∞–≤—Ç–æ—Ä–æ–≤ –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —è–∑—ã–∫–∞ –°–∏). –í –æ–±—â–µ–º —Å–ª—É—á–∞–µ –∞–ª–≥–æ—Ä–∏—Ç–º —Ä–µ—à–µ–Ω–∏—è –ø–æ–¥–æ–±–Ω—ã—Ö –∑–∞–¥–∞—á —Å–≤–æ–¥–∏—Ç—Å—è –∫ –¥–≤—É–º —ç—Ç–∞–ø–∞–º:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;–ª–µ–∫—Å–∏—á–µ—Å–∫–æ–π –∞–Ω–∞–ª–∏–∑ - —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –∏ –≤—ã–¥–µ–ª–µ–Ω–∏–µ –ª–µ–∫—Å–µ–º –∏–∑ –≤—Ö–æ–¥–Ω–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å–∏–º–≤–æ–ª–æ–≤. –í —Å–ª—É—á–∞–µ RPN –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ –Ω–∞ –≤—ã—Ö–æ–¥–µ –ø–æ–ª—É—á–∞–µ–º —á–∏—Å–ª–∞ –∏ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;—Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ - –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ª–µ–∫—Å–µ–º –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç—Å—è –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä–∞—è —Ö–æ—Ä–æ—à–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏. –í —É–ø—Ä–æ—â—ë–Ω–Ω–æ–º —Å–ª—É—á–∞–µ –¥–ª—è RPN –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ —ç—Ç–æ —Å—Ç–µ–∫&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;–û—à–∏–±–∫–∏ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã –º–æ–≥—É—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å –Ω–∞ –æ–±–æ–∏—Ö —ç—Ç–∞–ø–∞—Ö - –∑–∞ –≤–≤–æ–¥–æ–º –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä –±—É–∫–≤) –¥–æ–ª–∂–µ–Ω —Å–ª–µ–¥–∏—Ç—å –ª–µ–∫—Å–∏—á–µ—Å–∫–æ–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä, –∞ –≤–æ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–µ–ª–µ–Ω–∏—è –Ω–∞ –Ω–æ–ª—å –∏–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —Å—Ç–µ–∫–µ —ç—Ç–æ —É–∂–µ –∑–æ–Ω–∞ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mazko.github.io/blog/posts/2017/02/14/picsimjs-kalkuliator-i-obratnaia-polskaia-zapis/rpn.zip"&gt;–∏—Å—Ö–æ–¥–Ω–∏–∫–∏&lt;/a&gt; | &lt;a href="https://mazko.github.io/blog/posts/2017/02/14/picsimjs-kalkuliator-i-obratnaia-polskaia-zapis/main.hex"&gt;hex&lt;/a&gt; | &lt;a href="http://mazko.github.io/picsim.js/da43c25591f9e336ec3229d51fbdb495"&gt;picsim.js&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2017/02/14/picsimjs-kalkuliator-i-obratnaia-polskaia-zapis/ui.gif" style="width:100%; border:1px solid #ddd;"&gt;&lt;/p&gt;
&lt;p&gt;–ü—Ä–∏ –≤—ã–±–æ—Ä–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞—Ä–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ª–µ–∫—Å–∏—á–µ—Å–∫–æ–≥–æ / —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ —Å—Ç–æ–∏—Ç —É—á–∏—Ç—ã–≤–∞—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤. –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –Ω–µ –¥–æ–ª–∂–µ–Ω –∑–∞–≤–∏—Å–µ—Ç—å –æ—Ç —Å–∏—Å—Ç–µ–º—ã –∏ —Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫, –ø–æ—ç—Ç–æ–º—É Flex/Bison –æ—Ç–ø–∞–¥–∞—é—Ç —Å—Ä–∞–∑—É —Ç.–∫. –∑–∞–≤—è–∑–∞–Ω—ã –Ω–∞ POSIX, –∞ —É –Ω–∞—Å —Ç—É—Ç –≥–æ–ª–æ–µ –∂–µ–ª–µ–∑–æ. –¢–∞–∫–∂–µ –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä—ã –¥–ª—è PIC18 –∏ –Ω–∏–∂–µ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç —Ä–µ–∫—É—Ä—Å–∏–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ (–¥–∞ –¥–∞). –í–æ–±—â–µ–º –æ—Å–æ–±–æ –Ω–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å—Å—è. –ù–æ –≤—Å—ë –∂–µ –Ω–∞—à–µ–ª—Å—è –æ–¥–∏–Ω –æ—á–µ–Ω—å –¥–æ—Å—Ç–æ–π–Ω—ã–π –∫–∞–Ω–¥–∏–¥–∞—Ç - &lt;a href="http://re2c.org/" rel="nofollow"&gt;re2c&lt;/a&gt;. –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ª–µ–∫—Å–∏—á–µ—Å–∫–∏—Ö –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–æ–≤ re2c –æ—á–µ–Ω—å –ø–æ—Ö–æ–∂ –Ω–∞ Flex - –ø—Ä–∞–≤–∏–ª–∞ –∑–∞–¥–∞—é—Ç—Å—è –≤ –≤–∏–¥–µ —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π —Å–ª–µ–≤–∞, –∫–æ–¥ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–ø—Ä–∞–≤–∞. –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–¥ –ø–æ—Ö–æ–∂ –Ω–∞ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–π –∏ –±–µ–∑ –ø—Ä–æ–±–ª–µ–º —Å–æ–±–∏—Ä–∞–µ—Ç—Å—è –¥–∞–∂–µ –ø–æ–¥ bare metal. –§—É–Ω–∫—Ü–∏—è &lt;code&gt;lex_flt&lt;/code&gt; —ç—Ç–æ –æ–±–ª–µ–≥—á—ë–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è &lt;code&gt;atof&lt;/code&gt;/&lt;code&gt;strtod&lt;/code&gt;, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–∞—è –¥–ª—è RPN –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;stack.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdint.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdbool.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;RPN_MAX_CHARS&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="n"&gt;sp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="n"&gt;_stack&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// 0 == SUCCESS&lt;/span&gt;
&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="nf"&gt;stack_push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_stack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sp&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt; &lt;span class="n"&gt;_stack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;_stack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;_stack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;_stack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sp&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// 0 == SUCCESS&lt;/span&gt;
&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="nf"&gt;stack_pop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_stack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sp&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_stack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;_stack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sp&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;stack_clr&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;_stack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;rpn.re.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdbool.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;stack.c&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="c1"&gt;// 0 == SUCCESS&lt;/span&gt;
&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="nf"&gt;lex_flt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;neg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="cm"&gt;/*!re2c&lt;/span&gt;
&lt;span class="cm"&gt;      re2c:yyfill:enable = 0;&lt;/span&gt;
&lt;span class="cm"&gt;      re2c:define:YYCTYPE = char;&lt;/span&gt;
&lt;span class="cm"&gt;      re2c:define:YYCURSOR = s;&lt;/span&gt;

&lt;span class="cm"&gt;      &amp;quot;-&amp;quot;    { neg = true; goto mant_int; }&lt;/span&gt;
&lt;span class="cm"&gt;      &amp;quot;&amp;quot;     { goto mant_int; }&lt;/span&gt;
&lt;span class="cm"&gt;  */&lt;/span&gt;
&lt;span class="nl"&gt;mant_int&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="cm"&gt;/*!re2c&lt;/span&gt;
&lt;span class="cm"&gt;      &amp;quot;.&amp;quot;    { goto mant_frac; }&lt;/span&gt;
&lt;span class="cm"&gt;      &amp;quot;&amp;quot;     { goto end; }&lt;/span&gt;
&lt;span class="cm"&gt;      [0-9]  { *f = (*f * 10) + (s[-1] - &amp;#39;0&amp;#39;); goto mant_int; }&lt;/span&gt;
&lt;span class="cm"&gt;  */&lt;/span&gt;
&lt;span class="nl"&gt;mant_frac&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="cm"&gt;/*!re2c&lt;/span&gt;
&lt;span class="cm"&gt;      &amp;quot;&amp;quot;     { goto end; }&lt;/span&gt;
&lt;span class="cm"&gt;      [0-9]  { *f += (x /= 10) * (s[-1] - &amp;#39;0&amp;#39;); goto mant_frac; }&lt;/span&gt;
&lt;span class="cm"&gt;  */&lt;/span&gt;
&lt;span class="nl"&gt;end&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;neg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;*=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// 0 == SUCCESS&lt;/span&gt;
&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="nf"&gt;cc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;o1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;o2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;stack_pop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;o2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;stack_pop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;o1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;+&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;stack_push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;o1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;o2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;stack_push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;o1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;o2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;o2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;stack_push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;o1&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;o2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;stack_push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;o1&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;o2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; 
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// 0 == SUCCESS&lt;/span&gt;
&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="nf"&gt;lex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;cur&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="c1"&gt;// YYMARKER is needed because rules overlap:&lt;/span&gt;
  &lt;span class="c1"&gt;// it backups input position of the longest successful match&lt;/span&gt;
  &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;YYMARKER&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(;;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;tok&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cur&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="cm"&gt;/*!re2c&lt;/span&gt;
&lt;span class="cm"&gt;        re2c:yyfill:enable = 0;&lt;/span&gt;
&lt;span class="cm"&gt;        re2c:define:YYCTYPE = char;&lt;/span&gt;
&lt;span class="cm"&gt;        re2c:define:YYCURSOR = cur;&lt;/span&gt;

&lt;span class="cm"&gt;        flt = &amp;quot;-&amp;quot; ? ([0-9]+ | [0-9]* &amp;quot;.&amp;quot; [0-9]+);&lt;/span&gt;
&lt;span class="cm"&gt;        mop = [-+*\/];&lt;/span&gt;

&lt;span class="cm"&gt;        *       { return true; }&lt;/span&gt;
&lt;span class="cm"&gt;        &amp;quot;\x00&amp;quot;  { return false; }&lt;/span&gt;
&lt;span class="cm"&gt;        flt     { if (lex_flt(tok, cur, &amp;amp;f) || stack_push(f)) return true; continue; }&lt;/span&gt;
&lt;span class="cm"&gt;        &amp;quot; &amp;quot; flt { if (lex_flt(tok + 1, cur, &amp;amp;f) || stack_push(f)) return true; continue; }&lt;/span&gt;
&lt;span class="cm"&gt;        mop     { if (cc(*tok)) return true; continue; }&lt;/span&gt;
&lt;span class="cm"&gt;        &amp;quot; &amp;quot; mop { if (cc(*(tok + 1))) return true; continue; }&lt;/span&gt;
&lt;span class="cm"&gt;    */&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// 0 == SUCCESS&lt;/span&gt;
&lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="nf"&gt;rpn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;cur&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;stack_clr&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;lex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cur&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;stack_pop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–†–∞–±–æ—Ç–∞ —Å —Å–∏–º–≤–æ–ª—å–Ω—ã–º &lt;a href="https://mazko.github.io/blog/posts/2017/01/27/picsimjs-simvolnyi-displei-na-baze-hd44780/"&gt;–¥–∏—Å–ø–ª–µ–µ–º&lt;/a&gt; –∏ &lt;a href="https://mazko.github.io/blog/posts/2017/01/30/picsimjs-matrichnaia-klaviatura/"&gt;–º–∞—Ç—Ä–∏—á–Ω–æ–π&lt;/a&gt; –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –æ–ø–∏—Å—ã–≤–∞–ª–∏—Å—å –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª–µ.&lt;/p&gt;
&lt;p&gt;–î–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –≤—ã—Ä–∞–∂–µ–Ω–∏–π –∏–∑ –æ–±—ã—á–Ω–æ–π (–Ω–∞–ø—Ä–∏–º–µ—Ä &lt;code&gt;3 + 4 * (2 - 1)&lt;/code&gt;) –∏–Ω—Ñ–∏–∫—Å–Ω–æ–π –Ω–æ—Ç–∞—Ü–∏–∏ –≤ –ø–æ—Å—Ç—Ñ–∏–∫—Å–Ω—É—é (RPN) —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∞–ª–≥–æ—Ä–∏—Ç–º ¬´—Å–æ—Ä—Ç–∏—Ä–æ–≤–æ—á–Ω–∞—è —Å—Ç–∞–Ω—Ü–∏—è¬ª, –∫–æ—Ç–æ—Ä—ã–π —Ç–∞–∫ –∂–µ –∫–∞–∫ –∏ RPN –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ —Å—Ç–µ–∫–µ –∏ –ª–µ–≥–∫–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω –ø–æ–¥ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã. –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –Ω–µ—Å–ª–æ–∂–Ω–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∞—Ç—å –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –¥–ª—è –æ–±—ã—á–Ω—ã–π –ª—é–¥–µ–π.&lt;/p&gt;
&lt;p&gt;–ï—â—ë —Ä–∞–∑ —Å—Å—ã–ª–∫–∞ –Ω–∞ &lt;a href="https://mazko.github.io/blog/posts/2017/02/14/picsimjs-kalkuliator-i-obratnaia-polskaia-zapis/rpn.zip"&gt;–∏—Å—Ö–æ–¥–Ω–∏–∫–∏&lt;/a&gt; RPN-–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞. &lt;/p&gt;</content><category term="picsim"></category><category term="re2c"></category><category term="regex"></category></entry><entry><title>PICSim.js - —Å–æ–ø—Ä–æ–≥—Ä–∞–º–º—ã –∏ –ø—Ä–æ—Å—Ç–µ–π—à–∞—è –º–Ω–æ–≥–æ–∑–∞–¥–∞—á–Ω–æ—Å—Ç—å</title><link href="https://mazko.github.io/blog/posts/2017/02/05/picsimjs-soprogrammy-i-prosteishaia-mnogozadachnost/" rel="alternate"></link><published>2017-02-05T00:00:00+02:00</published><updated>2017-02-05T00:00:00+02:00</updated><author><name>Oleg Mazko</name></author><id>tag:mazko.github.io,2017-02-05:/blog/posts/2017/02/05/picsimjs-soprogrammy-i-prosteishaia-mnogozadachnost/</id><summary type="html">&lt;p&gt;–ú–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã –≤—ã–ø–æ–ª–Ω—è—é—Ç —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É –º–∞—à–∏–Ω–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –≤ –∫–∞–∂–¥—ã–π –º–æ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏ (–º–Ω–æ–≥–æ—è–¥–µ—Ä–Ω—ã–µ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã —è –ø–æ–∫–∞ –Ω–µ –≤—Å—Ç—Ä–µ—á–∞–ª). –¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ –ø—Ä–æ—Å—Ç–µ–π—à–∞—è &lt;a href="https://mazko.github.io/blog/posts/2017/01/13/simuliatsiia-mikrokontrollerov-picsimjs/"&gt;–ø—Ä–æ–≥—Ä–∞–º–º–∞&lt;/a&gt; –¥–ª—è –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ —ç—Ç–æ &lt;em&gt;—Å—É–ø–µ—Ä—Ü–∏–∫–ª&lt;/em&gt; - –æ–¥–Ω–∞ —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ &lt;code&gt;main&lt;/code&gt; —Å –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–º —Ü–∏–∫–ª–æ–º, –≥–¥–µ –∫—Ä—É—Ç–∏—Ç—Å—è –∫–∞–∫–∞—è-—Ç–æ –∑–∞–¥–∞—á–∞. –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤ —Ç–∞–∫–∂–µ –ø—Ä–µ–¥—É—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç –º–µ—Ö–∞–Ω–∏–∑–º &lt;a href="https://mazko.github.io/blog/posts/2017/01/16/picsimjs-semisegmentnyi-indikator-i-preryvaniia/"&gt;–ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–π&lt;/a&gt; - –Ω–µ–º–µ–¥–ª–µ–Ω–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–æ–±—ã—Ç–∏–π, —á—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ä–µ—à–∞—Ç—å –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–µ –∑–∞–¥–∞—á–∏ ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;–ú–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã –≤—ã–ø–æ–ª–Ω—è—é—Ç —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É –º–∞—à–∏–Ω–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –≤ –∫–∞–∂–¥—ã–π –º–æ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏ (–º–Ω–æ–≥–æ—è–¥–µ—Ä–Ω—ã–µ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã —è –ø–æ–∫–∞ –Ω–µ –≤—Å—Ç—Ä–µ—á–∞–ª). –¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ –ø—Ä–æ—Å—Ç–µ–π—à–∞—è &lt;a href="https://mazko.github.io/blog/posts/2017/01/13/simuliatsiia-mikrokontrollerov-picsimjs/"&gt;–ø—Ä–æ–≥—Ä–∞–º–º–∞&lt;/a&gt; –¥–ª—è –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ —ç—Ç–æ &lt;em&gt;—Å—É–ø–µ—Ä—Ü–∏–∫–ª&lt;/em&gt; - –æ–¥–Ω–∞ —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ &lt;code&gt;main&lt;/code&gt; —Å –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–º —Ü–∏–∫–ª–æ–º, –≥–¥–µ –∫—Ä—É—Ç–∏—Ç—Å—è –∫–∞–∫–∞—è-—Ç–æ –∑–∞–¥–∞—á–∞. –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤ —Ç–∞–∫–∂–µ –ø—Ä–µ–¥—É—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç –º–µ—Ö–∞–Ω–∏–∑–º &lt;a href="https://mazko.github.io/blog/posts/2017/01/16/picsimjs-semisegmentnyi-indikator-i-preryvaniia/"&gt;–ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–π&lt;/a&gt; - –Ω–µ–º–µ–¥–ª–µ–Ω–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–æ–±—ã—Ç–∏–π, —á—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ä–µ—à–∞—Ç—å –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–µ –∑–∞–¥–∞—á–∏, –ø—Ä–∏—á—ë–º –≤ —Å–ª—É—á–∞–µ PIC18 —ç—Ç–æ –¥–∞–∂–µ –¥–≤—É—Ö—É—Ä–æ–≤–Ω–µ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–π. –û–±—ã—á–Ω–æ –≤—Å–µ–≥–æ —ç—Ç–æ–≥–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ—Å—Ç–æ–π –ª–æ–≥–∏–∫–∏, –æ–¥–Ω–∞–∫–æ –ø—Ä–∏ —É–≤–µ–ª–∏—á–µ–Ω–∏–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –∫ —Å–∏—Å—Ç–µ–º–µ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥ —Ç–µ—Ä—è–µ—Ç –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å. –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π —Å–æ—Å—Ç–æ–∏—Ç –≤ —Ç–æ–º, —á—Ç–æ–±—ã –≤—ã–¥–µ–ª–∏—Ç—å –∏ –æ—Ç–¥–µ–ª–∏—Ç—å –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–µ –ø–æ–¥–∑–∞–¥–∞—á–∏ –¥—Ä—É–≥ –æ—Ç –¥—Ä—É–≥–∞ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–µ–∫–∏–π –ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã–π –∫–∞—Ä–∫–∞—Å, –∫–æ—Ç–æ—Ä—ã–π —É–ø—Ä–∞–≤–ª—è–µ—Ç —ç—Ç–∏–º–∏ –ø–æ–¥–∑–∞–¥–∞—á–∞–º–∏ —Å–æ–≥–ª–∞—Å–Ω–æ –Ω–∞–±–æ—Ä—É —è—Å–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö –ø—Ä–∞–≤–∏–ª. –ü—Ä–∏ —Ç–∞–∫–æ–º –ø–æ–¥—Ö–æ–¥–µ –º–æ–≥—É—Ç –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –Ω–µ—Å–∫–æ–ª—å–∫–æ (–ø—Å–µ–≤–¥–æ)–ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –∑–∞–¥–∞—á, —Å–æ–æ–±—â–∞—é—â–∏—Ö—Å—è –º–µ–∂–¥—É —Å–æ–±–æ–π –∏ —É–ø—Ä–∞–≤–ª—è–µ–º—ã—Ö –µ–¥–∏–Ω—ã–º —è–¥—Ä–æ–º. –≠—Ç–æ—Ç –ø–æ–¥—Ö–æ–¥ –∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é - RTOS (–æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏), –∞ –º–Ω–æ–≥–æ–∑–∞–¥–∞—á–Ω–æ—Å—Ç—å –±—ã–≤–∞–µ—Ç 2 –≤–∏–¥–æ–≤:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;–∫–æ–æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è - —Å–ª–µ–¥—É—é—â–∞—è –∑–∞–¥–∞—á–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ —Ç–µ–∫—É—â–∞—è –∑–∞–¥–∞—á–∞ —è–≤–Ω–æ –ø–µ—Ä–µ–¥–∞—Å—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;–≤—ã—Ç–µ—Å–Ω—è—é—â–∞—è - –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã —Å–∞–º –ø–µ—Ä–µ–¥–∞–µ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç –æ–¥–Ω–æ–π –∑–∞–¥–∞—á–∏ –¥—Ä—É–≥–æ–π&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;–ö–æ–æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –º–Ω–æ–≥–æ–∑–∞–¥–∞—á–Ω–æ—Å—Ç—å —è–≤–ª—è–µ—Ç—Å—è –Ω–∞–∏–±–æ–ª–µ–µ –ø—Ä–æ—Å—Ç–æ–π —Å —Ç–æ—á–∫–∏ –∑—Ä–µ–Ω–∏—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∏ —Ö–æ—Ä–æ—à–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Å–ª–∞–±—ã—Ö –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mazko.github.io/blog/posts/2017/02/05/picsimjs-soprogrammy-i-prosteishaia-mnogozadachnost/config-4620.h"&gt;config.h&lt;/a&gt; | &lt;a href="https://mazko.github.io/blog/posts/2017/02/05/picsimjs-soprogrammy-i-prosteishaia-mnogozadachnost/coroutine.h"&gt;coroutine.h&lt;/a&gt; | &lt;a href="https://mazko.github.io/blog/posts/2017/02/05/picsimjs-soprogrammy-i-prosteishaia-mnogozadachnost/main.hex"&gt;hex&lt;/a&gt; | &lt;a href="http://mazko.github.io/picsim.js/56fd34dfd1c731a3d6eee89ccd6ee25b"&gt;picsim.js&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2017/02/05/picsimjs-soprogrammy-i-prosteishaia-mnogozadachnost/ui.gif" style="width:100%; border:1px solid #ddd;"&gt;&lt;/p&gt;
&lt;p&gt;–ü—Ä–æ—Å—Ç–µ–π—à—É—é –∫–æ–æ–ø–µ—Ä–∞—Ç–∏–≤–Ω—É—é –º–Ω–æ–≥–æ–∑–∞–¥–∞—á–Ω–æ—Å—Ç—å –≤ —á–∏—Å—Ç–æ–º –° –º–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Å –ø–æ–º–æ—â—å—é &lt;a href="http://www.chiark.greenend.org.uk/~sgtatham/coroutines.html" rel="nofollow"&gt;—Å–æ–ø—Ä–æ–≥—Ä–∞–º–º&lt;/a&gt;(coroutine). –≠—Ç–æ –æ—á–µ–Ω—å –ø—Ä–∞–∫—Ç–∏—á–Ω–∞—è –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è, –≥–¥–µ –∫–∞–∂–¥–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–≤–æ—ë –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–µ &lt;a href="https://mazko.github.io/blog/posts/2012/10/09/avtomat-s-konechnym-chislom-sostoianii/"&gt;—Å–æ—Å—Ç–æ—è–Ω–∏–µ&lt;/a&gt; –º–µ–∂–¥—É –≤—ã–∑–æ–≤–∞–º–∏, —Ö–∏—Ç—Ä–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ &lt;code&gt;switch&lt;/code&gt; –∏ –ø–∞—Ä–æ—á–∫–∏ –º–∞–∫—Ä–æ—Å–æ–≤ –¥–∞—ë—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–∏–æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å—Å—è, –∞ –ø—Ä–∏ –ø–æ—Å–ª–µ–¥—É—é—â–µ–º –≤—ã–∑–æ–≤–µ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –º–µ—Å—Ç–∞ - –∏–º–µ–Ω–Ω–æ —Ç–∞–∫ –∏ –≤–µ–¥—É—Ç —Å–µ–±—è —Å–æ–ø—Ä–æ–≥—Ä–∞–º–º—ã.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;task_r.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;xc.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdint.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;coroutine.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#define YIELD scrReturnV &lt;/span&gt;&lt;span class="c1"&gt;// just readability&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;task_leds_r&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;scrBegin&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// infinite task loop&lt;/span&gt;
  &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// chasing leds&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;PORTA&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;=&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="mh"&gt;0x80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;PORTA&lt;/span&gt; &lt;span class="o"&gt;|=&lt;/span&gt; &lt;span class="mh"&gt;0x80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;PORTC&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PORTC&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;TRISC&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;240&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
      &lt;span class="n"&gt;YIELD&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="cm"&gt;/* cooperate delay */&lt;/span&gt; 
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="n"&gt;scrFinishV&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;task_l.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;xc.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdint.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;coroutine.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#define YIELD scrReturnV &lt;/span&gt;&lt;span class="c1"&gt;// just readability&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;task_leds_l&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;scrBegin&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// infinite task loop&lt;/span&gt;
  &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// chasing leds&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;PORTA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PORTA&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0x80&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;240&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
      &lt;span class="n"&gt;YIELD&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="cm"&gt;/* cooperate delay */&lt;/span&gt; 
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// blink random leds&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="n"&gt;random6&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="n"&gt;random6&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="cm"&gt;/* 0..6 */&lt;/span&gt; &lt;span class="n"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;random6&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PORTA&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="mh"&gt;0x80&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;PORTA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PORTA&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0x80&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;random6&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;240&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
          &lt;span class="n"&gt;YIELD&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="cm"&gt;/* cooperate delay */&lt;/span&gt; 
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="n"&gt;scrFinishV&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;main.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt;  xc8 --chip=18f4620 main.c&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;xc.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;config-4620.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="c1"&gt;// non-reentrant tasks examples&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;task_l.c&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;task_r.c&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// leds&lt;/span&gt;
  &lt;span class="n"&gt;PORTA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TRISA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;PORTC&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TRISC&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mh"&gt;0x18&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// simplest cooperative scheduler&lt;/span&gt;
  &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;task_leds_l&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;task_leds_r&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–¢—É—Ç –¥–≤–µ –∑–∞–¥–∞—á–∏ - –ª–µ–≤—ã–µ —Å–≤–µ—Ç–æ–¥–∏–æ–¥—ã –∏ –ø—Ä–∞–≤—ã–µ. –ö–∞–∂–¥–∞—è –∑–∞–¥–∞—á–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∏–∑ —Å–µ–±—è –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª - –∏ –±—É–¥—å —ç—Ç–æ –æ–±—ã—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤—Å—ë –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–Ω–æ–µ –≤—Ä–µ–º—è —É—à–ª–æ –±—ã –Ω–∞ &lt;code&gt;task_leds_l()&lt;/code&gt;, —Ç–æ–≥–¥–∞ –∫–∞–∫ –¥–æ &lt;code&gt;task_leds_r()&lt;/code&gt; –æ—á–µ—Ä–µ–¥—å –±—ã —Ç–∞–∫ –∏ –Ω–µ –¥–æ—à–ª–∞. –ù–æ –º—ã –∏–º–µ–µ–º –¥–µ–ª–æ –Ω–µ —Å –ø—Ä–æ—Å—Ç—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏, –∞ —Å–æ–ø—Ä–æ–≥—Ä–∞–º–º–∞–º–∏ - –º–∞–∫—Ä–æ—Å YIELD –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞—Ç–Ω–æ –≤—ã–∑—ã–≤–∞—é—â–µ–π —Ñ—É–Ω–∫—Ü–∏–∏, –∞ –æ–Ω–∞ –≤ —Å–≤–æ—é –æ—á–µ—Ä–µ–¥—å –ø—Ä–æ—Å—Ç–æ –ø–æ–æ—á–µ—Ä—ë–¥–Ω–æ –≤—ã–∑—ã–≤–∞–µ—Ç –∑–∞–¥–∞—á–∏, –≤—ã–ø–æ–ª–Ω—è—è —Ç–µ–º —Å–∞–º—ã–º —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–æ—Å—Ç–µ–π—à–µ–≥–æ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞.&lt;/p&gt;
&lt;p&gt;–ü—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å —Å–æ–ø—Ä–æ–≥—Ä–∞–º–º–∞–º–∏ —Å–ª–µ–¥—É–µ—Ç –æ—Å–æ–±–æ–µ –≤–Ω–∏–º–∞–Ω–∏–µ —É–¥–µ–ª—è—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º. –ï—Å–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–æ–ª–∂–Ω–∞ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —Å–≤–æ—ë –∑–Ω–∞—á–µ–Ω–∏–µ –º–µ–∂–¥—É –≤—ã–∑–æ–≤–∞–º–∏, —Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–±—ä—è–≤–ª—è—Ç—å –µ—ë &lt;code&gt;static&lt;/code&gt; - –Ω–∞–ø—Ä–∏–º–µ—Ä &lt;code&gt;static uint8_t i, port&lt;/code&gt;, –≤ —Ç–æ –≤—Ä–µ–º—è –∫–∞–∫ –∫ &lt;code&gt;uint8_t random6&lt;/code&gt; —ç—Ç–æ —Å–∞–º–∞—è –æ–±—ã—á–Ω–∞—è (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è) –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è.&lt;/p&gt;
&lt;p&gt;–ê —á—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç, –µ—Å–ª–∏ –∫ —ç—Ç–∏–º –¥–≤—É–º –∑–∞–¥–∞—á–∞–º –¥–æ—Å—ã–ø–∞—Ç—å –µ—â—ë –ø–∞—Ä–æ—á–∫—É ? –û—á–µ–≤–∏–¥–Ω–æ, —á—Ç–æ —Ç–æ–≥–¥–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã –ø—Ä–∏–¥—ë—Ç—Å—è –ø–µ—Ä–µ–±–∏—Ä–∞—Ç—å –∑–∞–Ω–æ–≤–æ:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// delay&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;240&lt;/span&gt; &lt;span class="cm"&gt;/* new value */&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="n"&gt;YIELD&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="cm"&gt;/* cooperate delay */&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ò —ç—Ç–æ –ø–ª–æ—Ö–æ - —Ç–∞–∫–∏–µ –ø—Ä–æ–µ–∫—Ç—ã —Ç—è–∂–µ–ª–æ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—Ç—å –∏ —Ä–∞–∑–≤–∏–≤–∞—Ç—å. –°—É—â–µ—Å—Ç–≤—É–µ—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–æ—Å—Ç–æ–π —Å–ø–æ—Å–æ–± –∏–∑–±–µ–∂–∞—Ç—å —ç—Ç–æ–≥–æ –Ω–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞, –µ—Å–ª–∏ –ø—Ä–∏–≤—è–∑–∞—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã –∫ –∫–∞–∫–æ–º—É-–Ω–∏–±—É–¥—å –∞–ø–ø–∞—Ä–∞—Ç–Ω–æ–º—É —Ç–∞–π–º–µ—Ä—É. –í —Å–ª–µ–¥—É—é—â–µ–º –ø—Ä–∏–º–µ—Ä–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ç–∞–π–º–µ—Ä, –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –æ—Ç—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –≤—Ä–µ–º—è —Å –º–æ–º–µ–Ω—Ç–∞ –≤–∫–ª—é—á–µ–Ω–∏—è. –≠—Ç–æ –≤—Ä–µ–º—è –Ω–µ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤—ã–ø–æ–ª–Ω—è–µ–º—ã—Ö –∑–∞–¥–∞—á.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mazko.github.io/blog/posts/2017/02/05/picsimjs-soprogrammy-i-prosteishaia-mnogozadachnost/main2.hex"&gt;hex&lt;/a&gt; | &lt;a href="http://mazko.github.io/picsim.js/a8ff2394bb5884738bbee3ce613be1ce"&gt;picsim.js&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;isr.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;xc.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdint.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="c1"&gt;// up time since the start of the system&lt;/span&gt;
&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;uint32_t&lt;/span&gt; &lt;span class="n"&gt;_uptime&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// http://www.microchip.com/forums/m890404.aspx&lt;/span&gt;
&lt;span class="kt"&gt;uint32_t&lt;/span&gt; &lt;span class="nf"&gt;get_uptime&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;GIE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;GIE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// critical section&lt;/span&gt;
    &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;uint32_t&lt;/span&gt; &lt;span class="n"&gt;copy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_uptime&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;GIE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// critical section end&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;_uptime&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// High priority interrupt&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;interrupt&lt;/span&gt; &lt;span class="nf"&gt;isr&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;INTCONbits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T0IF&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;INTCONbits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T0IE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;                               
    &lt;span class="n"&gt;INTCONbits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T0IF&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;_uptime&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ü–æ—Å–∫–æ–ª—å–∫—É —Ä–∞–∑—Ä—è–¥–Ω–æ—Å—Ç—å —Å—á—ë—Ç—á–∏–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ &lt;code&gt;uint32_t&lt;/code&gt; –±–æ–ª—å—à–µ —Ä–∞–∑—Ä—è–¥–Ω–æ—Å—Ç–∏ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ - –æ–ø–µ—Ä–∞—Ü–∏–∏ –Ω–∞–¥ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π &lt;code&gt;_uptime&lt;/code&gt; –Ω–µ –∞—Ç–æ–º–∞—Ä–Ω—ã, –ø–æ—ç—Ç–æ–º—É –≤ —Ñ—É–Ω–∫—Ü–∏—é &lt;code&gt;get_uptime()&lt;/code&gt; –≤–≤–æ–¥–∏—Ç—Å—è –ø—Ä–æ—Å—Ç–µ–π—à–∏–π –º–µ—Ö–∞–Ω–∏–∑–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ GIE. –¢–µ–ø–µ—Ä—å –≤–æ –≤—Å–µ—Ö –∑–∞–¥–∞—á–∞—Ö –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–≤ –±–æ–ª–µ–µ —Ü–µ–ª–µ—Å–æ–æ–±—Ä–∞–∑–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ñ—É–Ω–∫—Ü–∏–µ–π &lt;code&gt;get_uptime()&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;uint32_t&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// delay&lt;/span&gt;
&lt;span class="c1"&gt;// https://arduino.stackexchange.com/a/12588&lt;/span&gt;
&lt;span class="c1"&gt;// while (millis() &amp;lt; start + ms) ;  // BUGGY version&lt;/span&gt;
&lt;span class="c1"&gt;// while (millis() - start &amp;lt; ms) ;  // CORRECT version&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_uptime&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="n"&gt;get_uptime&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;YIELD&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="cm"&gt;/* cooperate delay */&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;main.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt;  xc8 --chip=18f4620 main.c isr.c&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;xc.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;config-4620.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="c1"&gt;// non-reentrant tasks examples&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;task_l.c&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;task_r.c&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// leds&lt;/span&gt;
  &lt;span class="n"&gt;PORTA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TRISA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;PORTC&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TRISC&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mh"&gt;0x18&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// TMR0 high priority Interrupt, 8 bit, 1:32 Prescale&lt;/span&gt;
  &lt;span class="n"&gt;RCONbits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IPEN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;T0CON&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;T0CONbits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T08BIT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;T0CONbits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T0PS2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;INTCONbits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T0IE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;INTCONbits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T0IF&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;INTCON2bits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TMR0IP&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        
  &lt;span class="n"&gt;T0CONbits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TMR0ON&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;INTCONbits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GIE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// simplest cooperative scheduler&lt;/span&gt;
  &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;task_leds_l&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;task_leds_r&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ò–Ω–æ–≥–¥–∞ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –æ–±–º–µ–Ω–∏–≤–∞—Ç—å—Å—è –¥–∞–Ω–Ω—ã–º–∏ –º–µ–∂–¥—É –∑–∞–¥–∞—á–∞–º–∏. –°–∞–º—ã–π –ø—Ä–æ—Å—Ç–æ–π —Å–ø–æ—Å–æ–± ‚Äî –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–±—â–∏–µ –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –¥–æ—Å—Ç—É–ø –∫ –∫–æ—Ç–æ—Ä—ã–º –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∑–∞–¥–∞—á. –ü—Ä–∏—á—ë–º –≤ —Å–ª—É—á–∞–µ —Å –∫–æ–æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –º–Ω–æ–≥–æ–∑–∞–≥–∞–¥–æ—á–Ω–æ—Å—Ç—å—é –ø—Ä–æ–±–ª–µ–º —Å –∞—Ç–æ–º–∞—Ä–Ω–æ—Å—Ç—å—é —É —Ç–∞–∫–∏—Ö –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –±—ã—Ç—å –Ω–µ –¥–æ–ª–∂–Ω–æ –≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç –≤—ã—Ç–µ—Å–Ω—è—é—â–µ–π –º–Ω–æ–≥–æ–∑–∞–¥–∞—á–Ω–æ—Å—Ç–∏.&lt;/p&gt;
&lt;p&gt;–ù–µ—Å–º–æ—Ç—Ä—è –Ω–∞ —Å–≤–æ—é –ø—Ä–æ—Å—Ç–æ—Ç—É –æ–ø–∏—Å–∞–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏–∑—É–µ—Ç—Å—è –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–π –ø–µ—Ä–µ–Ω–æ—Å–∏–º–æ—Å—Ç—å—é - —Ç—É—Ç —á–∏—Å—Ç—ã–π –° –±–µ–∑ –∞—Å—Å–µ–º–±–ª–µ—Ä–Ω—ã—Ö –≤—Å—Ç–∞–≤–æ–∫ –∏ –æ–Ω–æ –≤–ø–æ–ª–Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ä–µ–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ –∏ –æ—Å–æ–±–µ–Ω–Ω–æ —Ö–æ—Ä–æ—à–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –æ—á–µ–Ω—å —Å–ª–∞–±—ã—Ö –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mazko.github.io/blog/posts/2017/02/14/picsimjs-kalkuliator-i-obratnaia-polskaia-zapis/"&gt;–î–∞–ª–µ–µ&lt;/a&gt; –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –≤—ã—Ä–∞–∂–µ–Ω–∏–π –≤ –æ–±—Ä–∞—Ç–Ω–æ–π –ø–æ–ª—å—Å–∫–æ–π –Ω–æ—Ç–∞—Ü–∏–∏.&lt;/p&gt;</content><category term="picsim"></category><category term="RTOS"></category><category term="FSM"></category></entry><entry><title>PICSim.js - —á–∞—Å—ã —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ DS1307</title><link href="https://mazko.github.io/blog/posts/2017/02/02/picsimjs-chasy-realnogo-vremeni-ds1307/" rel="alternate"></link><published>2017-02-02T00:00:00+02:00</published><updated>2017-02-02T00:00:00+02:00</updated><author><name>Oleg Mazko</name></author><id>tag:mazko.github.io,2017-02-02:/blog/posts/2017/02/02/picsimjs-chasy-realnogo-vremeni-ds1307/</id><summary type="html">&lt;p&gt;–ú–∏–∫—Ä–æ—Å—Ö–µ–º–∞ DS1307 –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∏–∑ —Å–µ–±—è —á–∞—Å–∏–∫–∏ —Å –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–º. –í—Å—ë :) –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ö–µ–º–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –∫–≤–∞—Ä—Ü–∞ —Å —á–∞—Å—Ç–æ—Ç–æ–π 32768 –ì—Ü –∏ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –ø–∏—Ç–∞–Ω–∏—è. –ï—Å–ª–∏ –≤–µ—Ä–∏—Ç—å –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—é, –±–∞—Ç–∞—Ä–µ–π–∫–∏ 48–º–ê—á –¥–æ–ª–∂–Ω–æ —Ö–≤–∞—Ç–∏—Ç—å –Ω–∞ 10 –ª–µ—Ç –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–π —Ä–∞–±–æ—Ç—ã —á–∞—Å–æ–≤. –û–±–º–µ–Ω –¥–∞–Ω–Ω—ã–º–∏ –º–µ–∂–¥—É DS1307 –∏ –≤–Ω–µ—à–Ω–∏–º –º–∏—Ä–æ–º –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–æ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–º—É –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É I2C, –∫–æ—Ç–æ—Ä—ã–π –∫–∞–∫ ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;–ú–∏–∫—Ä–æ—Å—Ö–µ–º–∞ DS1307 –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∏–∑ —Å–µ–±—è —á–∞—Å–∏–∫–∏ —Å –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–º. –í—Å—ë :) –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ö–µ–º–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –∫–≤–∞—Ä—Ü–∞ —Å —á–∞—Å—Ç–æ—Ç–æ–π 32768 –ì—Ü –∏ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –ø–∏—Ç–∞–Ω–∏—è. –ï—Å–ª–∏ –≤–µ—Ä–∏—Ç—å –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—é, –±–∞—Ç–∞—Ä–µ–π–∫–∏ 48–º–ê—á –¥–æ–ª–∂–Ω–æ —Ö–≤–∞—Ç–∏—Ç—å –Ω–∞ 10 –ª–µ—Ç –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–π —Ä–∞–±–æ—Ç—ã —á–∞—Å–æ–≤. –û–±–º–µ–Ω –¥–∞–Ω–Ω—ã–º–∏ –º–µ–∂–¥—É DS1307 –∏ –≤–Ω–µ—à–Ω–∏–º –º–∏—Ä–æ–º –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–æ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–º—É –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É I2C, –∫–æ—Ç–æ—Ä—ã–π –∫–∞–∫ –∏–∑–≤–µ—Å—Ç–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –≤—Å–µ–≥–æ –¥–≤–µ –¥–≤—É–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –ª–∏–Ω–∏–∏ —Å–≤—è–∑–∏ (SDA –∏ SCL), –ø—Ä–∏ —ç—Ç–æ–º –Ω–∞ –æ–¥–Ω–æ–π I2C —à–∏–Ω–µ –º–æ–∂–µ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –¥–æ 127 —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤. –ú–∏–∫—Ä–æ—Å—Ö–µ–º–∞ DS1307 –≤ —Ç–µ—Ä–º–∏–Ω–∞—Ö I2C –≤—Å–µ–≥–¥–∞ —è–≤–ª—è–µ—Ç—Å—è –≤–µ–¥–æ–º–æ–π (Slave), —Ç.–µ. –Ω–µ –º–æ–∂–µ—Ç –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞—Ç—å –æ–±–º–µ–Ω –¥–∞–Ω–Ω—ã–º–∏. –í–µ–¥—É—â–∏–º (Master) –≤ –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ –±—É–¥–µ—Ç –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä PIC18F4620, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–∞ –±–æ—Ä—Ç—É –∏–º–µ–µ—Ç—Å—è –∞–ø–ø–∞—Ä–∞—Ç–Ω—ã–π I2C.&lt;/p&gt;
&lt;p&gt;–ö –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—é –Ω–∞—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è &lt;a href="https://www.sparkfun.com/datasheets/Components/DS1307.pdf" rel="nofollow"&gt;–æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è&lt;/a&gt; –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –Ω–∞ DS1307. –í —Å–ª—É—á–∞–µ —Å —à–∏–Ω–æ–π I2C –≤ –ø–µ—Ä–≤—É—é –æ—á–µ—Ä–µ–¥—å –≤–∞–∂–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ - –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —á–∞—Å—Ç–æ—Ç–∞ —Ç–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è SCL (–æ—Ç —ç—Ç–æ–≥–æ –∑–∞–≤–∏—Å–∏—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö), —Ñ–∏–∑–∏—á–µ—Å–∫–∏–π –∞–¥—Ä–µ—Å –º–∏–∫—Ä–æ—Å—Ö–µ–º—ã (–∏–∑ 127 –≤–æ–∑–º–æ–∂–Ω—ã—Ö) –Ω–∞ —à–∏–Ω–µ –∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –∫–∞—Ä—Ç–∞ –ø–∞–º—è—Ç–∏ (–∞–¥—Ä–µ—Å–∞ —Ä–µ–≥–∏—Å—Ç—Ä–æ–≤). –¢–∞–∫ –∫–∞–∫ I2C —è–≤–ª—è–µ—Ç—Å—è &lt;em&gt;—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–º&lt;/em&gt; –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º, —Ç–æ –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –∏–º–µ–Ω–Ω–æ –≤–µ—Ä—Ö–Ω—è—è –≥—Ä–∞–Ω–∏—Ü–∞ —á–∞—Å—Ç–æ—Ç—ã, —Ç–æ–≥–¥–∞ –∫–∞–∫ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –æ–±–º–µ–Ω–∞ –∑–∞–¥–∞—ë—Ç—Å—è –º–∞—Å—Ç–µ—Ä–æ–º –∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –ª—é–±–æ–π –∏ –¥–∞–∂–µ –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π - –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –º–æ–∂–µ—Ç —Å–ø–æ–∫–æ–π–Ω–æ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç—å—Å—è –Ω–∞ –±–æ–ª–µ–µ –≤–∞–∂–Ω—ã–µ –∑–∞–¥–∞—á–∏ –±–µ–∑ –ø–æ—Ç–µ—Ä–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —à–∏–Ω–µ. –≠—Ç–æ —Å–µ—Ä—å—ë–∑–Ω–æ–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ –ø–µ—Ä–µ–¥–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–º–∏.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mazko.github.io/blog/posts/2017/02/02/picsimjs-chasy-realnogo-vremeni-ds1307/config-4620.h"&gt;config.h&lt;/a&gt; | &lt;a href="https://mazko.github.io/blog/posts/2017/02/02/picsimjs-chasy-realnogo-vremeni-ds1307/i2c-hw.c"&gt;i2c-hw.c&lt;/a&gt; | &lt;a href="https://mazko.github.io/blog/posts/2017/01/27/picsimjs-simvolnyi-displei-na-baze-hd44780/"&gt;liquid-crystal.c&lt;/a&gt; | &lt;a href="https://mazko.github.io/blog/posts/2017/02/02/picsimjs-chasy-realnogo-vremeni-ds1307/main.hex"&gt;hex&lt;/a&gt; | &lt;a href="http://mazko.github.io/picsim.js/1bcc58df4b0494fada5bfdc2638e8034"&gt;picsim.js&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2017/02/02/picsimjs-chasy-realnogo-vremeni-ds1307/ui.gif" style="width:100%; border:1px solid #ddd;"&gt;&lt;/p&gt;
&lt;p&gt;–†–∞–±–æ—Ç–∞ —Å —Å–∏–º–≤–æ–ª—å–Ω—ã–º –¥–∏—Å–ø–ª–µ–µ–º –æ–ø–∏—Å—ã–≤–∞–ª–∞—Å—å –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–º &lt;a href="https://mazko.github.io/blog/posts/2017/01/27/picsimjs-simvolnyi-displei-na-baze-hd44780/"&gt;–º–∞—Ç–µ—Ä–∏–∞–ª–µ&lt;/a&gt;. –°–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ –¥–µ–ª–∞–ª–∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã —Å –∞–ø–ø–∞—Ä–∞—Ç–Ω—ã–º I2C –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ –ø–æ–º–µ—â–µ–Ω—ã –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ñ–∞–π–ª &lt;a href="https://mazko.github.io/blog/posts/2017/02/02/picsimjs-chasy-realnogo-vremeni-ds1307/i2c-hw.c"&gt;i2c-hw.c&lt;/a&gt;. –ß—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ DS1307 –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ —Ñ—É–Ω–∫—Ü–∏–∏ rtc_r. –ü–æ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏ I2C –≤–µ–¥–æ–º–æ–º—É —Ä–∞–∑—Ä–µ—à–∞–µ—Ç—Å—è –ø—Ä–∏–¥–µ—Ä–∂–∏–≤–∞—Ç—å (–≤—ã—Å—Ç–∞–≤–ª—è—Ç—å –≤ 0) –ª–∏–Ω–∏—é SCL, —Ç–µ–º —Å–∞–º—ã–º —Å–∏–≥–Ω–∞–ª–∏–∑–∏—Ä—É—è –æ –Ω–µ–≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –æ–±–º–µ–Ω—É –¥–∞–Ω–Ω—ã–º–∏ - –ø–æ—ç—Ç–æ–º—É —Ñ—É–Ω–∫—Ü–∏—è &lt;code&gt;i2c_idle&lt;/code&gt; –∂–¥—ë—Ç –ø–æ–∫–∞ –Ω–µ –æ—Ç–ø—É—Å—Ç—è—Ç SCL. –° –∫–∞–∂–¥—ã–º —á—Ç–µ–Ω–∏–µ–º –æ—á–µ—Ä–µ–¥–Ω–æ–≥–æ –±–∞–π—Ç–∞ &lt;code&gt;i2c_rb&lt;/code&gt; –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∞–¥—Ä–µ—Å –∫–∞—Ä—Ç—ã –ø–∞–º—è—Ç–∏ DS1307 –∏–Ω–∫—Ä–∏–º–∏–Ω–∏—Ä—É–µ—Ç—Å—è, —á—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ —Å—á–∏—Ç—ã–≤–∞—Ç—å –º–∏–Ω—É—Ç—ã...–≥–æ–¥ –±–µ–∑ —è–≤–Ω–æ–≥–æ —É–∫–∞–∑—ã–≤–∞–Ω–∏—è –∏—Ö –∞–¥—Ä–µ—Å–æ–≤ - –Ω—É–∂–µ–Ω —Ç–æ–ª—å–∫–æ –Ω–∞—á–∞–ª—å–Ω—ã–π –∞–¥—Ä–µ—Å —Å–µ–∫—É–Ω–¥. –í —Å–µ—Ç–∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ I2C, –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π &lt;code&gt;i2c_open&lt;/code&gt;, &lt;code&gt;i2c_start&lt;/code&gt; –∏ —Ç.–¥. –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø—Ä–µ–¥–µ–ª—å–Ω–æ —è—Å–Ω—ã–º.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;rtc_r.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdint.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdbool.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;time.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;i2c-hw.c&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="nf"&gt;bcd2dec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="n"&gt;bcd&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;bcd&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bcd&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// http://microchip.wikidot.com/i2c:sequential-read&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;rtc_r&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;tm&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;i2c_open&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;              &lt;span class="c1"&gt;// Open I2C module as master, low speed&lt;/span&gt;

  &lt;span class="n"&gt;i2c_idle&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;              &lt;span class="c1"&gt;// Ensure I2C is idle&lt;/span&gt;
  &lt;span class="n"&gt;i2c_start&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;        &lt;span class="c1"&gt;// I2C Start condition&lt;/span&gt;
  &lt;span class="n"&gt;i2c_wb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;0xD0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;            &lt;span class="c1"&gt;// DS1307 slave I2C address + I2C write flag&lt;/span&gt;
  &lt;span class="n"&gt;i2c_idle&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;              &lt;span class="c1"&gt;// Ensure I2C is idle&lt;/span&gt;
  &lt;span class="n"&gt;i2c_wb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;               &lt;span class="c1"&gt;// Sequential read start address&lt;/span&gt;

  &lt;span class="n"&gt;i2c_idle&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;              &lt;span class="c1"&gt;// Ensure I2C is idle&lt;/span&gt;
  &lt;span class="n"&gt;i2c_start&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;         &lt;span class="c1"&gt;// Restart condition&lt;/span&gt;
  &lt;span class="n"&gt;i2c_wb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;0xD1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;            &lt;span class="c1"&gt;// DS1307 slave I2C address + I2C read flag&lt;/span&gt;

  &lt;span class="n"&gt;i2c_idle&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;              &lt;span class="c1"&gt;// Ensure I2C is idle&lt;/span&gt;
  &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;tm_sec&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;bcd2dec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i2c_rb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// secs, I2C ACK condition&lt;/span&gt;

  &lt;span class="n"&gt;i2c_idle&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;              &lt;span class="c1"&gt;// Ensure I2C is idle&lt;/span&gt;
  &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;tm_min&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;bcd2dec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i2c_rb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// minutes, I2C ACK condition&lt;/span&gt;

  &lt;span class="n"&gt;i2c_idle&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;              &lt;span class="c1"&gt;// Ensure I2C is idle&lt;/span&gt;
  &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;tm_hour&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;bcd2dec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i2c_rb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// hours, I2C ACK condition&lt;/span&gt;

  &lt;span class="n"&gt;i2c_idle&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;              &lt;span class="c1"&gt;// Ensure I2C is idle&lt;/span&gt;
  &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;tm_wday&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i2c_rb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Day of Week, I2C ACK condition&lt;/span&gt;

  &lt;span class="n"&gt;i2c_idle&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;              &lt;span class="c1"&gt;// Ensure I2C is idle&lt;/span&gt;
  &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;tm_mday&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;bcd2dec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i2c_rb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// Day of Month, I2C ACK condition&lt;/span&gt;

  &lt;span class="n"&gt;i2c_idle&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;              &lt;span class="c1"&gt;// Ensure I2C is idle&lt;/span&gt;
  &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;tm_mon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;bcd2dec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i2c_rb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// month, I2C ACK condition&lt;/span&gt;

  &lt;span class="n"&gt;i2c_idle&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;              &lt;span class="c1"&gt;// Ensure I2C is idle&lt;/span&gt;
  &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;tm_year&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;bcd2dec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i2c_rb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// year, I2C NACK condition (end of sequential read)&lt;/span&gt;

  &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;tm_yday&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;tm_isdst&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// less than zero if the information is not available&lt;/span&gt;

  &lt;span class="n"&gt;i2c_stop_and_close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;    &lt;span class="c1"&gt;// I2C Stop condition, then close I2C module&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;main.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt;  xc8 --chip=18f4620 main.c&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;

&lt;span class="cp"&gt;#define _XTAL_FREQ 25e4&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;xc.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;time.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdint.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;config-4620.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;liquid-crystal.c&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;rtc_r.c&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="c1"&gt;// http://microchip.wikidot.com/faq:29&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;putch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="n"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;lcd_dat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// lcd&lt;/span&gt;
  &lt;span class="n"&gt;PORTD&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TRISD&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;PORTE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TRISE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;// i2c&lt;/span&gt;
  &lt;span class="n"&gt;TRISC3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TRISC4&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="n"&gt;lcd_init&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="n"&gt;lcd_no_cursor&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="n"&gt;lcd_no_blink&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;daysOfWeek&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="s"&gt;&amp;quot;Sun.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Mon.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Tues.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Wed.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Thurs.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Fri.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Sat.&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;tm&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;lcd_home&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;rtc_r&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%02d:%02d:%02d  %s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tm_hour&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tm_min&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tm_sec&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tm_wday&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tm_wday&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;daysOfWeek&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tm_wday&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;:(&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;lcd_set_cursor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%02d/%02d/%02d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tm_mday&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tm_mon&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tm_year&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–¢–µ–∫—É—â—É—é –≤—Ä–µ–º—è –∏ –¥–∞—Ç—É –º–æ–∂–Ω–æ –∫–æ–Ω–µ—á–Ω–æ –∂–µ –≤—ã—Å—Ç–∞–≤–ª—è—Ç—å - –∞–¥—Ä–µ—Å–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –∫–∞—Ä—Ç—ã –ø–∞–º—è—Ç–∏ DS1307 –¥–ª—è –∑–∞–ø–∏—Å–∏ —Ç–∞–∫–∏–µ –∂–µ –∫–∞–∫ –∏ –Ω–∞ —á—Ç–µ–Ω–∏–µ. –ï—Å–ª–∏ —Å–∫–æ—Ä–æ—Å—Ç—å –æ–±–º–µ–Ω–∞ –¥–∞–Ω–Ω—ã–º–∏ –Ω–µ –∏–º–µ–µ—Ç –æ—Å–æ–±–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è, —Ç–æ –Ω–∏—á—Ç–æ –Ω–µ –º–µ—à–∞–µ—Ç –∑–∞–º–µ–Ω–∏—Ç—å –∞–ø–ø–∞—Ä–∞—Ç–Ω—ã–π I2C (—Ñ–∞–π–ª i2c-hw.c) –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–µ–π (–ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ —Å—á–∏—Ç—ã–≤–∞—Ç—å/–≤—ã—Å—Ç–∞–≤–ª—è—Ç—å –Ω–æ–≥–∏ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ SCL/SDA) - —ç—Ç–æ —Ç–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä—è–ª–æ—Å—å –∏ –¥–∞–∂–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤ —Å–∏–º—É–ª—è—Ü–∏–∏ PICSim.js.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mazko.github.io/blog/posts/2017/02/05/picsimjs-soprogrammy-i-prosteishaia-mnogozadachnost/"&gt;–î–∞–ª–µ–µ&lt;/a&gt; —Å–æ–ø—Ä–æ–≥—Ä–∞–º–º—ã.&lt;/p&gt;</content><category term="picsim"></category><category term="DS1307"></category><category term="I2C"></category></entry><entry><title>PICSim.js - –º–∞—Ç—Ä–∏—á–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞</title><link href="https://mazko.github.io/blog/posts/2017/01/30/picsimjs-matrichnaia-klaviatura/" rel="alternate"></link><published>2017-01-30T00:00:00+02:00</published><updated>2017-01-30T00:00:00+02:00</updated><author><name>Oleg Mazko</name></author><id>tag:mazko.github.io,2017-01-30:/blog/posts/2017/01/30/picsimjs-matrichnaia-klaviatura/</id><summary type="html">&lt;p&gt;–ú–∞—Ç—Ä–∏—á–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ—Å—Ç–æ–∏—Ç –∏ &lt;a href="https://mazko.github.io/blog/posts/2017/01/13/simuliatsiia-mikrokontrollerov-picsimjs/"&gt;–æ–±—ã—á–Ω—ã—Ö&lt;/a&gt; –∫–Ω–æ–ø–æ–∫, —Ç–æ–ª—å–∫–æ —Å–æ–µ–¥–∏–Ω—ë–Ω–Ω—ã—Ö –≤ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ - —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –≤ —Ä—è–¥—ã –∏ —Å—Ç–æ–ª–±—Ü—ã, –æ–±—Ä–∞–∑—É—è –º–∞—Ç—Ä–∏—Ü—É. –¢–∞–∫–æ–µ –≤–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–ø—Ä–∞—à–∏–≤–∞—Ç—å –±–æ–ª—å—à–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫, –∑–∞–¥–µ–π—Å—Ç–≤–æ–≤–∞–≤ –ø—Ä–∏ —ç—Ç–æ–º –º–µ–Ω—å—à–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–≥ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ - –Ω–∞–ø—Ä–∏–º–µ—Ä –¥–ª—è —Å—á–∏—Ç—ã–≤–∞–Ω–∏—è 16 –ø—Ä–æ—Å—Ç—ã—Ö –∫–Ω–æ–ø–æ–∫ –ø–æ–Ω–∞–¥–æ–±–∏–ª–æ—Å—å –±—ã —Ü–µ–ª—ã—Ö –¥–≤–∞ 8-–±–∏—Ç–Ω—ã—Ö –ø–æ—Ä—Ç–∞ –≤–≤–æ–¥–∞, —Ç–æ–≥–¥–∞ –∫–∞–∫ –º–∞—Ç—Ä–∏—Ü–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–±–æ–π—Ç–∏—Å—å ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;–ú–∞—Ç—Ä–∏—á–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ—Å—Ç–æ–∏—Ç –∏ &lt;a href="https://mazko.github.io/blog/posts/2017/01/13/simuliatsiia-mikrokontrollerov-picsimjs/"&gt;–æ–±—ã—á–Ω—ã—Ö&lt;/a&gt; –∫–Ω–æ–ø–æ–∫, —Ç–æ–ª—å–∫–æ —Å–æ–µ–¥–∏–Ω—ë–Ω–Ω—ã—Ö –≤ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ - —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –≤ —Ä—è–¥—ã –∏ —Å—Ç–æ–ª–±—Ü—ã, –æ–±—Ä–∞–∑—É—è –º–∞—Ç—Ä–∏—Ü—É. –¢–∞–∫–æ–µ –≤–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–ø—Ä–∞—à–∏–≤–∞—Ç—å –±–æ–ª—å—à–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫, –∑–∞–¥–µ–π—Å—Ç–≤–æ–≤–∞–≤ –ø—Ä–∏ —ç—Ç–æ–º –º–µ–Ω—å—à–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–≥ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ - –Ω–∞–ø—Ä–∏–º–µ—Ä –¥–ª—è —Å—á–∏—Ç—ã–≤–∞–Ω–∏—è 16 –ø—Ä–æ—Å—Ç—ã—Ö –∫–Ω–æ–ø–æ–∫ –ø–æ–Ω–∞–¥–æ–±–∏–ª–æ—Å—å –±—ã —Ü–µ–ª—ã—Ö –¥–≤–∞ 8-–±–∏—Ç–Ω—ã—Ö –ø–æ—Ä—Ç–∞ –≤–≤–æ–¥–∞, —Ç–æ–≥–¥–∞ –∫–∞–∫ –º–∞—Ç—Ä–∏—Ü–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–±–æ–π—Ç–∏—Å—å –≤—Å–µ–≥–æ –æ–¥–Ω–∏–º —Ç.–∫. &lt;code&gt;4*4=16&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;–ú–∞—Ç—Ä–∏—á–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –Ω–∞ —Ä–∏—Å—É–Ω–∫–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞ –∫ –ø–æ—Ä—Ç—É PORTB, –≤—Å–µ –Ω–æ–≥–∏ –ø–æ–¥—Ç—è–Ω—É—Ç—ã —Ä–µ–∑–∏—Å—Ç–æ—Ä–∞–º–∏ –∫ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—é –ø–∏—Ç–∞–Ω–∏—è - —Ç.–µ. —á–∏—Ç–∞—é—Ç—Å—è –∫–∞–∫ 1 –µ—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–∂–∞—Ç–æ. –ê–ª–≥–æ—Ä–∏—Ç–º –æ–ø—Ä–æ—Å–∞ –º–∞—Ç—Ä–∏—á–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ 16 –∫–Ω–æ–ø–æ–∫ —Å–≤–æ–¥–∏—Ç—Å—è –∫ —Å–ª–µ–¥—É—é—â–∏–º —à–∞–≥–∞–º:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è - —á–µ—Ç—ã—Ä–µ —Å–∫–∞–Ω–∏—Ä—É—é—â–∏–µ –Ω–æ–≥–∏ RB0...RB3 –Ω–∞ –≤—ã—Ö–æ–¥, —á–µ—Ç—ã—Ä–µ —Å—á–∏—Ç—ã–≤–∞—é—â–∏–µ RB4...RB7 –Ω–∞ –≤—Ö–æ–¥. –ù–∏—á—Ç–æ –Ω–µ –∑–∞–ø—Ä–µ—â–∞–µ—Ç –ø–æ–º–µ–Ω—è—Ç—å —Å–∫–∞–Ω–∏—Ä—É—é—â–∏–µ/—Å—á–∏—Ç—ã–≤–∞—é—â–∏–µ –≤—ã–≤–æ–¥—ã, —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –Ω—É–∂–Ω–æ –ø–æ–º–µ–Ω—è—Ç—å –ø–∞—Ä—É —Å—Ç—Ä–æ—á–µ–∫ –≤ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω–æ–π –Ω–∏–∂–µ —Ñ—É–Ω–∫—Ü–∏–∏ &lt;code&gt;_keyboard_scan()&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;–æ–ø—Ä–æ—Å - –Ω–∞ –ø–µ—Ä–≤–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ –≤—ã—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –Ω–æ–ª—å –Ω–∞ RB0, –Ω–∞ RB1..RB3 –µ–¥–∏–Ω–∏—Ü—ã, –µ—Å–ª–∏ —ç—Ç–æ –ø—Ä–∏–≤–µ–ª–æ –∫ –ø–æ—Å–∞–¥–∫–µ –ø–æ–¥—Ç—è–≥–∏–≤–∞—é—â–µ–≥–æ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è –Ω–∞–ø—Ä–∏–º–µ—Ä –Ω–∞ –≤—Ö–æ–¥–µ RB5, —ç—Ç–æ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ 3. –ï—Å–ª–∏ –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –∏—Ç–µ—Ä–∞—Ü–∏—è –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è - —Ç–µ–ø–µ—Ä—å —É–∂–µ RB1 –≤ –Ω–æ–ª—å, &lt;code&gt;RB0=RB2=RB3=1&lt;/code&gt; –∏ —Ç–∞–∫ –≤–ø–ª–æ—Ç—å –¥–æ RB3&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://mazko.github.io/blog/posts/2017/01/30/picsimjs-matrichnaia-klaviatura/config-4620.h"&gt;config.h&lt;/a&gt; | &lt;a href="https://mazko.github.io/blog/posts/2017/01/27/picsimjs-simvolnyi-displei-na-baze-hd44780/"&gt;liquid-crystal.c&lt;/a&gt; | &lt;a href="https://mazko.github.io/blog/posts/2017/01/30/picsimjs-matrichnaia-klaviatura/main.hex"&gt;hex&lt;/a&gt; | &lt;a href="http://mazko.github.io/picsim.js/8ec71b12144755531dd59a243e3061bb"&gt;picsim.js&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2017/01/30/picsimjs-matrichnaia-klaviatura/ui.gif" style="width:100%; border:1px solid #ddd;"&gt;&lt;/p&gt;
&lt;p&gt;–†–∞–±–æ—Ç–∞ —Å —Å–∏–º–≤–æ–ª—å–Ω—ã–º –¥–∏—Å–ø–ª–µ–µ–º –æ–ø–∏—Å—ã–≤–∞–ª–∞—Å—å –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–º &lt;a href="https://mazko.github.io/blog/posts/2017/01/27/picsimjs-simvolnyi-displei-na-baze-hd44780/"&gt;–º–∞—Ç–µ—Ä–∏–∞–ª–µ&lt;/a&gt;. –¢—É—Ç —Ä–∞–∑–º–µ—Ä –º–∞—Å—Å–∏–≤–∞ –Ω–∞ —ç—Ç–∞–ø–µ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è —Å –ø–æ–º–æ—â—å—é —Ä–∞—Å–ø–∏—Å–∞–Ω–Ω–æ–π —Ä–∞–Ω–µ–µ &lt;a href="https://mazko.github.io/blog/posts/2012/10/08/idiomy-v-ansi-c/"&gt;–∏–¥–∏–æ–º—ã&lt;/a&gt; &lt;code&gt;sizeof x / sizeof x[0]&lt;/code&gt;. –§—É–Ω–∫—Ü–∏—è —Å—á–∏—Ç—ã–≤–∞–Ω–∏—è –∫–ª–∞–≤–∏—à–∏ &lt;code&gt;keyboad_get_or_0()&lt;/code&gt; –Ω–µ–±–ª–æ–∫–∏—Ä—É—é—â–∞—è - –µ—Å–ª–∏ –∫–ª–∞–≤–∏—à–∞ –Ω–∞–∂–∞—Ç–∞ (–ø–æ—Å–ª–µ —á–µ–≥–æ –æ—Ç–ø—É—â–µ–Ω–∞), –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –∫–æ–¥ —Å–∏–º–≤–æ–ª–∞, –µ—Å–ª–∏ –∂–µ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–∂–∞—Ç–æ, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è 0. –ù–µ–±–ª–æ–∫–∏—Ä—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é –≤—Å–µ–≥–¥–∞ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –ø—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏ –±–ª–æ–∫–∏—Ä—É—é—â–µ–π, –µ—Å–ª–∏ –ø–æ–º–µ—Å—Ç–∏—Ç—å –≤ —Ü–∏–∫–ª, –∞ –≤–æ—Ç —Å –±–ª–æ–∫–∏—Ä—É—é—â–∏–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –Ω–µ –≤—Å—ë —Ç–∞–∫ –ø—Ä–æ—Å—Ç–æ.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;keyboard.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;xc.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdint.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="nf"&gt;_keyboard_scan&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;key_code&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;+&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;4&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;5&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;6&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;7&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;9&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;#&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}};&lt;/span&gt;

  &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt; &lt;span class="n"&gt;key_code&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;key_code&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// set PORTB and some delay for voltage to rise / fall&lt;/span&gt;
    &lt;span class="n"&gt;PORTB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;__delay_ms&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;key_code&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;key_code&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PORTB&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;0x80&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;key_code&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="nf"&gt;keyboad_get_or_0&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;_last_key&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_keyboard_scan&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;_last_key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_last_key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_last_key&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;_last_key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;main.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt;  xc8 --chip=18f4620 main.c&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;

&lt;span class="cp"&gt;#define _XTAL_FREQ 5e4&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;xc.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;config-4620.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;liquid-crystal.c&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;keyboard.c&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// lcd&lt;/span&gt;
  &lt;span class="n"&gt;PORTD&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TRISD&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;PORTE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TRISE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// matrix keyboard: PORTB AN8..AN12 as digital&lt;/span&gt;
  &lt;span class="n"&gt;ADCON1bits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PCFG0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ADCON1bits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PCFG1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
  &lt;span class="n"&gt;ADCON1bits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PCFG2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;PORTB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TRISB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mh"&gt;0xF0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="n"&gt;lcd_init&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="n"&gt;lcd_no_cursor&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="n"&gt;lcd_no_blink&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="n"&gt;lcd_print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Keyboard:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;lcd_set_cursor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// row 2&lt;/span&gt;

  &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;keyboad_get_or_0&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;lcd_dat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ê–ª–≥–æ—Ä–∏—Ç–º, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π –≤ –º–∞—Ç—Ä–∏—á–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ, –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ—Ç—Å—è –≤ —Å—Ç–æ—Ä–æ–Ω—É —É–≤–µ–ª–∏—á–µ–Ω–∏—è - –Ω–∞–ø—Ä–∏–º–µ—Ä 8 –±–∏—Ç –¥–ª—è —Å—á–∏—Ç—ã–≤–∞–Ω–∏—è –∏ 8 –¥–ª—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞—Å—Ç &lt;code&gt;8*8=64&lt;/code&gt; –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏, —ç—Ç–æ –æ–¥–∏–Ω –ø–æ—Ä—Ç –≤–≤–æ–¥–∞-–≤—ã–≤–æ–¥–∞ –¥–ª—è 16-–±–∏—Ç–Ω—ã—Ö pic24 –∏–ª–∏ –¥–≤–∞ –ø–æ—Ä—Ç–∞ –¥–ª—è pic18...pic10 –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤. –í —Ç–µ–æ—Ä–∏–∏ –º–∞—Ç—Ä–∏—á–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ —É—Å—Ç—É–ø–∞–µ—Ç –ø–æ —Å–∫–æ—Ä–æ—Å—Ç–∏ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Å—Ç—ã–º –∫–Ω–æ–ø–∫–∞–º –∏ —Ä–∞—Å—Ö–æ–¥—É–µ—Ç –∫–∞–∫—É—é-—Ç–æ –Ω–µ–∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—É—é —á–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏, –Ω–æ –≤—Å—ë —ç—Ç–æ —Å –ª–∏—Ö–≤–æ–π –∫–æ–º–ø–µ–Ω—Å–∏—Ä—É–µ—Ç—Å—è –±–æ–ª–µ–µ —Ä–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ø–æ—Ä—Ç–æ–≤ –≤–≤–æ–¥–∞ –≤—ã–≤–æ–¥–∞. &lt;/p&gt;
&lt;p&gt;&lt;a href="https://mazko.github.io/blog/posts/2017/02/02/picsimjs-chasy-realnogo-vremeni-ds1307/"&gt;–î–∞–ª–µ–µ&lt;/a&gt; —á–∞—Å—ã —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏.&lt;/p&gt;</content><category term="picsim"></category></entry><entry><title>PICSim.js - –∞–Ω–∞–ª–æ–≥–æ-—Ü–∏—Ñ—Ä–æ–≤–æ–π –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å</title><link href="https://mazko.github.io/blog/posts/2017/01/28/picsimjs-analogo-tsifrovoi-preobrazovatel/" rel="alternate"></link><published>2017-01-28T00:00:00+02:00</published><updated>2017-01-28T00:00:00+02:00</updated><author><name>Oleg Mazko</name></author><id>tag:mazko.github.io,2017-01-28:/blog/posts/2017/01/28/picsimjs-analogo-tsifrovoi-preobrazovatel/</id><summary type="html">&lt;p&gt;–ö–∞–∫ –º—ã —É–∂–µ &lt;a href="https://mazko.github.io/blog/posts/2017/01/14/picsimjs-shirotno-impulsnaia-moduliatsiia/"&gt;–∑–Ω–∞–µ–º&lt;/a&gt;, —Ü–∏—Ñ—Ä–æ-–∞–Ω–∞–ª–æ–≥–æ–≤—ã–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª–∏ (–¶–ê–ü, DAC) –ø—Ä–µ–æ–±—Ä–∞–∑—É—é—Ç –¥–∏—Å–∫—Ä–µ—Ç–Ω—ã–π (–¥–≤–æ–∏—á–Ω—ã–π) –∫–æ–¥ –≤ –∞–Ω–∞–ª–æ–≥–æ–≤—ã–π —Å–∏–≥–Ω–∞–ª - –∫–∞–∫ –ø—Ä–∞–≤–∏–ª–æ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ. –ù–µ –º–µ–Ω–µ–µ –≤–æ—Å—Ç—Ä–µ–±–æ–≤–∞–Ω–Ω—ã–º –≤ —Ü–∏—Ñ—Ä–æ–≤–æ–π —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–µ —è–≤–ª—è–µ—Ç—Å—è –æ–±—Ä–∞—Ç–Ω–æ–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ - –∞–Ω–∞–ª–æ–≥–æ-—Ü–∏—Ñ—Ä–æ–≤–æ–π –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å (–ê–¶–ü, –∞–Ω–≥–ª. Analog-to-digital converter, ADC). –ù–∞–∏–±–æ–ª–µ–µ –≤–∞–∂–Ω—ã–º–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏ –ê–¶–ü —è–≤–ª—è—é—Ç—Å—è —Ä–∞–∑—Ä—è–¥–Ω–æ—Å—Ç—å/—Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ - –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤–µ–ª–∏—á–∏–Ω—ã –∞–Ω–∞–ª–æ–≥–æ–≤–æ–≥–æ —Å–∏–≥–Ω–∞–ª–∞, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;–ö–∞–∫ –º—ã —É–∂–µ &lt;a href="https://mazko.github.io/blog/posts/2017/01/14/picsimjs-shirotno-impulsnaia-moduliatsiia/"&gt;–∑–Ω–∞–µ–º&lt;/a&gt;, —Ü–∏—Ñ—Ä–æ-–∞–Ω–∞–ª–æ–≥–æ–≤—ã–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª–∏ (–¶–ê–ü, DAC) –ø—Ä–µ–æ–±—Ä–∞–∑—É—é—Ç –¥–∏—Å–∫—Ä–µ—Ç–Ω—ã–π (–¥–≤–æ–∏—á–Ω—ã–π) –∫–æ–¥ –≤ –∞–Ω–∞–ª–æ–≥–æ–≤—ã–π —Å–∏–≥–Ω–∞–ª - –∫–∞–∫ –ø—Ä–∞–≤–∏–ª–æ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ. –ù–µ –º–µ–Ω–µ–µ –≤–æ—Å—Ç—Ä–µ–±–æ–≤–∞–Ω–Ω—ã–º –≤ —Ü–∏—Ñ—Ä–æ–≤–æ–π —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–µ —è–≤–ª—è–µ—Ç—Å—è –æ–±—Ä–∞—Ç–Ω–æ–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ - –∞–Ω–∞–ª–æ–≥–æ-—Ü–∏—Ñ—Ä–æ–≤–æ–π –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å (–ê–¶–ü, –∞–Ω–≥–ª. Analog-to-digital converter, ADC). –ù–∞–∏–±–æ–ª–µ–µ –≤–∞–∂–Ω—ã–º–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏ –ê–¶–ü —è–≤–ª—è—é—Ç—Å—è —Ä–∞–∑—Ä—è–¥–Ω–æ—Å—Ç—å/—Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ - –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤–µ–ª–∏—á–∏–Ω—ã –∞–Ω–∞–ª–æ–≥–æ–≤–æ–≥–æ —Å–∏–≥–Ω–∞–ª–∞, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ, –∞ —Ç–∞–∫–∂–µ —á–∞—Å—Ç–æ—Ç–∞ –¥–∏—Å–∫—Ä–µ—Ç–∏–∑–∞—Ü–∏–∏ (Sampling rate) - —á–∞—Å—Ç–æ—Ç–∞ –≤—ã–±–æ—Ä–∫–∏ —Ü–∏—Ñ—Ä–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –∏–∑ –∞–Ω–∞–ª–æ–≥–æ–≤–æ–≥–æ —Å–∏–≥–Ω–∞–ª–∞.&lt;/p&gt;
&lt;p&gt;–ú–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä PIC18F4620 –∏–º–µ–µ—Ç –Ω–∞ –±–æ—Ä—Ç—É –æ–¥–∏–Ω –∞–ø–ø–∞—Ä–∞—Ç–Ω—ã–π –ê–¶–ü —Ä–∞–∑—Ä—è–¥–Ω–æ—Å—Ç—å—é 10 &lt;a href="https://bc.js.org/"&gt;–±–∏—Ç&lt;/a&gt; &lt;code&gt;2^10=1024&lt;/code&gt; —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —á–∞—Å—Ç–æ—Ç–æ–π –¥–∏—Å–∫—Ä–µ—Ç–∏–∑–∞—Ü–∏–∏ (–µ—Å–ª–∏ –≤–µ—Ä–∏—Ç—å –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—é) 100 —Ç—ã—Å—è—á –≤—ã–±–æ—Ä–æ–∫ –≤ —Å–µ–∫—É–Ω–¥—É. –¢–∞–∫–∂–µ –≤ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–µ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω –º—É–ª—å—Ç–∏–ø–ª–µ–∫—Å–æ—Ä, –ø–æ–∑–≤–æ–ª—è—é—â–∏–π –≤ –Ω—É–∂–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç—å –Ω–∞ –≤—Ö–æ–¥ –ê–¶–ü 13 —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –Ω–æ–≥. –í –∫–∞—á–µ—Å—Ç–≤–µ –æ–ø–æ—Ä–Ω–æ–≥–æ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è –¥–ª—è –ê–¶–ü –º–æ–∂–µ—Ç —Å–ª—É–∂–∏—Ç—å –∫–∞–∫ –∏—Å—Ç–æ—á–Ω–∏–∫ –ø–∏—Ç–∞–Ω–∏—è Vdd/Vss (–æ–±—ã—á–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞), —Ç–∞–∫ –∏ –≤–Ω–µ—à–Ω–∏–π –∏—Å—Ç–æ—á–Ω–∏–∫ –Ω–∞ –Ω–æ–≥–∞—Ö 4 –∏ 5 (AN2/AN3). –ù–∞–ø—Ä—è–∂–µ–Ω–∏–µ –Ω–∞ –≤—Ö–æ–¥–µ –ê–¶–ü –Ω–µ –¥–æ–ª–∂–Ω–æ –≤—ã—Ö–æ–¥–∏—Ç—å –∑–∞ –ø—Ä–µ–¥–µ–ª—ã –æ–ø–æ—Ä–Ω–æ–≥–æ.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mazko.github.io/blog/posts/2017/01/28/picsimjs-analogo-tsifrovoi-preobrazovatel/config-4620.h"&gt;config.h&lt;/a&gt; | &lt;a href="https://mazko.github.io/blog/posts/2017/01/27/picsimjs-simvolnyi-displei-na-baze-hd44780/"&gt;liquid-crystal.c&lt;/a&gt; | &lt;a href="https://mazko.github.io/blog/posts/2017/01/28/picsimjs-analogo-tsifrovoi-preobrazovatel/main.hex"&gt;hex&lt;/a&gt; | &lt;a href="http://mazko.github.io/picsim.js/b1bb487dc063ae1128e98372a7983519"&gt;picsim.js&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2017/01/28/picsimjs-analogo-tsifrovoi-preobrazovatel/ui.gif" style="width:100%; border:1px solid #ddd;"&gt;&lt;/p&gt;
&lt;p&gt;–†–∞–±–æ—Ç–∞ —Å —Å–∏–º–≤–æ–ª—å–Ω—ã–º –¥–∏—Å–ø–ª–µ–µ–º –æ–ø–∏—Å—ã–≤–∞–ª–∞—Å—å –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–º &lt;a href="https://mazko.github.io/blog/posts/2017/01/27/picsimjs-simvolnyi-displei-na-baze-hd44780/"&gt;–º–∞—Ç–µ—Ä–∏–∞–ª–µ&lt;/a&gt;. –¢—É—Ç –º—ã —Ä–µ–∞–ª–∏–∑–æ–≤–∞–ª–∏ —Ñ—É–Ω–∫—Ü–∏—é &lt;code&gt;putch&lt;/code&gt;, —á—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å LCD —á–µ—Ä–µ–∑ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –° &lt;code&gt;printf&lt;/code&gt;. –ü–æ—Å–∫–æ–ª—å–∫—É –≤ –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ –¥–ª–∏–Ω–∞ –≤—ã–≤–æ–¥–∏–º–æ–π –Ω–∞ –¥–∏—Å–ø–ª–µ–π —Å—Ç—Ä–æ–∫–∏ –≤—Å–µ–≥–¥–∞ –ø–æ—Å—Ç–æ—è–Ω–Ω–∞, –Ω–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –µ–≥–æ –æ—á–∏—â–∞—Ç—å - –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –∫—É—Ä—Å–æ—Ä –¥–æ–º–æ–π –ø–µ—Ä–µ–¥ –∫–∞–∂–¥—ã–º –Ω–æ–≤—ã–º –≤—ã–∑–æ–≤–æ–º &lt;code&gt;printf&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt;  xc8 --chip=18f4620 main.c&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;

&lt;span class="cp"&gt;#define _XTAL_FREQ 5e4&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;xc.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdint.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;config-4620.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;liquid-crystal.c&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="c1"&gt;// http://microchip.wikidot.com/faq:29&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;putch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="n"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;lcd_dat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt; &lt;span class="n"&gt;adc_samples_counter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// lcd&lt;/span&gt;
  &lt;span class="n"&gt;PORTD&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TRISD&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;PORTE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;TRISE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// ADC input RE0&lt;/span&gt;

  &lt;span class="c1"&gt;// ADC analog input RE0&lt;/span&gt;
  &lt;span class="n"&gt;ADCON0bits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CHS3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ADCON0bits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CHS1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;ADCON0bits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CHS2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ADCON0bits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CHS0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;ADCON0bits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ADON&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="n"&gt;lcd_init&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="n"&gt;lcd_no_cursor&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="n"&gt;lcd_no_blink&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;ADCON0bits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GO&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;          &lt;span class="c1"&gt;// start ADC conversion&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ADCON0bits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GO&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// wait untill conversion finish&lt;/span&gt;
    &lt;span class="n"&gt;lcd_home&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%4d:0x%04x&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;(((&lt;/span&gt;&lt;span class="kt"&gt;uint16_t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;ADRESH&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ADRESL&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;adc_samples_counter&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ö–∞–∫ –Ω–µ—Ç—Ä—É–¥–Ω–æ –¥–æ–≥–∞–¥–∞—Ç—å—Å—è –ø–æ –∫–∞—Ä—Ç–∏–Ω–∫–µ —É –¥–∞–Ω–Ω–æ–π —Å–∏–º—É–ª—è—Ü–∏–∏ –æ–ø–æ—Ä–Ω–æ–µ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ 5 –í–æ–ª—å—Ç. –° –ø–æ–º–æ—â—å—é –±–∏—Ç–æ–≤ CHS3-CHS0 –≤—ã–±–∏—Ä–∞–µ—Ç—Å—è —Å –∫–∞–∫–æ–≥–æ –≤—ã–≤–æ–¥–∞ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ –∞–Ω–∞–ª–æ–≥–æ–≤—ã–π —Å–∏–≥–Ω–∞–ª –ø–æ—Å—Ç—É–ø–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ –ê–¶–ü - –≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ —ç—Ç–æ RE0. –ë–∏—Ç ADON –≤–∫–ª—é—á–∞–µ—Ç –ê–¶–ü, –¥–ª—è —Å—Ç–∞—Ä—Ç–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ –≤—ã—Å—Ç–∞–≤–∏—Ç—å —Ñ–ª–∞–≥ GO, –ø–æ –æ–∫–æ–Ω—á–∞–Ω–∏–∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ—Ç —Ñ–ª–∞–≥ –±—É–¥–µ—Ç —Å–±—Ä–æ—à–µ–Ω –∞–ø–ø–∞—Ä–∞—Ç–Ω–æ (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏). –¢–∞–∫ –∫–∞–∫ —Ä–∞–∑—Ä—è–¥–Ω–æ—Å—Ç—å –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ 8 –±–∏—Ç, —á—Ç–æ –º–µ–Ω—å—à–µ —Ä–∞–∑—Ä—è–¥–Ω–æ—Å—Ç–∏ –ê–¶–ü, —Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Ä–∞–∑–º–µ—â–∞–µ—Ç—Å—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –≤ –¥–≤—É—Ö —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ö - ADRESH –∏ ADRESL. –í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ 10 –±–∏—Ç–Ω–æ–≥–æ —á–∏—Å–ª–∞ –≤ —ç—Ç–∏—Ö –¥–≤—É—Ö —Ä–µ–≥–∏—Å—Ç—Ä–æ–≤ –∑–∞–¥–∞—ë—Ç—Å—è –±–∏—Ç–æ–º ADFM, —Ö–æ—Ç—è –Ω–∞–¥–æ–±–Ω–æ—Å—Ç—å –∑–Ω–∞—Ç—å –æ –µ–≥–æ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–∏ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç —Ä–µ–¥–∫–æ.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mazko.github.io/blog/posts/2017/01/30/picsimjs-matrichnaia-klaviatura/"&gt;–î–∞–ª–µ–µ&lt;/a&gt; –º–∞—Ç—Ä–∏—á–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞.&lt;/p&gt;</content><category term="picsim"></category><category term="–ê–¶–ü"></category></entry><entry><title>PICSim.js - —Å–∏–º–≤–æ–ª—å–Ω—ã–π –¥–∏—Å–ø–ª–µ–π –Ω–∞ –±–∞–∑–µ HD44780</title><link href="https://mazko.github.io/blog/posts/2017/01/27/picsimjs-simvolnyi-displei-na-baze-hd44780/" rel="alternate"></link><published>2017-01-27T00:00:00+02:00</published><updated>2017-01-27T00:00:00+02:00</updated><author><name>Oleg Mazko</name></author><id>tag:mazko.github.io,2017-01-27:/blog/posts/2017/01/27/picsimjs-simvolnyi-displei-na-baze-hd44780/</id><summary type="html">&lt;p&gt;–°—Ä–µ–¥–∏ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö LCD –¥–∏—Å–ø–ª–µ–µ–≤ –Ω–∞–∏–±–æ–ª–µ–µ –ø—Ä–æ—Å—Ç—ã–º–∏ —è–≤–ª—è—é—Ç—Å—è —Ç–µ–∫—Å—Ç–æ–≤—ã–µ (—Å–∏–º–≤–æ–ª—å–Ω—ã–µ) –¥–∏—Å–ø–ª–µ–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ hd44780 —Å –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–º 4-–∏–ª–∏ 8-–±–∏—Ç–Ω—ã–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º. –í —Å—Ä–∞–≤–Ω–µ–Ω–∏–∏ —Å &lt;a href="https://mazko.github.io/blog/posts/2017/01/16/picsimjs-semisegmentnyi-indikator-i-preryvaniia/"&gt;7-—Å–µ–≥–º–µ–Ω—Ç–Ω—ã–º–∏&lt;/a&gt; –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞–º–∏, –¥–∏—Å–ø–ª–µ–∏ –Ω–∞ –±–∞–∑–µ HD44780 –æ–±–ª–∞–¥–∞—é—Ç –Ω–∞ –ø–æ—Ä—è–¥–æ–∫ –±–æ–ª—å—à–∏–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –Ω–∞ —ç–∫—Ä–∞–Ω–µ —É —Ä–∞–∑–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π - 1,2 –∏–ª–∏ 4; —á–∏—Å–ª–æ –≤–∏–¥–∏–º—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Å—Ç—Ä–æ–∫–µ ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;–°—Ä–µ–¥–∏ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö LCD –¥–∏—Å–ø–ª–µ–µ–≤ –Ω–∞–∏–±–æ–ª–µ–µ –ø—Ä–æ—Å—Ç—ã–º–∏ —è–≤–ª—è—é—Ç—Å—è —Ç–µ–∫—Å—Ç–æ–≤—ã–µ (—Å–∏–º–≤–æ–ª—å–Ω—ã–µ) –¥–∏—Å–ø–ª–µ–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ hd44780 —Å –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–º 4-–∏–ª–∏ 8-–±–∏—Ç–Ω—ã–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º. –í —Å—Ä–∞–≤–Ω–µ–Ω–∏–∏ —Å &lt;a href="https://mazko.github.io/blog/posts/2017/01/16/picsimjs-semisegmentnyi-indikator-i-preryvaniia/"&gt;7-—Å–µ–≥–º–µ–Ω—Ç–Ω—ã–º–∏&lt;/a&gt; –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞–º–∏, –¥–∏—Å–ø–ª–µ–∏ –Ω–∞ –±–∞–∑–µ HD44780 –æ–±–ª–∞–¥–∞—é—Ç –Ω–∞ –ø–æ—Ä—è–¥–æ–∫ –±–æ–ª—å—à–∏–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –Ω–∞ —ç–∫—Ä–∞–Ω–µ —É —Ä–∞–∑–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π - 1,2 –∏–ª–∏ 4; —á–∏—Å–ª–æ –≤–∏–¥–∏–º—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Å—Ç—Ä–æ–∫–µ: 8,10,16,20,24,30,32 –∏–ª–∏ 40, –æ–¥–∏–Ω —Å–∏–º–≤–æ–ª –Ω–∞ –¥–∏—Å–ø–ª–µ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π –º–∞—Ç—Ä–∏—Ü—É —Ä–∞–∑–º–µ—Ä–æ–º 5x8 —Ç–æ—á–µ–∫, –∑–∞ –æ—Ç—Ä–∏—Å–æ–≤–∫—É —Å–∏–º–≤–æ–ª–æ–≤ –æ—Ç–≤–µ—á–∞–µ—Ç —Å–∞–º HD44780, —Ç–æ–∫ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ –±–µ–∑ –ø–æ–¥—Å–≤–µ—Ç–∫–∏ –æ—á–µ–Ω—å –º–∞–ª - 100‚Ä¶200 –º–∫–ê. –û–±—ã—á–Ω–æ —Ö–æ—Ä–æ—à–µ–π –ø—Ä–∞–∫—Ç–∏–∫–æ–π –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —è–≤–ª—è–µ—Ç—Å—è –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏–µ —Å &lt;a href="https://www.sparkfun.com/datasheets/LCD/HD44780.pdf" rel="nofollow"&gt;–æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–π&lt;/a&gt; –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–µ–π.&lt;/p&gt;
&lt;p&gt;–î–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è HD44780 –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ–º –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –≤—ã–≤–æ–¥—ã:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;RS - –¥–∏—Å–ø–ª–µ–π –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, —á—Ç–æ –∏–º–µ–Ω–Ω–æ –∫ –Ω–µ–º—É –ø–æ—Å—Ç—É–ø–∞–µ—Ç (–¥–∞–Ω–Ω—ã–µ/–∫–æ–º–∞–Ω–¥–∞)  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RW - –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö (—á—Ç–µ–Ω–∏–µ/–∑–∞–ø–∏—Å—å)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;D0-D7 - —à–∏–Ω–∞ –∫–æ–º–∞–Ω–¥/–¥–∞–Ω–Ω—ã—Ö&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;E - —Å—Ç—Ä–æ–±–∏—Ä–æ–≤–∞–Ω–∏–µ (—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥/–¥–∞–Ω–Ω—ã—Ö)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;–í—ã–≤–æ–¥ RW –º–æ–∂–Ω–æ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–æ–æ–±—â–µ –µ—Å–ª–∏ –Ω–µ—Ç –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–π –Ω—É–∂–¥—ã –ø—Ä–∏–Ω–∏–º–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ –ñ–ö (—ç—Ç–æ –æ–±—ã—á–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞), –∑–∞—á–∞—Å—Ç—É—é –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–æ–ª—å–∫–æ –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ HD44780. –¢–æ–≥–¥–∞ –≤—Å—ë —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–≤–æ–¥–∏—Ç—Å—è –∫ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏. –í–µ–¥—É—â–∏–π –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –≤—ã—Å—Ç–∞–≤–ª—è–µ—Ç –ø—Ä–∏–∑–Ω–∞–∫ RS - 0 —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—ã, 1 - –Ω–∞ –¥–∞–Ω–Ω—ã–µ, –≤—ã—Å—Ç–∞–≤–ª—è–µ—Ç –Ω–∞ –ª–∏–Ω–∏—è—Ö DB7‚Ä¶DB0 8-—Ä–∞–∑—Ä—è–¥–Ω—ã–π –∫–æ–¥, –ø–æ—Å–ª–µ —á–µ–≥–æ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –Ω–∞ –≤—ã–≤–æ–¥–µ E —Å—Ç—Ä–æ–±–∏—Ä—É—é—â–∏–π –∏–º–ø—É–ª—å—Å (–∞–∫—Ç–∏–≤–Ω—ã–π —Ñ—Ä–æ–Ω—Ç ‚Äì –∑–∞–¥–Ω–∏–π). –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—É HD44780 –º–æ–∂–µ—Ç –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –∫–∞–∫–æ–µ-—Ç–æ –≤—Ä–µ–º—è —á—Ç–æ–±—ã –ø–µ—Ä–µ–≤–∞—Ä–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –ø—Ä–∏–Ω—è—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã - –≤—Å–µ —ç—Ç–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–æ –≤ –¥–æ–∫–µ —Ä–æ–≤–Ω–æ –∫–∞–∫ –∏ –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫–æ–º–∞–Ω–¥ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–æ—Å–ª–µ –ø–æ–¥–∞—á–∏ –ø–∏—Ç–∞–Ω–∏—è. –ü–æ—Ä–∞ –±—ã —É–∂–µ –Ω–∞–ø–∏—Å–∞—Ç—å –∫–∞–∫–æ–π-–Ω–∏–±—É–¥—å –∫–æ–¥:  &lt;/p&gt;
&lt;p&gt;&lt;a href="https://mazko.github.io/blog/posts/2017/01/27/picsimjs-simvolnyi-displei-na-baze-hd44780/config-4620.h"&gt;config.h&lt;/a&gt; | &lt;a href="https://mazko.github.io/blog/posts/2017/01/27/picsimjs-simvolnyi-displei-na-baze-hd44780/main.hex"&gt;hex&lt;/a&gt; | &lt;a href="http://mazko.github.io/picsim.js/db3045c11c2927f3da25c387a27e72d0"&gt;picsim.js&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2017/01/27/picsimjs-simvolnyi-displei-na-baze-hd44780/hello.png" style="width:100%; border:1px solid #ddd;"&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;HD44780.h&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#ifndef HD44780_h&lt;/span&gt;
&lt;span class="cp"&gt;#define HD44780_h&lt;/span&gt;

&lt;span class="c1"&gt;// commands&lt;/span&gt;
&lt;span class="cp"&gt;#define LCD_CLEARDISPLAY    0x01&lt;/span&gt;
&lt;span class="cp"&gt;#define LCD_RETURNHOME      0x02&lt;/span&gt;
&lt;span class="cp"&gt;#define LCD_ENTRYMODESET    0x04&lt;/span&gt;
&lt;span class="cp"&gt;#define LCD_DISPLAYCONTROL  0x08&lt;/span&gt;
&lt;span class="cp"&gt;#define LCD_CURSORSHIFT     0x10&lt;/span&gt;
&lt;span class="cp"&gt;#define LCD_FUNCTIONSET     0x20&lt;/span&gt;
&lt;span class="cp"&gt;#define LCD_SETCGRAMADDR    0x40&lt;/span&gt;
&lt;span class="cp"&gt;#define LCD_SETDDRAMADDR    0x80&lt;/span&gt;

&lt;span class="c1"&gt;// flags for display entry mode&lt;/span&gt;
&lt;span class="cp"&gt;#define LCD_ENTRYRIGHT          0x00&lt;/span&gt;
&lt;span class="cp"&gt;#define LCD_ENTRYLEFT           0x02&lt;/span&gt;
&lt;span class="cp"&gt;#define LCD_ENTRYSHIFTINCREMENT 0x01&lt;/span&gt;
&lt;span class="cp"&gt;#define LCD_ENTRYSHIFTDECREMENT 0x00&lt;/span&gt;

&lt;span class="c1"&gt;// flags for display on/off control&lt;/span&gt;
&lt;span class="cp"&gt;#define LCD_DISPLAYON     0x04&lt;/span&gt;
&lt;span class="cp"&gt;#define LCD_DISPLAYOFF    0x00&lt;/span&gt;
&lt;span class="cp"&gt;#define LCD_CURSORON      0x02&lt;/span&gt;
&lt;span class="cp"&gt;#define LCD_CURSOROFF     0x00&lt;/span&gt;
&lt;span class="cp"&gt;#define LCD_BLINKON       0x01&lt;/span&gt;
&lt;span class="cp"&gt;#define LCD_BLINKOFF      0x00&lt;/span&gt;

&lt;span class="c1"&gt;// flags for display/cursor shift&lt;/span&gt;
&lt;span class="cp"&gt;#define LCD_DISPLAYMOVE   0x08&lt;/span&gt;
&lt;span class="cp"&gt;#define LCD_CURSORMOVE    0x00&lt;/span&gt;
&lt;span class="cp"&gt;#define LCD_MOVERIGHT     0x04&lt;/span&gt;
&lt;span class="cp"&gt;#define LCD_MOVELEFT      0x00&lt;/span&gt;

&lt;span class="c1"&gt;// flags for function set&lt;/span&gt;
&lt;span class="cp"&gt;#define LCD_8BITMODE      0x10&lt;/span&gt;
&lt;span class="cp"&gt;#define LCD_4BITMODE      0x00&lt;/span&gt;
&lt;span class="cp"&gt;#define LCD_2LINE         0x08&lt;/span&gt;
&lt;span class="cp"&gt;#define LCD_1LINE         0x00&lt;/span&gt;
&lt;span class="cp"&gt;#define LCD_5x10DOTS      0x04&lt;/span&gt;
&lt;span class="cp"&gt;#define LCD_5x8DOTS       0x00&lt;/span&gt;

&lt;span class="cp"&gt;#endif&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ö–∞–∫ –≤–∏–¥–Ω–æ –≤—Å–µ–≥–æ –∫–æ–º–∞–Ω–¥ –Ω–µ —Ç–∞–∫ —É–∂ –∏ –º–Ω–æ–≥–æ &lt;code&gt;LCD_CLEARDISPLAY...LCD_SETDDRAMADDR&lt;/code&gt;, –Ω–æ –¥–ª—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –º–æ–≥—É—Ç –±—ã—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–ª–∞–≥–∏ - –Ω–∞–ø—Ä–∏–º–µ—Ä –¥–ª—è &lt;code&gt;LCD_DISPLAYCONTROL&lt;/code&gt; —ç—Ç–æ &lt;code&gt;LCD_DISPLAYON...LCD_BLINKOFF&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;lcd.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;xc.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;HD44780.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#define LCD_EN_PIN  PORTEbits.RE1&lt;/span&gt;
&lt;span class="cp"&gt;#define LCD_RS_PIN  PORTEbits.RE2&lt;/span&gt;
&lt;span class="cp"&gt;#define LCD_PORT    PORTD&lt;/span&gt;

&lt;span class="cp"&gt;#define _LCD_DEFAULT_STATE_DISPLAYCONTROL (LCD_DISPLAYON | LCD_CURSORON | LCD_BLINKON)&lt;/span&gt;
&lt;span class="cp"&gt;#define _LCD_DEFAULT_STATE_DISPLAYMODE    (LCD_ENTRYLEFT | LCD_ENTRYSHIFTDECREMENT)&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;_lcd_wr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;LCD_PORT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;_lcd_en_pulse&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;__delay_ms&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;LCD_EN_PIN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;__delay_ms&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;LCD_EN_PIN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;lcd_cmd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;_lcd_wr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;LCD_RS_PIN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;_lcd_en_pulse&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;lcd_dat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;_lcd_wr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;LCD_RS_PIN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;_lcd_en_pulse&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;lcd_init&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// SEE PAGE 45/46 FOR INITIALIZATION SPECIFICATION!&lt;/span&gt;
  &lt;span class="c1"&gt;// according to datasheet, we need at least 40ms after power rises above 2.7V&lt;/span&gt;
  &lt;span class="n"&gt;__delay_ms&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="n"&gt;LCD_RS_PIN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;LCD_EN_PIN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// this is according to the hitachi HD44780 datasheet&lt;/span&gt;
  &lt;span class="c1"&gt;// page 45 figure 23&lt;/span&gt;
  &lt;span class="n"&gt;lcd_cmd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LCD_FUNCTIONSET&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;LCD_8BITMODE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;__delay_ms&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;lcd_cmd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LCD_FUNCTIONSET&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;LCD_8BITMODE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;__delay_ms&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;lcd_cmd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LCD_FUNCTIONSET&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;LCD_8BITMODE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="c1"&gt;// finally, set # lines, font size, etc.&lt;/span&gt;
  &lt;span class="n"&gt;lcd_cmd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LCD_FUNCTIONSET&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;LCD_8BITMODE&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;LCD_2LINE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="c1"&gt;// turn the display off&lt;/span&gt;
  &lt;span class="n"&gt;lcd_cmd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LCD_DISPLAYCONTROL&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;LCD_DISPLAYOFF&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="n"&gt;lcd_cmd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LCD_CLEARDISPLAY&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// clear display, set cursor position to zero&lt;/span&gt;
  &lt;span class="n"&gt;__delay_ms&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;             &lt;span class="c1"&gt;// this command takes a long time!&lt;/span&gt;

  &lt;span class="c1"&gt;// turn the display on with default cursor and blinking&lt;/span&gt;
  &lt;span class="n"&gt;lcd_cmd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LCD_DISPLAYCONTROL&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;_LCD_DEFAULT_STATE_DISPLAYCONTROL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="c1"&gt;// Initialize to default text direction (for romance languages)&lt;/span&gt;
  &lt;span class="n"&gt;lcd_cmd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LCD_ENTRYMODESET&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;_LCD_DEFAULT_STATE_DISPLAYMODE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ü—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ &lt;code&gt;lcd_init()&lt;/code&gt; –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–±–ª—é–¥–∞—Ç—å —Ä–∏—Ç—É–∞–ª —Å –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –∑–∞–¥–µ—Ä–∂–∫–∞–º–∏, –æ–ø–∏—Å–∞–Ω–Ω—ã–π –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –∫ HD44780.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;main.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt;  xc8 --chip=18f4620 main.c&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;

&lt;span class="cp"&gt;#define _XTAL_FREQ 5e4&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;xc.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;config-4620.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;lcd.c&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;lcd_print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;lcd_dat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="c1"&gt;// lcd&lt;/span&gt;
  &lt;span class="n"&gt;PORTD&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TRISD&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;PORTE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;TRISE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="n"&gt;lcd_init&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="n"&gt;lcd_cmd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LCD_SETDDRAMADDR&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="c1"&gt;// first line 0 column&lt;/span&gt;
  &lt;span class="n"&gt;lcd_print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hey PICSim.js !&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;lcd_cmd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LCD_SETDDRAMADDR&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mh"&gt;0x40&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// second line 0 column&lt;/span&gt;
  &lt;span class="n"&gt;lcd_print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Life is good :)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–£ PIC18 –¥–æ–≤–æ–ª—å–Ω–æ –º–Ω–æ–≥–æ –±–∏—Ç–æ–≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏, –ø–æ—ç—Ç–æ–º—É –¥–ª—è –Ω–∏—Ö –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ñ–∞–π–ª &lt;code&gt;config.h&lt;/code&gt;. –ü–µ—Ä–≤—ã–º –¥–µ–ª–æ–º —Å –ø–æ–º–æ—â—å—é —É–ø—Ä–∞–≤–ª—è—é—â–∏—Ö –∫–æ–º–∞–Ω–¥ &lt;code&gt;lcd_cmd&lt;/code&gt; –¥–∏—Å–ø–ª–µ–π –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è, –∑–∞—Ç–µ–º —Ç–µ–∫—Å—Ç –ø–µ—Ä–µ—Å—ã–ª–∞–µ—Ç—Å—è –≤ –≤–∏–¥–µ –¥–∞–Ω–Ω—ã—Ö &lt;code&gt;lcd_dat&lt;/code&gt;. –•–æ—Ç—è –≤–∏–¥–∏–º—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Å—Ç—Ä–æ–∫–µ –¥–∏—Å–ø–ª–µ—è –≤ –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ 16, –≤—Å–µ–≥–æ –∏—Ö —Ç–∞–º 64 (0x40) - –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø—Ä–æ—Å—Ç–æ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –ø–∞–º—è—Ç–∏ HD44780 –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞.&lt;/p&gt;
&lt;p&gt;–ü—Ä–∏ —Ä–∞–±–æ—Ç–µ HD44780 —Ç—Ä—É–¥–Ω–æ –¥–µ—Ä–∂–∞—Ç—å –≤—Å–µ —É–ø—Ä–∞–≤–ª—è—é—â–∏–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ –≤ –≥–æ–ª–æ–≤–µ, –ø–æ—ç—Ç–æ–º—É –∫–æ–¥ –Ω–µ –ø–æ–º–µ—à–∞–µ—Ç —É–ø—Ä–æ—Å—Ç–∏—Ç—å, –Ω–∞–ø—Ä–∏–º–µ—Ä –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –≤–∏–¥—É arduino –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ ¬´LiquidCrystal¬ª.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mazko.github.io/blog/posts/2017/01/27/picsimjs-simvolnyi-displei-na-baze-hd44780/config-4620.h"&gt;config.h&lt;/a&gt; | &lt;a href="https://mazko.github.io/blog/posts/2017/01/27/picsimjs-simvolnyi-displei-na-baze-hd44780/liquid-crystal.c"&gt;liquid-crystal.c&lt;/a&gt; | &lt;a href="https://mazko.github.io/blog/posts/2017/01/27/picsimjs-simvolnyi-displei-na-baze-hd44780/showtime.hex"&gt;hex&lt;/a&gt; | &lt;a href="http://mazko.github.io/picsim.js/1889b71bb6c0df4349565d08a7c01ddd"&gt;picsim.js&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt;  xc8 --chip=18f4620 main.c&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;

&lt;span class="cp"&gt;#define _XTAL_FREQ 5e4&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;xc.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdint.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;config-4620.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;liquid-crystal.c&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;clear_print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="n"&gt;lcd_clear&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// clear display, set cursor position to zero&lt;/span&gt;
  &lt;span class="n"&gt;lcd_print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// lcd&lt;/span&gt;
  &lt;span class="n"&gt;PORTD&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TRISD&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;PORTE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;TRISE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="n"&gt;lcd_init&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;clear_print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;PICSim.js :)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;lcd_set_cursor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// second line third column&lt;/span&gt;
    &lt;span class="n"&gt;lcd_print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Show time !&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;__delay_ms&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4444&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;clear_print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;No CURSOR&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;lcd_no_cursor&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;  &lt;span class="c1"&gt;// hide cursor&lt;/span&gt;
    &lt;span class="n"&gt;__delay_ms&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;lcd_cursor&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;     &lt;span class="c1"&gt;// show cursor&lt;/span&gt;

    &lt;span class="n"&gt;clear_print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;No BLINK&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;lcd_no_blink&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;  &lt;span class="c1"&gt;// blink OFF&lt;/span&gt;
    &lt;span class="n"&gt;__delay_ms&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;lcd_blink&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;     &lt;span class="c1"&gt;// blink ON&lt;/span&gt;

    &lt;span class="n"&gt;clear_print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ON/OFF&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;lcd_display&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;    &lt;span class="c1"&gt;// display ON&lt;/span&gt;
      &lt;span class="n"&gt;__delay_ms&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;lcd_no_display&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// display OFF&lt;/span&gt;
      &lt;span class="n"&gt;__delay_ms&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;lcd_display&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="n"&gt;clear_print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;SCROLL right&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;__delay_ms&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;lcd_scroll_display_right&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;clear_print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;SCROLL left&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;__delay_ms&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;lcd_scroll_display_left&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// PICSimLab: not implemented ?&lt;/span&gt;
    &lt;span class="c1"&gt;// lcd_right_to_left()&lt;/span&gt;
    &lt;span class="c1"&gt;// lcd_autoscroll()&lt;/span&gt;
    &lt;span class="c1"&gt;// lcd_create_char()&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–î–∞–Ω–Ω—ã–π –∫–æ–¥ –∑–∞—Ç–æ—á–µ–Ω –Ω–∞ –¥–∏—Å–ø–ª–µ–π, —Å–æ—Å—Ç–æ—è—â–∏–π –∏–∑ –¥–≤—É—Ö —Å—Ç—Ä–æ–∫ - —ç—Ç–æ –∑–∞–¥–∞—ë—Ç—Å—è –Ω–∞ —ç—Ç–∞–ø–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –æ–¥–∏–Ω —Ä–∞–∑ &lt;code&gt;LCD_8BITMODE | LCD_2LINE&lt;/code&gt;. –¢–∞–∫–∂–µ –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –Ω–æ–≥ –≤–≤–æ–¥–∞-–≤—ã–≤–æ–¥–∞ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ –º–æ–∂–Ω–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–µ–≥–∫–æ –ø–µ—Ä–µ–π—Ç–∏ —Å 8-–±–∏—Ç–Ω–æ–≥–æ –Ω–∞ 4-–±–∏—Ç–Ω—ã–π &lt;code&gt;LCD_4BITMODE&lt;/code&gt; —Ñ–æ—Ä–º–∞—Ç –ø–µ—Ä–µ–¥–∞—á–∏ –∫–æ–º–∞–Ω–¥/–¥–∞–Ω–Ω—ã—Ö, –ø–æ–ø—É—Ç–Ω–æ –Ω–µ–º–Ω–æ–≥–æ –ø–æ–¥–ø—Ä–∞–≤–∏–≤ —Ñ—É–Ω–∫—Ü–∏—é &lt;code&gt;_lcd_wr&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2017/01/27/picsimjs-simvolnyi-displei-na-baze-hd44780/ui.gif" style="width:100%; border:1px solid #ddd;"&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mazko.github.io/blog/posts/2017/01/28/picsimjs-analogo-tsifrovoi-preobrazovatel/"&gt;–î–∞–ª–µ–µ&lt;/a&gt; –∞–Ω–∞–ª–æ–≥–æ-—Ü–∏—Ñ—Ä–æ–≤–æ–π –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å (–ê–¶–ü).&lt;/p&gt;</content><category term="picsim"></category><category term="HD44780"></category></entry><entry><title>PICSim.js - —Å—Ç–æ—Ä–æ–∂–µ–≤–æ–π —Ç–∞–π–º–µ—Ä –∏ —Å–ø—è—â–∏–π —Ä–µ–∂–∏–º</title><link href="https://mazko.github.io/blog/posts/2017/01/17/picsimjs-storozhevoi-taimer-i-spiashchii-rezhim/" rel="alternate"></link><published>2017-01-17T00:00:00+02:00</published><updated>2017-01-17T00:00:00+02:00</updated><author><name>Oleg Mazko</name></author><id>tag:mazko.github.io,2017-01-17:/blog/posts/2017/01/17/picsimjs-storozhevoi-taimer-i-spiashchii-rezhim/</id><summary type="html">&lt;p&gt;–°—Ç–æ—Ä–æ–∂–µ–≤–æ–π —Ç–∞–π–º–µ—Ä (Watchdog Timer - ¬´—Å—Ç–æ—Ä–æ–∂–µ–≤–æ–π –ø—ë—Å¬ª) –≤ PIC –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞—Ö –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –≤–Ω–µ—à–Ω–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∏–∑ —Å–µ–±—è –æ–±—ã—á–Ω—ã–π &lt;a href="https://mazko.github.io/blog/posts/2016/12/22/ngspicejs-schetchiki-i-deliteli-chastoty/"&gt;—Å—á—ë—Ç—á–∏–∫&lt;/a&gt;, –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ —Ç–∞–∫—Ç–∏—Ä—É–µ–º—ã–π –æ—Ç –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–≥–æ RC-–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞. –°—Ç–æ—Ä–æ–∂–µ–≤–æ–π —Ç–∞–π–º–µ—Ä –º–æ–∂–Ω–æ –≥–ª–æ–±–∞–ª—å–Ω–æ –≤–∫–ª—é—á–∞—Ç—å/–æ—Ç–∫–ª—é—á–∞—Ç—å –≤ –±–∏—Ç–∞—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ &lt;code&gt;#pragma config WDTE = OFF|ON&lt;/code&gt; - –µ—Å–ª–∏ –≤–∫–ª—é—á—ë–Ω &lt;code&gt;WDTE = ON&lt;/code&gt;, —Ç–æ –≤ —Å–ª—É—á–∞–µ –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏—è —Å—á—ë—Ç—á–∏–∫–∞ –æ–±—ã—á–Ω–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∞–ø–ø–∞—Ä–∞—Ç–Ω—ã–π ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;–°—Ç–æ—Ä–æ–∂–µ–≤–æ–π —Ç–∞–π–º–µ—Ä (Watchdog Timer - ¬´—Å—Ç–æ—Ä–æ–∂–µ–≤–æ–π –ø—ë—Å¬ª) –≤ PIC –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞—Ö –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –≤–Ω–µ—à–Ω–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∏–∑ —Å–µ–±—è –æ–±—ã—á–Ω—ã–π &lt;a href="https://mazko.github.io/blog/posts/2016/12/22/ngspicejs-schetchiki-i-deliteli-chastoty/"&gt;—Å—á—ë—Ç—á–∏–∫&lt;/a&gt;, –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ —Ç–∞–∫—Ç–∏—Ä—É–µ–º—ã–π –æ—Ç –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–≥–æ RC-–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞. –°—Ç–æ—Ä–æ–∂–µ–≤–æ–π —Ç–∞–π–º–µ—Ä –º–æ–∂–Ω–æ –≥–ª–æ–±–∞–ª—å–Ω–æ –≤–∫–ª—é—á–∞—Ç—å/–æ—Ç–∫–ª—é—á–∞—Ç—å –≤ –±–∏—Ç–∞—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ &lt;code&gt;#pragma config WDTE = OFF|ON&lt;/code&gt; - –µ—Å–ª–∏ –≤–∫–ª—é—á—ë–Ω &lt;code&gt;WDTE = ON&lt;/code&gt;, —Ç–æ –≤ —Å–ª—É—á–∞–µ –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏—è —Å—á—ë—Ç—á–∏–∫–∞ –æ–±—ã—á–Ω–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∞–ø–ø–∞—Ä–∞—Ç–Ω—ã–π —Å–±—Ä–æ—Å –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞, —Ö–æ—Ç—è —Ç–∞–∫–∂–µ –≤–æ–∑–º–æ–∂–µ–Ω –æ—Å–æ–±—ã–π —Å–ª—É—á–∞–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å—Ç–æ—Ä–æ–∂–µ–≤–æ–≥–æ —Ç–∞–π–º–µ—Ä–∞ - —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –∏–∑ —Å–ø—è—â–µ–≥–æ —Ä–µ–∂–∏–º–∞.&lt;/p&gt;
&lt;p&gt;–ó–∞—á–µ–º –Ω—É–∂–µ–Ω —Å—Ç–æ—Ä–æ–∂–µ–≤–æ–π —Ç–∞–π–º–µ—Ä ? –ü—Ä–æ–≥—Ä–∞–º–º—ã –≤ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞—Ö –Ω–∞–ø—Ä—è–º—É—é –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É—é—Ç —Å –∂–µ–ª–µ–∑–æ–º –∏ –∏–Ω–æ–≥–¥–∞ —Å–ª—É—á–∞—é—Ç—Å—è –≤–Ω–µ—à—Ç–∞—Ç–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏, –∫–æ–≥–¥–∞ –ø–æ —Ç–µ–º –∏–ª–∏ –∏–Ω—ã–º –ø—Ä–∏—á–∏–Ω–∞–º –ø—Ä–æ–≥—Ä–∞–º–º–∞ –º–æ–∂–µ—Ç –∑–∞–≤–∏—Å–Ω—É—Ç—å - –ø—Ä–∏—á–∏–Ω–æ–π —Ç–æ–º—É –º–æ–∂–µ—Ç –±—ã—Ç—å –∫–∞–∫ –∞–ø–ø–∞—Ä–∞—Ç–Ω—ã–π —Å–±–æ–π, —Ç–∞–∫ –∏ –æ—à–∏–±–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞. –í —Ç–∞–∫–∏—Ö —Å–ª—É—á–∞—è—Ö –Ω—É–∂–Ω–æ –∏–¥—Ç–∏ –∏ —Ä—É—á–∫–∞–º–∏ –≤—ã–¥–µ—Ä–≥–∏–≤–∞—Ç—å –ø–∏—Ç–∞–Ω–∏–µ –∏–ª–∏ –Ω–∞–∂–∏–º–∞—Ç—å –∫–Ω–æ–ø–æ—á–∫—É —Å–±—Ä–æ—Å–∞. –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–æ–π —ç—Ç–æ–º—É –∫–∞–∫ —Ä–∞–∑ –∏ —è–≤–ª—è–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å—Ç–æ—Ä–æ–∂–µ–≤–æ–≥–æ —Ç–∞–π–º–µ—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π —Å–±—Ä–æ—Å–∏—Ç –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mazko.github.io/blog/posts/2017/01/17/picsimjs-storozhevoi-taimer-i-spiashchii-rezhim/main.hex"&gt;hex&lt;/a&gt; | &lt;a href="http://mazko.github.io/picsim.js/3cfca08cb95e5bb6ba688747d58168d2"&gt;picsim.js&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt;  xc8 --chip=16f648A main.c&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;xc.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdint.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#pragma config WDTE = ON&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="c1"&gt;// The WDT has a nominal time-out period of 18 ms (with no prescaler).&lt;/span&gt;
  &lt;span class="c1"&gt;// If longer time-out periods are desired, a postscaler with a division ratio&lt;/span&gt;
  &lt;span class="c1"&gt;// of up to 1:128 can be assigned to the WDT under&lt;/span&gt;
  &lt;span class="c1"&gt;// software control by writing to the OPTION register. Thus,&lt;/span&gt;
  &lt;span class="c1"&gt;// time-out periods up to 2.3 seconds can be realized&lt;/span&gt;

  &lt;span class="n"&gt;OPTION_REGbits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PS0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;OPTION_REGbits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PS1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;OPTION_REGbits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PS2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// 1:128; 2.3 sec&lt;/span&gt;
  &lt;span class="n"&gt;OPTION_REGbits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PSA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// prescaler is assigned to watchdog&lt;/span&gt;

  &lt;span class="c1"&gt;// looks like STATUS [TO, PD] are not implemented in original PICSim - always 0&lt;/span&gt;
  &lt;span class="n"&gt;PORTB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;STATUS&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;PORTA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TRISB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TRISA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="n"&gt;RA0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;uint16_t&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;333&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;);&lt;/span&gt; &lt;span class="c1"&gt;// simple delay&lt;/span&gt;
  &lt;span class="n"&gt;RA0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// CLRWDT();&lt;/span&gt;
    &lt;span class="c1"&gt;// do something useful&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ø–µ—Ä–∏–æ–¥ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è —Å—Ç–æ—Ä–æ–∂–µ–≤–æ–≥–æ —Ç–∞–π–º–µ—Ä–∞ —É PIC16F648A –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ 18 –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥, &lt;a href="https://bc.js.org/"&gt;–º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π&lt;/a&gt; &lt;code&gt;0.018*128=2.304&lt;/code&gt; —Å–µ–∫—É–Ω–¥—ã. –¢–∞–∫ –∫–∞–∫ –≤ –¥–∞–Ω–Ω–æ–º –ø—Ä–∏–º–µ—Ä–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç –∑–∞–±—ã–ª –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ –æ—á–∏—â–∞—Ç—å —Å—á—ë—Ç—á–∏–∫ —Å—Ç–æ—Ä–æ–∂–µ–≤–æ–≥–æ —Ç–∞–π–º–µ—Ä–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π –∫–æ–º–∞–Ω–¥–æ–π &lt;code&gt;CLRWDT();&lt;/code&gt; —Ç–æ —á–µ—Ä–µ–∑ –∫–∞–∂–¥—ã–µ 2.3 —Å–µ–∫—É–Ω–¥—ã –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è –∏ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ —Å–≤–µ—Ç–æ–¥–∏–æ–¥ RA0 –º–∏–≥–∞–µ—Ç. –ï—Å–ª–∏ &lt;a href="http://mazko.github.io/picsim.js/098c4473a3356f0082c583d299b8eb95"&gt;—Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å&lt;/a&gt; &lt;code&gt;// CLRWDT();&lt;/code&gt; —Å–≤–µ—Ç–æ–¥–∏–æ–¥ RA0 –∫–æ–Ω–µ—á–Ω–æ –∂–µ –±—É–¥–µ—Ç —Å–≤–µ—Ç–∏—Ç—å—Å—è –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ. –ü—Ä–∏—á–∏–Ω—É —Å–±—Ä–æ—Å–∞ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ –ø–æ –∏–¥–µ–µ –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –ø–æ —Å–æ—Å—Ç–æ—è–Ω–∏—é —Ñ–ª–∞–≥–æ–≤ TO, PD –≤ —Ä–µ–≥–∏—Å—Ç—Ä–µ STATUS, —Ö–æ—Ç—è –ø–æ—Ö–æ–∂–µ –≤ picsim —ç—Ç–æ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ.&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2017/01/17/picsimjs-storozhevoi-taimer-i-spiashchii-rezhim/ui.gif" style="width:100%; border:1px solid #ddd;"&gt;&lt;/p&gt;
&lt;p&gt;–ß—Ç–æ –∫–∞—Å–∞–µ—Ç—Å—è —Å–ø—è—â–∏–π —Ä–µ–∂–∏–º–∞, —Ç–æ –æ–Ω –ø–æ–∑–≤–æ–ª—è–µ—Ç –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —Å–Ω–∏–∑–∏—Ç—å —ç–Ω–µ—Ä–≥–æ–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ. –î–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∞ —Å–ø—è—â–∏–π —Ä–µ–∂–∏–º —É PIC –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ &lt;code&gt;SPEEP()&lt;/code&gt;, –ø–æ—Å–ª–µ –∫–æ—Ç–æ—Ä–æ–π —Ç–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ –ø—Ä–µ–∫—Ä–∞—â–∞—é—Ç—Å—è, —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—Å–µ—Ö —Ä–µ–≥–∏—Å—Ç—Ä–æ–≤ –≤ —Ç–æ–º —á–∏—Å–ª–µ –∏ –ø–æ—Ä—Ç–æ–≤ –≤–≤–æ–¥–∞-–≤—ã–≤–æ–¥–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –∏ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ —ç–Ω–µ—Ä–≥–∏–∏ —Å–≤–æ–¥–∏—Ç—Å—è –∫ –º–∏–Ω–∏–º—É–º—É - –æ–±—ã—á–Ω–æ –µ–¥–∏–Ω–∏—Ü—ã –º–∏–∫—Ä–æ–∞–º–ø–µ—Ä. –í—ã–π—Ç–∏ –∏–∑ —Å–ø—è—â–µ–≥–æ —Ä–µ–∂–∏–º–∞ –º–æ–∂–Ω–æ –ª–∏–±–æ –ø–æ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—é –ª–∏–±–æ –ø—Ä–∏ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–∏ —Å—Ç–æ—Ä–æ–∂–µ–≤–æ–≥–æ —Ç–∞–π–º–µ—Ä–∞.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mazko.github.io/blog/posts/2017/01/17/picsimjs-storozhevoi-taimer-i-spiashchii-rezhim/main-sleep.hex"&gt;hex&lt;/a&gt; | &lt;a href="http://mazko.github.io/picsim.js/7e2d324a527f5bc49a6b891bd4dd7ec7"&gt;picsim.js&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt;  xc8 --chip=16f648A main.c&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;xc.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdint.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#pragma config WDTE = ON&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="n"&gt;OPTION_REGbits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PS1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;OPTION_REGbits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PS2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;OPTION_REGbits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PS0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// 1:64; 1.152 sec&lt;/span&gt;
  &lt;span class="n"&gt;OPTION_REGbits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PSA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// prescaler is assigned to watchdog&lt;/span&gt;

  &lt;span class="n"&gt;PORTB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TRISB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="n"&gt;last_led&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;SLEEP&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;last_led&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;last_led&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;last_led&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;PORTB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;last_led&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–í –¥–∞–Ω–Ω–æ–º –ø—Ä–∏–º–µ—Ä–µ –≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –Ω–µ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è –∞ –ø—Ä–æ—Å—ã–ø–∞–µ—Ç—Å—è –æ—Ç —Å—Ç–æ—Ä–æ–∂–µ–≤–æ–≥–æ —Ç–∞–π–º–µ—Ä–∞ –∫–∞–∂–¥—ã–µ 1.152 —Å–µ–∫—É–Ω–¥—ã, –ø–µ—Ä–µ–¥–≤–∏–≥–∞–µ—Ç —Å–≤–µ—Ç–æ–¥–∏–æ–¥ –∏ –∑–∞—Å—ã–ø–∞–µ—Ç –∑–∞–Ω–æ–≤–æ. –û—Å–Ω–æ–≤–Ω–æ–µ —ç–Ω–µ—Ä–≥–æ–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–≤–µ—á–µ–Ω–∏–µ —Å–≤–µ—Ç–æ–¥–∏–æ–¥–∞.&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2017/01/17/picsimjs-storozhevoi-taimer-i-spiashchii-rezhim/ui-sleep.gif" style="width:100%; border:1px solid #ddd;"&gt;&lt;/p&gt;
&lt;p&gt;–°—Ç–æ—Ä–æ–∂–µ–≤–æ–π —Ç–∞–π–º–µ—Ä —è–≤–ª—è–µ—Ç—Å—è –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç—ã–º –∏ –ø–æ–ª–µ–∑–Ω—ã–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–º, –ø—Ä–∏–¥–∞—é—â–∏–º –Ω–∞–¥—ë–∂–Ω–æ—Å—Ç–∏ —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º–æ–π —Å–∏—Å—Ç–µ–º–µ. –û—Å–æ–±–µ–Ω–Ω–æ –∫–æ–≥–¥–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –ø–æ–∫–∏–¥–∞–µ—Ç –ø—Ä–µ–¥–µ–ª—ã —É—é—Ç–Ω–æ–π –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –∏–∑ –±–µ—Ä–µ–∂–Ω—ã—Ö —Ä—É–∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫ —Ä–µ–∞–ª—å–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mazko.github.io/blog/posts/2017/01/27/picsimjs-simvolnyi-displei-na-baze-hd44780/"&gt;–î–∞–ª–µ–µ&lt;/a&gt; –ø–æ–ø—Ä–æ–±—É–µ–º –ª–∏–Ω–µ–π–∫—É PIC18 –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤ –∏ –Ω–∞—á–Ω—ë–º —Å —Å–∏–º–≤–æ–ª—å–Ω–æ–≥–æ LCD –¥–∏—Å–ø–ª–µ—è –Ω–∞ –±–∞–∑–µ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ HD44780.&lt;/p&gt;</content><category term="picsim"></category></entry><entry><title>PICSim.js - —Å–µ–º–∏—Å–µ–≥–º–µ–Ω—Ç–Ω—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∏ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è</title><link href="https://mazko.github.io/blog/posts/2017/01/16/picsimjs-semisegmentnyi-indikator-i-preryvaniia/" rel="alternate"></link><published>2017-01-16T00:00:00+02:00</published><updated>2017-01-16T00:00:00+02:00</updated><author><name>Oleg Mazko</name></author><id>tag:mazko.github.io,2017-01-16:/blog/posts/2017/01/16/picsimjs-semisegmentnyi-indikator-i-preryvaniia/</id><summary type="html">&lt;p&gt;–°–µ–º–∏—Å–µ–≥–º–µ–Ω—Ç–Ω—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã - –Ω–∞–∏–±–æ–ª–µ–µ –ø—Ä–æ—Å—Ç–æ–π —Å–ø–æ—Å–æ–± –¥–ª—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ü–∏—Ñ—Ä–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –≤–∏–¥–µ –∞—Ä–∞–±—Å–∫–∏—Ö —Ü–∏—Ñ—Ä –∏ –¥–∞–∂–µ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –±—É–∫–≤ (–¥–ª—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –±—É–∫–≤ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–µ –º–Ω–æ–≥–æ—Å–µ–≥–º–µ–Ω—Ç–Ω—ã–µ –∏ –º–∞—Ç—Ä–∏—á–Ω—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã). –°–≤–µ—Ç–æ–¥–∏–æ–¥–Ω—ã–µ —Å–µ–º–∏—Å–µ–≥–º–µ–Ω—Ç–Ω—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –∏–º–µ—é—Ç –≤—ã—Å–æ–∫—É—é —è—Ä–∫–æ—Å—Ç—å, —à–∏—Ä–æ–∫–∏–π –¥–∏–∞–ø–∞–∑–æ–Ω —Ä–∞–±–æ—á–∏—Ö —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä, –Ω–∏–∑–∫—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç—ã –≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏. –ì–ª–∞–≤–Ω—ã–º–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–∞–º–∏ —Å–≤–µ—Ç–æ–¥–∏–æ–¥–Ω—ã—Ö –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤ —è–≤–ª—è—é—Ç—Å—è ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;–°–µ–º–∏—Å–µ–≥–º–µ–Ω—Ç–Ω—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã - –Ω–∞–∏–±–æ–ª–µ–µ –ø—Ä–æ—Å—Ç–æ–π —Å–ø–æ—Å–æ–± –¥–ª—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ü–∏—Ñ—Ä–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –≤–∏–¥–µ –∞—Ä–∞–±—Å–∫–∏—Ö —Ü–∏—Ñ—Ä –∏ –¥–∞–∂–µ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –±—É–∫–≤ (–¥–ª—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –±—É–∫–≤ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–µ –º–Ω–æ–≥–æ—Å–µ–≥–º–µ–Ω—Ç–Ω—ã–µ –∏ –º–∞—Ç—Ä–∏—á–Ω—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã). –°–≤–µ—Ç–æ–¥–∏–æ–¥–Ω—ã–µ —Å–µ–º–∏—Å–µ–≥–º–µ–Ω—Ç–Ω—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –∏–º–µ—é—Ç –≤—ã—Å–æ–∫—É—é —è—Ä–∫–æ—Å—Ç—å, —à–∏—Ä–æ–∫–∏–π –¥–∏–∞–ø–∞–∑–æ–Ω —Ä–∞–±–æ—á–∏—Ö —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä, –Ω–∏–∑–∫—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç—ã –≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏. –ì–ª–∞–≤–Ω—ã–º–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–∞–º–∏ —Å–≤–µ—Ç–æ–¥–∏–æ–¥–Ω—ã—Ö –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤ —è–≤–ª—è—é—Ç—Å—è –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –≤—ã—Å–æ–∫–æ–µ —ç–Ω–µ—Ä–≥–æ–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –∏ —Å–ª–∞–±–∞—è –≤–∏–¥–∏–º–æ—Å—Ç—å –ø—Ä–∏ —è—Ä–∫–æ–º –æ—Å–≤–µ—â–µ–Ω–∏–∏, —Ö–æ—Ç—è –Ω–∞ –Ω–∞—à–µ–º –º–æ–¥–Ω–æ–º —Ü–≤–µ—Ç–Ω–æ–º –º–æ–±–∏–ª—å–Ω–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–µ —Ç–æ–∂–µ –Ω–∏—á–µ–≥–æ –Ω–µ –≤–∏–¥–Ω–æ –Ω–∞ —Å–æ–ª–Ω—ã—à–∫–µ –¥–Ω—ë–º :)&lt;/p&gt;
&lt;p&gt;–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω–æ —Å–≤–µ—Ç–æ–¥–∏–æ–¥–Ω—ã–π —Å–µ–º–∏—Å–µ–≥–º–µ–Ω—Ç–Ω—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π –≥—Ä—É–ø–ø—É –∏–∑ —Å–µ–º–∏ —Å–≤–µ—Ç–æ–¥–∏–æ–¥–æ–≤, —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ. –í–∫–ª—é—á–∞—è –∏—Ö –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∫–æ–º–±–∏–Ω–∞—Ü–∏—è—Ö –º–æ–∂–Ω–æ —Å–æ—Å—Ç–∞–≤–∏—Ç—å —É–ø—Ä–æ—â—ë–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ü–∏—Ñ—Ä 0..9. –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã —Ä–∞–∑–ª–∏—á–∞—é—Ç—Å—è –ø–æ —Ä–∞–∑–º–µ—Ä—É, —Ç–∏–ø—É —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å–≤–µ—Ç–æ–¥–∏–æ–¥–æ–≤ - –æ–±—â–∏–π –∞–Ω–æ–¥, –æ–±—â–∏–π –∫–∞—Ç–æ–¥, –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã—Ö —Ä–∞–∑—Ä—è–¥–æ–≤ - –æ–¥–Ω–æ—Ä–∞–∑—Ä—è–¥–Ω—ã–µ, –¥–≤—É—Ö—Ä–∞–∑—Ä—è–¥–Ω—ã–µ –∏ –±–æ–ª–µ–µ, –ø–æ —è—Ä–∫–æ—Å—Ç–∏ —Å–≤–µ—á–µ–Ω–∏—è –∏ –ø–æ —Ü–≤–µ—Ç—É - –∫—Ä–∞—Å–Ω—ã–µ, –∂–µ–ª—Ç—ã–µ, –∑–µ–ª–µ–Ω—ã–µ –∏ —Ç.–¥. &lt;/p&gt;
&lt;p&gt;&lt;a href="https://mazko.github.io/blog/posts/2017/01/16/picsimjs-semisegmentnyi-indikator-i-preryvaniia/7.hex"&gt;hex&lt;/a&gt; | &lt;a href="http://mazko.github.io/picsim.js/69cc6064062b774abdb3734521cf01a8"&gt;picsim.js&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;display7.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdint.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="nf"&gt;display7&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mh"&gt;0xEE&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mh"&gt;0x28&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mh"&gt;0xCD&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mh"&gt;0x6D&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mh"&gt;0x2B&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mh"&gt;0x67&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mh"&gt;0xE7&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mh"&gt;0x2C&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mh"&gt;0xEF&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mh"&gt;0x6F&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mh"&gt;0xAF&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mh"&gt;0xE3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mh"&gt;0xC6&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mh"&gt;0xE9&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mh"&gt;0xC7&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mh"&gt;0x87&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;main.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt;  xc8 --chip=16f648A main.c&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;xc.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdint.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;display7.c&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#pragma config WDTE = OFF&lt;/span&gt;

&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="n"&gt;porta_btn_mask&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;b11110&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="n"&gt;display_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="n"&gt;last_buttons&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="n"&gt;PORTB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TRISB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="n"&gt;buttons&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PORTA&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;porta_btn_mask&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;last_buttons&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;buttons&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;last_buttons&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;buttons&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;RA1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;display_data&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;RA2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;display_data&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;RA3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;display_data&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;RA4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;display_data&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="n"&gt;PORTB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;display7&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;display_data&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0xF&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–í –¥–∞–Ω–Ω–æ–º –ø—Ä–∏–º–µ—Ä–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–∞–∏–±–æ–ª–µ–µ –ø—Ä–æ—Å—Ç–æ–π –≤–∏–¥ –∏–Ω–¥–∏–∫–∞—Ü–∏–∏ - &lt;em&gt;—Å—Ç–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω–¥–∏–∫–∞—Ü–∏—è&lt;/em&gt;, –≤ —Ç–∞–∫–æ–º —Ä–µ–∂–∏–º–µ –∫–∞–∂–¥—ã–π —Å–µ–≥–º–µ–Ω—Ç –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –æ–¥–Ω–æ–º –∏–∑ –¥–≤—É—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π - –≤–∫–ª—é—á–µ–Ω –∏–ª–∏ –≤—ã–∫–ª—é—á–µ–Ω. –§—É–Ω–∫—Ü–∏—è &lt;code&gt;display7&lt;/code&gt; –ø—Ä–∏–≤–æ–¥–∏—Ç –¥–≤–æ–∏—á–Ω–æ–µ —á–∏—Å–ª–æ –≤ –∫–æ–¥ —Å–µ–º–∏—Å–µ–≥–º–µ–Ω—Ç–Ω–æ–≥–æ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∏ –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å —à–µ—Å—Ç–Ω–∞–¥—Ü–∞—Ç–∏—Ä–∏—á–Ω–æ–µ —á–∏—Å–ª–æ 0..F.&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2017/01/16/picsimjs-semisegmentnyi-indikator-i-preryvaniia/ui.gif" style="width:100%; border:1px solid #ddd;"&gt;&lt;/p&gt;
&lt;p&gt;–î–ª—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ä–∞–∑—Ä—è–¥–æ–≤ —Å–µ–º–∏—Å–µ–≥–º–µ–Ω—Ç–Ω–æ–≥–æ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤ —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç &lt;em&gt;–¥–∏–Ω–∞–º–∏—á–µ—Å–∫—É—é –∏–Ω–¥–∏–∫–∞—Ü–∏—é&lt;/em&gt; (–¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ), –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞–µ—Ç –ø–æ–æ—á–µ—Ä–µ–¥–Ω–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–∑—Ä—è–¥–æ–≤ —Å —á–∞—Å—Ç–æ—Ç–æ–π, –Ω–µ –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞–µ–º–æ–π —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–º –≥–ª–∞–∑–æ–º. –î–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π –∏–Ω–¥–∏–∫–∞—Ü–∏–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –º–µ–Ω—å—à–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–≥ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ –∏ –º–µ–Ω—å—à–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–Ω–µ—à–Ω–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤. –ù–∞ –∏—Å—Å–ª–µ–¥—É–µ–º–æ–π –ø–ª–∞—Ç–µ –Ω–æ–≥–∞ RB4 –∫–∞–∫ —Ä–∞–∑ –∏ –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è –ø–æ–æ—á–µ—Ä—ë–¥–Ω—ã–º –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ–º –¥–≤—É—Ö —Ä–∞–∑—Ä—è–¥–æ–≤ - –ø—Ä–∏ –Ω—É–ª–µ –Ω–∞ RB4 –¥–∞–Ω–Ω—ã–µ —Å PORTB –ø–æ–ø–∞–¥–∞—é—Ç –Ω–∞ –ª–µ–≤—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä, –ø—Ä–∏ –µ–¥–∏–Ω–∏—Ü–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ –Ω–∞ –ø—Ä–∞–≤—ã–π.&lt;/p&gt;
&lt;p&gt;–ó–∞–¥–∞—á–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–∞–∑—Ä—è–¥–æ–≤ —Å–µ–º–∏—Å–µ–≥–º–µ–Ω—Ç–Ω—ã—Ö –¥–æ–≤–æ–ª—å–Ω–æ –∫—Ä–∏—Ç–∏—á–Ω–∞ –∫–æ –≤—Ä–µ–º–µ–Ω–∏ - –ø—Ä–∏ –µ–≥–æ –Ω–µ—Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ –æ–¥–∏–Ω —Ä–∞–∑—Ä—è–¥ –±—É–¥–µ—Ç —è—Ä—á–µ –¥—Ä—É–≥–æ–≥–æ, —á—Ç–æ –ø—Ä–∏–≤–µ–¥—ë—Ç –∫ –Ω–µ–ø—Ä–∏—è—Ç–Ω—ã–º –¥–ª—è —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ –≥–ª–∞–∑–∞ —ç—Ñ—Ñ–µ–∫—Ç–∞–º, –º–µ—Ä—Ü–∞–Ω–∏—è–º. –î–ª—è –∑–∞–¥–∞—á, –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö –∫–æ –≤—Ä–µ–º–µ–Ω–∏ —Ä–µ–∞–∫—Ü–∏–∏ –Ω–∞ –≤–æ–∑–Ω–∏–∫—à–∏–µ —Å–æ–±—ã—Ç–∏—è –≤ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞—Ö –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω—ã –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è - –æ—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª &lt;code&gt;main()&lt;/code&gt; –ø—Ä–∏–æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è (–ø—Ä–µ—Ä—ã–≤–∞–µ—Ç—Å—è), —Å–æ—Ö—Ä–∞–Ω—è—è —Å–≤–æ–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è, –æ—Ç—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ª–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è, –ø–æ—Å–ª–µ —á–µ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–Ω–æ–≤–∞ –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è &lt;code&gt;main()&lt;/code&gt;, –ø—Ä–∏ —ç—Ç–æ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π —Ä–∞–Ω–µ–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mazko.github.io/blog/posts/2017/01/16/picsimjs-semisegmentnyi-indikator-i-preryvaniia/main.hex"&gt;hex&lt;/a&gt; | &lt;a href="http://mazko.github.io/picsim.js/d7c032cf6e1c90c841d5f42e9130b22f"&gt;picsim.js&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;isr.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;xc.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdint.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdbool.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;display7.c&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="c1"&gt;// C89, section 6.5.7 Initialization.&lt;/span&gt;
&lt;span class="c1"&gt;// If an object that has static storage duration is not initialized explicitly, then:&lt;/span&gt;
&lt;span class="c1"&gt;// - if it has arithmetic type, it is initialized to (positive or unsigned) zero;&lt;/span&gt;

&lt;span class="c1"&gt;// interface&lt;/span&gt;
&lt;span class="k"&gt;volatile&lt;/span&gt; &lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="n"&gt;display_data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// http://microchip.wikidot.com/faq:31&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;interrupt&lt;/span&gt; &lt;span class="nf"&gt;_int_7&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   &lt;span class="c1"&gt;// interrupt function &lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;current_7&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;INTCONbits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T0IF&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;INTCONbits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T0IE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
  &lt;span class="p"&gt;{&lt;/span&gt;                           &lt;span class="c1"&gt;// if timer flag is set &amp;amp; interrupt enabled&lt;/span&gt;
    &lt;span class="n"&gt;INTCONbits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T0IF&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;      &lt;span class="c1"&gt;// clear the interrupt flag &lt;/span&gt;
    &lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;display7&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;current_7&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;display_data&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0xF&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;display_data&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;PORTB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;current_7&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;b10000&lt;/span&gt; &lt;span class="cm"&gt;/* RB4 */&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;current_7&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;current_7&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;main.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt;  xc8 --chip=16f648A main.c isr.c&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;xc.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdint.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#pragma config WDTE = OFF&lt;/span&gt;

&lt;span class="k"&gt;extern&lt;/span&gt; &lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="n"&gt;display_data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="n"&gt;porta_btn_mask&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;b11110&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="n"&gt;last_buttons&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="n"&gt;OPTION_REGbits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T0CS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;     &lt;span class="c1"&gt;// Timer0 increments on instruction clock&lt;/span&gt;
  &lt;span class="n"&gt;OPTION_REGbits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PSA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;      &lt;span class="c1"&gt;// Prescaler is assigned to the Timer0 module&lt;/span&gt;
  &lt;span class="n"&gt;OPTION_REGbits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PS0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;OPTION_REGbits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PS1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;OPTION_REGbits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PS2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;      &lt;span class="c1"&gt;// Prescaler 1:4; T0IF each 256*4 cycle&lt;/span&gt;
  &lt;span class="n"&gt;INTCONbits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T0IE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="c1"&gt;// Enable interrupt on TMR0 overflow&lt;/span&gt;
  &lt;span class="n"&gt;INTCONbits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GIE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;          &lt;span class="c1"&gt;// Global interrupt enable&lt;/span&gt;

  &lt;span class="n"&gt;PORTB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TRISB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="n"&gt;buttons&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PORTA&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;porta_btn_mask&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;last_buttons&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;buttons&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;last_buttons&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;buttons&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;RA1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;display_data&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;RA2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;display_data&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;RA3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;display_data&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;RA4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;display_data&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–í —Ñ–∞–π–ª–µ &lt;code&gt;isr.c&lt;/code&gt; —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –ª–æ–≥–∏–∫–∞, –æ—Ç–≤–µ—á–∞—é—â–∞—è –∑–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–∞ —Å–µ–º–∏—Å–µ–≥–º–µ–Ω—Ç–Ω–æ–º –¥–∏—Å–ø–ª–µ–µ. –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è &lt;code&gt;isr.c&lt;/code&gt; —Å –¥—Ä—É–≥–∏–º–∏ –ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã–º–∏ –º–æ–¥—É–ª—è–º–∏, —Ç–∞–∫–∏–º–∏ –∫–∞–∫ &lt;em&gt;main.c&lt;/em&gt;, —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é &lt;code&gt;display_data&lt;/code&gt;. –§—É–Ω–∫—Ü–∏—è &lt;code&gt;display7&lt;/code&gt; –Ω–µ –≤—Ö–æ–¥–∏—Ç –≤ —ç—Ç–æ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∏ –ø–æ—ç—Ç–æ–º—É –æ–±—ä—è–≤–ª–µ–Ω–∞ –∫–∞–∫ &lt;code&gt;static&lt;/code&gt;, —Ç.–µ. –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö —Å–≤–æ–µ–≥–æ –º–æ–¥—É–ª—è. –ì—Ä–∞–º–æ—Ç–Ω–æ–µ –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç—å –¥–ª—è –º–æ–¥—É–ª–µ–π –∑–æ–Ω—ã –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∏ –∏–Ω–∫–∞–ø—Å—É–ª–∏—Ä–æ–≤–∞—Ç—å –∏—Ö —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é. 
–ú–æ–¥—É–ª–∏, –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –Ω–∞ —ç—Ç–∞–ø–µ –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã, –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –º–∏–Ω–∏–º–∞–ª—å–Ω–æ —Å–≤—è–∑–∞–Ω–Ω—ã –¥—Ä—É–≥ —Å –¥—Ä—É–≥–æ–º (–°–ª–∞–±–∞—è –°–≤—è–∑–∞–Ω–Ω–æ—Å—Ç—å, Low Coupling). –ü—Ä–∏ —Ç–∞–∫–æ–º –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –≤ —Å–ª—É—á–∞–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ–¥–Ω–æ–≥–æ –º–æ–¥—É–ª—è –Ω–µ –ø—Ä–∏–¥–µ—Ç—Å—è –ø—Ä–∞–≤–∏—Ç—å –¥—Ä—É–≥–∏–µ –∏–ª–∏ —ç—Ç–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –±—É–¥—É—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏. –ß–µ–º —Å–ª–∞–±–µ–µ —Å–≤—è–∑–∞–Ω–Ω–æ—Å—Ç—å, —Ç–µ–º –ª–µ–≥—á–µ –ø–∏—Å–∞—Ç—å/–ø–æ–Ω–∏–º–∞—Ç—å/—Ä–∞—Å—à–∏—Ä—è—Ç—å/—á–∏–Ω–∏—Ç—å –ª—é–±—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É –Ω–∞ –ª—é–±–æ–º —è–∑—ã–∫–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è.&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2017/01/16/picsimjs-semisegmentnyi-indikator-i-preryvaniia/ui-int.gif" style="width:100%; border:1px solid #ddd;"&gt;&lt;/p&gt;
&lt;p&gt;–¢–∞–∫ –∫–∞–∫ &lt;a href="https://mazko.github.io/blog/posts/2017/01/14/picsimjs-shirotno-impulsnaia-moduliatsiia/"&gt;—Å–∫–≤–∞–∂–Ω–æ—Å—Ç—å&lt;/a&gt; –∏–º–ø—É–ª—å—Å–æ–≤ –Ω–∞ RB4 —Ä–∞–≤–Ω–∞ –¥–≤—É–º —è—Ä–∫–æ—Å—Ç—å —Å–≤–µ—á–µ–Ω–∏—è –∫–∞–∂–¥–æ–≥–æ –∏–∑ —Ä–∞–∑—Ä—è–¥–æ–≤ —Å–µ–º–∏—Å–µ–≥–º–µ–Ω—Ç–Ω–æ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –ø–æ—Ä–æ–≤–Ω—É –æ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π.&lt;/p&gt;
&lt;p&gt;–ò –Ω–∞–ø–æ—Å–ª–µ–¥–æ–∫ –æ–¥–Ω–æ –∑–∞–º–µ—á–∞–Ω–∏–µ –ø–æ –∫–æ–¥—É &lt;code&gt;extern uint8_t display_data;&lt;/code&gt;, –∫–æ—Ç–æ—Ä—ã–π —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –≤ –¥—Ä—É–≥–æ–º —Ñ–∞–π–ª–µ. –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ –°–∏ –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä —Ç—É—Ç –Ω–µ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–∏–ø—ã –∏ –ø–æ—ç—Ç–æ–º—É –æ—Å—Ç–∞–≤–∏—Ç –±–µ–∑ –≤–Ω–∏–º–∞–Ω–∏—è –∫–∞–∫—É—é-–Ω–∏–±—É–¥—å –µ—Ä—É–Ω–¥—É —Ç–∏–ø–∞ &lt;code&gt;extern uint16_t display_data;&lt;/code&gt; –ø—Ä–∏ —Ç–æ–º —á—Ç–æ —Ä–µ–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è &lt;code&gt;uint8_t&lt;/code&gt;. –ü–æ—ç—Ç–æ–º—É –¥–ª—è –ª—É—á—à–µ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è —Ç–∏–ø–æ–≤ –¥–µ–∫–ª–∞—Ä–∞—Ü–∏–∏ extern –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö / —Ñ—É–Ω–∫—Ü–∏–π –ø—Ä–∏–Ω—è—Ç–æ –æ–ø–∏—Å—ã–≤–∞—Ç—å –≤ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;display_data.h&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;extern&lt;/span&gt; &lt;span class="k"&gt;volatile&lt;/span&gt; &lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="n"&gt;display_data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–≠—Ç–æ—Ç —Ñ–∞–π–ª –Ω—É–∂–Ω–æ –≤–∫–ª—é—á–∏—Ç—å &lt;code&gt;#include "display_data.h"&lt;/code&gt; –≤ main.c –∏ isr.c.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mazko.github.io/blog/posts/2017/01/17/picsimjs-storozhevoi-taimer-i-spiashchii-rezhim/"&gt;–î–∞–ª–µ–µ&lt;/a&gt; —Å—Ç–æ—Ä–æ–∂–µ–≤–æ–π —Ç–∞–π–º–µ—Ä.&lt;/p&gt;</content><category term="picsim"></category></entry><entry><title>PICSim.js - —à–∏—Ä–æ—Ç–Ω–æ-–∏–º–ø—É–ª—å—Å–Ω–∞—è –º–æ–¥—É–ª—è—Ü–∏—è</title><link href="https://mazko.github.io/blog/posts/2017/01/14/picsimjs-shirotno-impulsnaia-moduliatsiia/" rel="alternate"></link><published>2017-01-14T00:00:00+02:00</published><updated>2017-01-14T00:00:00+02:00</updated><author><name>Oleg Mazko</name></author><id>tag:mazko.github.io,2017-01-14:/blog/posts/2017/01/14/picsimjs-shirotno-impulsnaia-moduliatsiia/</id><summary type="html">&lt;p&gt;–í &lt;a href="https://mazko.github.io/blog/posts/2017/01/13/simuliatsiia-mikrokontrollerov-picsimjs/"&gt;–ø—Ä–µ–¥—ã–¥—É—â–µ–º&lt;/a&gt; –ø—Ä–∏–º–µ—Ä–µ —Å–≤–µ—Ç–æ–¥–∏–æ–¥ –ª–∏–±–æ –≥–æ—Ä–∏—Ç –ª–∏–±–æ –Ω–µ—Ç —Ç.–µ. —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ç.–Ω. –∫–ª—é—á–µ–≤–æ–º (—Ü–∏—Ñ—Ä–æ–≤–æ–º) —Ä–µ–∂–∏–º–µ. 
–®–∏—Ä–æ—Ç–Ω–æ-–∏–º–ø—É–ª—å—Å–Ω–∞—è &lt;a href="https://mazko.github.io/blog/posts/2016/12/05/ngspicejs-skvazhnost-upravliaemaia-napriazheniem/"&gt;–º–æ–¥—É–ª—è—Ü–∏—è&lt;/a&gt; (–®–ò–ú) –≤ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞—Ö - –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–æ–π –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ —Å–∏–≥–Ω–∞–ª–∞ –≤ –∞–Ω–∞–ª–æ–≥–æ–≤—ã–π —Å –æ—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–º –ö–ü–î. –ó–∞–¥–∞–≤–∞—è —Å–∫–≤–∞–∂–Ω–æ—Å—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ –º–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å —Å—Ä–µ–¥–Ω–µ–µ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ –Ω–∞ –≤—ã—Ö–æ–¥–µ –®–ò–ú –∏ —Ç–µ–º —Å–∞–º—ã–º —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;–í &lt;a href="https://mazko.github.io/blog/posts/2017/01/13/simuliatsiia-mikrokontrollerov-picsimjs/"&gt;–ø—Ä–µ–¥—ã–¥—É—â–µ–º&lt;/a&gt; –ø—Ä–∏–º–µ—Ä–µ —Å–≤–µ—Ç–æ–¥–∏–æ–¥ –ª–∏–±–æ –≥–æ—Ä–∏—Ç –ª–∏–±–æ –Ω–µ—Ç —Ç.–µ. —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ç.–Ω. –∫–ª—é—á–µ–≤–æ–º (—Ü–∏—Ñ—Ä–æ–≤–æ–º) —Ä–µ–∂–∏–º–µ. 
–®–∏—Ä–æ—Ç–Ω–æ-–∏–º–ø—É–ª—å—Å–Ω–∞—è &lt;a href="https://mazko.github.io/blog/posts/2016/12/05/ngspicejs-skvazhnost-upravliaemaia-napriazheniem/"&gt;–º–æ–¥—É–ª—è—Ü–∏—è&lt;/a&gt; (–®–ò–ú) –≤ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞—Ö - –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–æ–π –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ —Å–∏–≥–Ω–∞–ª–∞ –≤ –∞–Ω–∞–ª–æ–≥–æ–≤—ã–π —Å –æ—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–º –ö–ü–î. –ó–∞–¥–∞–≤–∞—è —Å–∫–≤–∞–∂–Ω–æ—Å—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ –º–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å —Å—Ä–µ–¥–Ω–µ–µ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ –Ω–∞ –≤—ã—Ö–æ–¥–µ –®–ò–ú –∏ —Ç–µ–º —Å–∞–º—ã–º —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –∞–Ω–∞–ª–æ–≥–æ–≤—ã–π —Å–∏–≥–Ω–∞–ª –ª—é–±–æ–π —Ñ–æ—Ä–º—ã. –í—ã—Å–æ–∫–∏–π –ö–ü–î –®–ò–ú —Ç–∞–∫–∂–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ —É–ø—Ä–∞–≤–ª—è—Ç—å –∏ –º–æ—â–Ω–æ–π –Ω–∞–≥—Ä—É–∑–∫–æ–π - –º–æ—Ç–æ—Ä–∞–º–∏, –Ω–∞–≥—Ä–µ–≤–∞—Ç–µ–ª—å–Ω—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏. –ö –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–∞–º –®–ò–ú —Å—Ç–æ–∏—Ç –≤ –ø–µ—Ä–≤—É—é –æ—á–µ—Ä–µ–¥—å –≤—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –ø–æ–º–µ—Ö, –¥–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–∞–∂–µ —Å–∞–º—É—é –ø—Ä–æ—Å—Ç—É—é –∏–Ω—Ç–µ–≥—Ä–∏—Ä—É—é—â—É—é &lt;a href="https://mazko.github.io/blog/posts/2016/10/29/ngspicejs-rc-filtr-nizhnikh-chastot/"&gt;RC-—Ü–µ–ø–æ—á–∫—É&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;–ù–∞–∏–±–æ–ª–µ–µ –ø—Ä–æ—Å—Ç–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–µ–π –®–ò–ú –Ω–∞ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–µ —è–≤–ª—è–µ—Ç—Å—è &lt;em&gt;–ø—Ä–æ–≥—Ä–∞–º–º–Ω–∞—è&lt;/em&gt; —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è, –æ–¥–Ω–∞–∫–æ —Ç–∞–∫–∂–µ –ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã–π –º–µ—Ç–æ–¥ –ø–æ–ª—É—á–µ–Ω–∏—è –®–ò–ú —Å–∏–≥–Ω–∞–ª–∞ –æ—á–µ–Ω—å —Ç—Ä–µ–±–æ–≤–∞—Ç–µ–ª–µ–Ω –∫ —á–∞—Å—Ç–æ—Ç–µ —Ä–∞–±–æ—Ç—ã –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ –∏ –∑–∞–Ω–∏–º–∞–µ—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏. –í —Å–≤—è–∑–∏ —Å —ç—Ç–∏–º –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤ –∏–º–µ–µ—Ç –Ω–∞ –±–æ—Ä—Ç—É –æ—Ç–¥–µ–ª—å–Ω—ã–π –ø–µ—Ä–∏—Ñ–µ—Ä–∏–π–Ω—ã—Ö –º–æ–¥—É–ª—å –∞–ø–ø–∞—Ä–∞—Ç–Ω–æ–≥–æ –®–ò–ú, —Ä–∞–±–æ—Ç–∞—é—â–µ–≥–æ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ —Å –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–æ–π, –Ω–æ –æ–±–æ –≤—Å—ë–º –ø–æ –ø–æ—Ä—è–¥–∫—É.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mazko.github.io/blog/posts/2017/01/14/picsimjs-shirotno-impulsnaia-moduliatsiia/soft-pwm.hex"&gt;hex&lt;/a&gt; | &lt;a href="http://mazko.github.io/picsim.js/99041ddce996943a1f04ec2c88b65ecd"&gt;picsim.js&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt;  xc8 --chip=16f648A pwm.c&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;xc.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#pragma config WDTE = OFF&lt;/span&gt;

&lt;span class="cp"&gt;#define DUTY_MAX 12&lt;/span&gt;

&lt;span class="cp"&gt;#define _DUTY_CYCLE_RB0(value)                      \&lt;/span&gt;
&lt;span class="cp"&gt;  do {                                              \&lt;/span&gt;
&lt;span class="cp"&gt;    for (unsigned char i = 0; i &amp;lt; DUTY_MAX; i++) {  \&lt;/span&gt;
&lt;span class="cp"&gt;      RB0 = i &amp;lt; value;                              \&lt;/span&gt;
&lt;span class="cp"&gt;    }                                               \&lt;/span&gt;
&lt;span class="cp"&gt;  } while(0)&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="n"&gt;PORTB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TRISB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;RA1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;_DUTY_CYCLE_RB0&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DUTY_MAX&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;RA2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;_DUTY_CYCLE_RB0&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DUTY_MAX&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;RA3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;_DUTY_CYCLE_RB0&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DUTY_MAX&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;RA4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;_DUTY_CYCLE_RB0&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DUTY_MAX&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="c1"&gt;// Do something useful&lt;/span&gt;
    &lt;span class="c1"&gt;// for (unsigned char i=0; --i;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ö–∞–∂–¥–∞—è –∫–Ω–æ–ø–∫–∞ RA1-RA4 –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–≤–æ—é —è—Ä–∫–æ—Å—Ç—å —Å–≤–µ—Ç–æ–¥–∏–æ–¥–∞ RB0. –ü–æ—Å–∫–æ–ª—å–∫—É —á–∞—Å—Ç–æ—Ç–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è RB0 –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–æ–ª—å—à–∞—è, —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–π –≥–ª–∞–∑ –≤–∏–¥–∏—Ç —Å—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —è—Ä–∫–æ—Å—Ç–∏. –¢–æ—á–Ω–æ —Ä–∞—Å—á–∏—Ç–∞—Ç—å —á–∞—Å—Ç–æ—Ç—É –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è RB0 –∑–∞—Ç—Ä—É–¥–Ω–∏—Ç–µ–ª—å–Ω–æ —Ç.–∫. —Ç—É—Ç –º–Ω–æ–≥–æ–µ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä–∞ - –Ω—É–∂–Ω–æ —Å–º–æ—Ç—Ä–µ—Ç—å –≤ –∞—Å—Å–µ–º–±–ª–µ—Ä–Ω—ã–π –ª–∏—Å—Ç–∏–Ω–≥. –¢–∞–∫–∂–µ –æ—á–µ–≤–∏–¥–Ω–æ —á—Ç–æ –ª—é–±–∞—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ –≤ &lt;code&gt;// Do something useful&lt;/code&gt; –æ–∫–∞–∂–µ—Ç &lt;a href="http://mazko.github.io/picsim.js/dab4ea8ec9d49164ac8630482e9b84ec"&gt;—Å–∏–ª—å–Ω–æ–µ&lt;/a&gt; –≤–ª–∏—è–Ω–∏–µ –Ω–∞ –∏—Ç–æ–≥–æ–≤—É—é —Å–∫–≤–∞–∂–Ω–æ—Å—Ç—å –∏–º–ø—É–ª—å—Å–æ–≤ –Ω–∞ –≤—ã—Ö–æ–¥–µ RB0. –ê–ø–ø–∞—Ä–∞—Ç–Ω—ã–π –®–ò–ú –ª–∏—à–µ–Ω –≤—Å–µ—Ö —ç—Ç–∏—Ö –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–æ–≤.&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2017/01/14/picsimjs-shirotno-impulsnaia-moduliatsiia/ui.gif" style="width:100%; border:1px solid #ddd;"&gt;&lt;/p&gt;
&lt;p&gt;–î–ª—è —Ä–∞–±–æ—Ç—ã –º–æ–¥—É–ª—è –®–ò–ú —Ç—Ä–µ–±—É–µ—Ç—Å—è –æ–¥–∏–Ω &lt;a href="https://mazko.github.io/blog/posts/2016/12/22/ngspicejs-schetchiki-i-deliteli-chastoty/"&gt;—Ç–∞–π–º–µ—Ä&lt;/a&gt; –∏ –º–æ–¥—É–ª—å CCP1. –ù–∞ &lt;a href="https://mazko.github.io/blog/posts/2017/01/13/simuliatsiia-mikrokontrollerov-picsimjs/"&gt;–±–ª–æ–∫-—Å—Ö–µ–º–µ&lt;/a&gt;  PIC16f648 –∞–ø–ø–∞—Ä–∞—Ç–Ω—ã–π –º–æ–¥—É–ª—å CCP1 –Ω–∞ –Ω–æ–≥–µ RB3 –ø–æ—ç—Ç–æ–º—É —Ç–∞–º –∏ –±—É–¥–µ—Ç –≥–æ—Ä–µ—Ç—å —Å–≤–µ—Ç–æ–¥–∏–æ–¥. &lt;/p&gt;
&lt;p&gt;&lt;a href="https://mazko.github.io/blog/posts/2017/01/14/picsimjs-shirotno-impulsnaia-moduliatsiia/hw-pwm.hex"&gt;hex&lt;/a&gt; | &lt;a href="http://mazko.github.io/picsim.js/27d4e6ff0c8004700dc62985d6f8be93"&gt;picsim.js&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt;  xc8 --chip=16f648A pwm.c&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;xc.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#pragma config WDTE = OFF&lt;/span&gt;

&lt;span class="c1"&gt;// ignore two least significant bits PWMxDCL &lt;/span&gt;
&lt;span class="cp"&gt;#define _DUTY_CYCLE(value) \&lt;/span&gt;
&lt;span class="cp"&gt;  CCPR1L = (4*(249+1)*value)&amp;gt;&amp;gt;2&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="c1"&gt;// http://microchip.wikidot.com/8bit:10bitpwm&lt;/span&gt;

  &lt;span class="c1"&gt;// 0b01 Prescaler is 4; 0b1xx TMR2 on&lt;/span&gt;
  &lt;span class="n"&gt;T2CON&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;b00000101&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// Desired PWM frequency 250Hz&lt;/span&gt;
  &lt;span class="c1"&gt;// PR2=[(Fosc)/(4‚àóTMR2Prescale‚àóPWMFrequency)]‚àí1&lt;/span&gt;
  &lt;span class="c1"&gt;// PR2=(1Mhz/(4*4*250Hz))-1=249&lt;/span&gt;
  &lt;span class="n"&gt;PR2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;249&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// 0b11xx - PWM mode;&lt;/span&gt;
  &lt;span class="c1"&gt;// assert log(1e6/249)/log(2) &amp;gt; 8 bit&lt;/span&gt;

  &lt;span class="n"&gt;CCP1CON&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;b00001100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="n"&gt;PORTB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TRISB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;RA1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;_DUTY_CYCLE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;RA2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;_DUTY_CYCLE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;RA3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;_DUTY_CYCLE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;RA4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;_DUTY_CYCLE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="c1"&gt;// Do something useful&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ê–ø–ø–∞—Ä–∞—Ç–Ω—ã–π –®–ò–ú –Ω–µ —Ä–∞—Å—Ö–æ–¥—É–µ—Ç —Ä–µ—Å—É—Ä—Å—ã –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞ –∏ –ª–æ–≥–∏–∫–∞ &lt;code&gt;// Do something useful&lt;/code&gt; –Ω–∏–∫–∞–∫ –Ω–µ –≤–ª–∏—è–µ—Ç –Ω–∞ —è—Ä–∫–æ—Å—Ç—å —Å–≤–µ—á–µ–Ω–∏—è —Å–≤–µ—Ç–æ–¥–∏–æ–¥–æ–≤. –î–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è —ç–Ω–µ—Ä–≥–æ–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è –º–æ–∂–Ω–æ —Å–ø–æ–∫–æ–π–Ω–æ —É–º–µ–Ω—å—à–∏—Ç—å —Ç–∞–∫—Ç–æ–≤—É—é —á–∞—Å—Ç–æ—Ç—É –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞, –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–≤ –∑–Ω–∞—á–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–æ–≤ –®–ò–ú.&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2017/01/14/picsimjs-shirotno-impulsnaia-moduliatsiia/ui-hw.gif" style="width:100%; border:1px solid #ddd;"&gt;&lt;/p&gt;
&lt;p&gt;–ö —Ç–æ–º—É –∂–µ —á–∞—Å—Ç–æ—Ç—É –∞–ø–ø–∞—Ä–∞—Ç–Ω–æ–≥–æ –®–ò–ú –≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –º–æ–∂–Ω–æ —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ —Ç–æ—á–Ω–æ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –Ω–∞ —ç—Ç–∞–ø–µ –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã. &lt;/p&gt;
&lt;p&gt;&lt;a href="https://mazko.github.io/blog/posts/2017/01/16/picsimjs-semisegmentnyi-indikator-i-preryvaniia/"&gt;–î–∞–ª–µ–µ&lt;/a&gt; –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è.&lt;/p&gt;</content><category term="picsim"></category><category term="–®–ò–ú"></category></entry><entry><title>–°–∏–º—É–ª—è—Ü–∏—è –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤ PICSim.js</title><link href="https://mazko.github.io/blog/posts/2017/01/13/simuliatsiia-mikrokontrollerov-picsimjs/" rel="alternate"></link><published>2017-01-13T00:00:00+02:00</published><updated>2017-01-13T00:00:00+02:00</updated><author><name>Oleg Mazko</name></author><id>tag:mazko.github.io,2017-01-13:/blog/posts/2017/01/13/simuliatsiia-mikrokontrollerov-picsimjs/</id><summary type="html">&lt;p&gt;PIC (&lt;strong&gt;P&lt;/strong&gt;eripheral &lt;strong&gt;I&lt;/strong&gt;nterface &lt;strong&gt;C&lt;/strong&gt;ontroller) - —Å–µ—Ä–∏—è –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤, –∏–º–µ—é—â–∏—Ö –≥–∞—Ä–≤–∞—Ä–¥—Å–∫—É—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É –∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏–º—ã—Ö –∫–æ–º–ø–∞–Ω–∏–µ–π Microchip. –ü–æ–¥ –º–∞—Ä–∫–æ–π PIC –≤—ã–ø—É—Å–∫–∞—é—Ç—Å—è 8 (PIC10/12/16/18), 16 (PIC24, dsPIC30, dsPIC33F) –∏ 32-–±–∏—Ç–Ω—ã–µ PIC32 –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã. PIC10 –ª–∏–Ω–µ–π–∫–∞ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –Ω–∏–∑–∫–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç—å—é –∑–∞ —Å—á—ë—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–≥–æ –Ω–∞–±–æ—Ä–∞ –ø–µ—Ä–∏—Ñ–µ—Ä–∏–∏ (–æ–±—ã—á–Ω–æ –ê–¶–ü –∏ –®–ò–ú) –∏ –Ω–µ–≤—ã—Å–æ–∫–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;PIC (&lt;strong&gt;P&lt;/strong&gt;eripheral &lt;strong&gt;I&lt;/strong&gt;nterface &lt;strong&gt;C&lt;/strong&gt;ontroller) - —Å–µ—Ä–∏—è –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤, –∏–º–µ—é—â–∏—Ö –≥–∞—Ä–≤–∞—Ä–¥—Å–∫—É—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É –∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏–º—ã—Ö –∫–æ–º–ø–∞–Ω–∏–µ–π Microchip. –ü–æ–¥ –º–∞—Ä–∫–æ–π PIC –≤—ã–ø—É—Å–∫–∞—é—Ç—Å—è 8 (PIC10/12/16/18), 16 (PIC24, dsPIC30, dsPIC33F) –∏ 32-–±–∏—Ç–Ω—ã–µ PIC32 –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã. PIC10 –ª–∏–Ω–µ–π–∫–∞ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –Ω–∏–∑–∫–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç—å—é –∑–∞ —Å—á—ë—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–≥–æ –Ω–∞–±–æ—Ä–∞ –ø–µ—Ä–∏—Ñ–µ—Ä–∏–∏ (–æ–±—ã—á–Ω–æ –ê–¶–ü –∏ –®–ò–ú) –∏ –Ω–µ–≤—ã—Å–æ–∫–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏. –í —Å–≤–æ—é –æ—á–µ—Ä–µ–¥—å PIC32 –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —è–≤–ª—è–µ—Ç—Å—è —Ñ–ª–∞–≥–º–∞–Ω–æ–º –∫–æ–º–ø–∞–Ω–∏–∏ Microchip –Ω–∞ —Ä—ã–Ω–∫–µ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤, –æ–±–ª–∞–¥–∞—è –Ω–∞–∏–±–æ–ª–µ–µ –≤—ã—Å–æ–∫–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é –∏ –Ω–∞–∏–±–æ–ª–µ–µ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–π –ø–µ—Ä–∏—Ñ–µ—Ä–∏–µ–π –Ω–∞ –±–æ—Ä—Ç—É. –ù–∏–∂–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∞ –±–ª–æ–∫-—Å—Ö–µ–º–∞ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ PIC16F648. –í –ø—Ä–∏–Ω—Ü–∏–ø–µ –∑–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ—Ä—Ç–æ–≤ –≤–≤–æ–¥–∞-–≤—ã–≤–æ–¥–∞ PORTA, PORTB... –∏ –Ω–∞–±–æ—Ä–∞ –ø–µ—Ä–∏—Ñ–µ—Ä–∏–π–Ω—ã—Ö –º–æ–¥—É–ª–µ–π Timer, CCP1... —ç—Ç–æ—Ç —Ä–∏—Å—É–Ω–æ–∫ —É –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö PIC16 –±—É–¥–µ—Ç –∏–¥–µ–Ω—Ç–∏—á–µ–Ω.&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2017/01/13/simuliatsiia-mikrokontrollerov-picsimjs/PIC16F648.svg" style="width:100%;"&gt;&lt;/p&gt;
&lt;p&gt;–ú–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã PIC16 –∏–º–µ—é—Ç –æ—á–µ–Ω—å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π –Ω–∞–±–æ—Ä –∫–æ–º–∞–Ω–¥ - –≤—Å–µ–≥–æ 35. –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –∑–∞ –æ–¥–∏–Ω —Ü–∏–∫–ª, –≤ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Å–ª—É—á–∞—è—Ö (—É—Å–ª–æ–≤–Ω—ã–µ –ø–µ—Ä–µ—Ö–æ–¥—ã) 2. –î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–¥–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ —Ç—Ä–µ–±—É–µ—Ç—Å—è 4 –ø–µ—Ä–∏–æ–¥–∞ —Ç–∞–∫—Ç–æ–≤–æ–π —á–∞—Å—Ç–æ—Ç—ã. –ù–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –Ω–µ–±–æ–ª—å—à–æ–π –Ω–∞–±–æ—Ä –∫–æ–º–∞–Ω–¥ –Ω–∞ –∏—Ö –æ—Å–Ω–æ–≤–µ –º–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ª—é–±—É—é –ª–æ–≥–∏–∫—É –∏–ª–∏ –µ—Å–ª–∏ –≤—ã—Ä–∞–∂–∞—Ç—å—Å—è –ø–æ-—É–º–Ω–æ–º—É —Ç–æ —Ç–∞–∫–æ–π –Ω–∞–±–æ—Ä –∫–æ–º–∞–Ω–¥ —è–≤–ª—è–µ—Ç—Å—è –ø–æ–ª–Ω—ã–º –ø–æ –¢—å—é—Ä–∏–Ω–≥—É. –ù–∞ –∫–∞–∫–æ–º —è–∑—ã–∫–µ –±—ã –Ω–∏ –±—ã–ª–∞ –Ω–∞–ø–∏—Å–∞–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–ª—è PIC16 –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞, –ø–æ—Å–ª–µ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ –æ–Ω–∞ –±—É–¥–µ—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∞ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∏–∑ 35. –°–∫–∞—á–∞—Ç—å C-–∫–æ–º–ø–∏–ª—è—Ç–æ—Ä xc8 –º–æ–∂–Ω–æ c —Å–∞–π—Ç–∞ Microchip.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mazko.github.io/blog/posts/2017/01/13/simuliatsiia-mikrokontrollerov-picsimjs/blink.hex"&gt;hex&lt;/a&gt; | &lt;a href="http://mazko.github.io/picsim.js/91b059197905b07da98f64848ac9d4f1"&gt;picsim.js&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt;  xc8 --chip=16f648A blink.c&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;

&lt;span class="c1"&gt;// http://microchip.wikidot.com/faq:26&lt;/span&gt;
&lt;span class="c1"&gt;// The delay amount must be a constant (cannot be a variable).&lt;/span&gt;
&lt;span class="cp"&gt;#define _XTAL_FREQ 5e4 &lt;/span&gt;&lt;span class="c1"&gt;// 50 kHz&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;xc.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#pragma config WDTE = OFF&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="n"&gt;RB0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;             &lt;span class="c1"&gt;// RB0 initial value&lt;/span&gt;
  &lt;span class="n"&gt;TRISB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mh"&gt;0xFF&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;      &lt;span class="c1"&gt;// RB0 as Output PIN&lt;/span&gt;

  &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;RB0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;           &lt;span class="c1"&gt;// LED ON&lt;/span&gt;
    &lt;span class="n"&gt;__delay_ms&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;// 1 Second Delay&lt;/span&gt;
    &lt;span class="n"&gt;RB0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;           &lt;span class="c1"&gt;// LED OFF&lt;/span&gt;
    &lt;span class="n"&gt;__delay_ms&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;// 1 Second Delay&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ú–∞–∫—Ä–æ—Å &lt;code&gt;#define _XTAL_FREQ 1e6&lt;/code&gt; –Ω—É–∂–µ–Ω –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä—É –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞ &lt;code&gt;__delay_ms&lt;/code&gt;. –ü—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ –≤—Å–µ –ø–æ—Ä—Ç—ã –≤–≤–æ–¥–∞-–≤—ã–≤–æ–¥–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –Ω–∞ –≤—Ö–æ–¥, –∞ —á—Ç–æ–±—ã –º–∏–≥–∞—Ç—å –ª–∞–º–ø–æ—á–∫–æ–π RB0 –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ –≤—ã—Ö–æ–¥ –ø–æ—ç—Ç–æ–º—É &lt;code&gt;TRISB = 0xFF-1&lt;/code&gt;. –î–∞–ª–µ–µ –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã—Ö —Ü–∏–∫–ª - –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ, –≤—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞. –ù–∞ –≤—ã—Ö–æ–¥–∞—Ö RA1-RA3 –ø–æ–¥—Ç—è–≥–∏–≤–∞—é—â–∏–µ —Ä–µ–∑–∏—Å—Ç–æ—Ä—ã, –ø–æ—ç—Ç–æ–º—É –ª–∞–º–ø–æ—á–∫–∏ —Ç–∞–∫–∏–µ –∑–µ–ª—ë–Ω—ã–µ.&lt;/p&gt;
&lt;p&gt;–ï—Å–ª–∏ –Ω–µ –ø–æ–ª–µ–Ω–∏—Ç—å—Å—è –∏ –≤–∑–≥–ª—è–Ω—É—Ç—å –Ω–∞ &lt;code&gt;blink.asm&lt;/code&gt; —Ñ–∞–π–ª (–∞—Å—Å–µ–º–±–ª–µ—Ä–Ω—ã–π –ª–∏—Å—Ç–∏–Ω–≥), —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä–æ–º xc8 —Ä—è–¥–æ–º —Å blink.hex, —Ç–æ –º–æ–∂–Ω–æ —É–≤–∏–¥–µ—Ç—å –∫–æ–º–∞–Ω–¥—ã —Ç–∏–ø–∞ &lt;code&gt;bcf&lt;/code&gt;, &lt;code&gt;movlw&lt;/code&gt; –∏ —Ç.–¥. –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ –∏ –≤—Ö–æ–¥—è—Ç –≤ —Ç–µ 35, —É–ø–æ–º—è–Ω—É—Ç—ã—Ö —Ä–∞–Ω–µ–µ.&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2017/01/13/simuliatsiia-mikrokontrollerov-picsimjs/ui.gif" style="width:100%; border:1px solid #ddd;"&gt;&lt;/p&gt;
&lt;p&gt;–°–ª–µ–¥—É—é—â–∞—è —Å–ª–æ–∂–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ —É–∂–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É–µ—Ç —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –ø–æ—Å—Ä–µ–¥—Å—Ç–≤–æ–º –∫–Ω–æ–ø–æ–∫ RA1-RA3. –ö–∞–∂–¥–∞—è –∫–Ω–æ–ø–∫–∞ —Å–∏–≥–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ –Ω–∞–∂–∞—Ç–∏–∏ —Å–≤–æ–µ–π –∫–æ–º–±–∏–Ω–∞—Ü–∏–µ–π —Å–≤–µ—Ç–æ–¥–∏–æ–¥–æ–≤ –Ω–∞ PORTB.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mazko.github.io/blog/posts/2017/01/13/simuliatsiia-mikrokontrollerov-picsimjs/buttons.hex"&gt;hex&lt;/a&gt; | &lt;a href="http://mazko.github.io/picsim.js/651d7b511656cac141c52941dffeb5a3"&gt;picsim.js&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt;  xc8 --chip=16f648A buttons.c&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;xc.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdbool.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#pragma config WDTE = OFF&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="n"&gt;PORTB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TRISB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;RA1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;RB0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;RA2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;RB0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;RB1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;RA3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;RB0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;RB1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;RB2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;RA4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;RB0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;RB1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;RB2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;RB3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;PORTB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–î–∞–Ω–Ω—ã–π –∫–æ–¥ –Ω–µ –±—É–¥–µ—Ç –æ–¥–∏–Ω–∞–∫–æ–≤–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –≤ —à–∏—Ä–æ–∫–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ —Ç–∞–∫—Ç–æ–≤—ã—Ö —á–∞—Å—Ç–æ—Ç —Ç.–∫. –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –æ—Ç __delay-–ø–æ–¥–æ–±–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π.&lt;/p&gt;
&lt;p&gt;–û—Å–æ–±–æ–µ –≤–Ω–∏–º–∞–Ω–∏–µ —Å—Ç–æ–∏—Ç –æ–±—Ä–∞—Ç–∏—Ç—å –Ω–∞ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ —Ç–∏–ø–∞ &lt;code&gt;PORTB=TRISB=0;&lt;/code&gt; - –∑–¥–µ—Å—å –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ &lt;strong&gt;–∏–¥—ë—Ç —Å–ø—Ä–∞–≤–∞ –Ω–∞–ª–µ–≤–æ&lt;/strong&gt;, —Ç–æ –µ—Å—Ç—å –≤ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–∏ —ç—Ç–æ—Ç –∫–æ–¥ –∞–Ω–∞–ª–æ–≥–∏—á–µ–Ω &lt;code&gt;TRISB=0; /* —á—Ç–æ —Å–µ–π—á–∞—Å –Ω–∞ –≤—ã—Ö–æ–¥–µ PORTB ? */ PORTB=TRISB; /* –≤–æ—Ç —Å–µ–π—á–∞—Å —Ç–æ—á–Ω–æ 0 */&lt;/code&gt;, –Ω–æ –Ω–µ –ª—É—á—à–µ –ª–∏ —Å–¥–µ–ª–∞—Ç—å —Ç–∞–∫ &lt;code&gt;TRISB=PORTB=0;&lt;/code&gt;, —á—Ç–æ –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ &lt;code&gt;PORTB=0;TRISB=PORTB;&lt;/code&gt; ? –ü—Ä–æ–±–ª–µ–º–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –≤ —Ç–æ–º, —á—Ç–æ PORTB —ç—Ç–æ –Ω–µ –æ–±—ã—á–Ω—ã–π —Ä–µ–≥–∏—Å—Ç—Ä, –∞ –ø–æ—Ä—Ç –≤–≤–æ–¥–∞-–≤—ã–≤–æ–¥–∞ –∏ –º–æ–∂–µ—Ç –¥–∞–≤–∞—Ç—å –Ω–∞ —á—Ç–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –æ—Ç–ª–∏—á–Ω–æ–µ –æ—Ç –∑–∞–ø–∏—Å–∞–Ω–Ω–æ–≥–æ. –ò–∑ —ç—Ç–æ–≥–æ –≤—Å–µ–≥–æ —Å–ª–µ–¥—É–µ—Ç, —á—Ç–æ —Å–∞–º—ã–π –ø—Ä–æ—Å—Ç–æ–π –∏ –Ω–∞–¥—ë–∂–Ω—ã–π —Å–ø–æ—Å–æ–± —ç—Ç–æ &lt;strong&gt;–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Ä—Ç—ã –≤–≤–æ–¥–∞ –≤—ã–≤–æ–¥–∞ —è–≤–Ω–æ&lt;/strong&gt;: &lt;code&gt;PORTB=0;TRISB=0;&lt;/code&gt;. –•–æ—Ç—è –≤ —Ä–µ–∂–∏–º–µ —Å–∏–º—É–ª—è—Ü–∏–∏ –Ω–∏—á–µ–≥–æ ¬´—Å–≥–æ—Ä–µ—Ç—å¬ª –Ω–µ –º–æ–∂–µ—Ç, –ø–æ—ç—Ç–æ–º—É &lt;code&gt;PORTB=TRISB=0;&lt;/code&gt; —Ç–æ–∂–µ –º–æ–∂–Ω–æ :)&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="https://mazko.github.io/blog/posts/2017/01/13/simuliatsiia-mikrokontrollerov-picsimjs/ui-b.gif" style="width:100%; border:1px solid #ddd;"&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mazko.github.io/blog/posts/2017/01/14/picsimjs-shirotno-impulsnaia-moduliatsiia/"&gt;–î–∞–ª–µ–µ&lt;/a&gt; –®–ò–ú.&lt;/p&gt;
&lt;p&gt;P.S. –¢–∞–±–ª–∏—Ü–∞ –ø–µ—Ä–∏—Ñ–µ—Ä–∏–π–Ω—ã—Ö –º–æ–¥—É–ª–µ–π —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –≤ —Å–∏–º—É–ª—è—Ç–æ—Ä–µ &lt;a href="https://github.com/lcgamboa/picsim" rel="nofollow"&gt;PICSim&lt;/a&gt;.&lt;/p&gt;</content><category term="picsim"></category></entry><entry><title>TDD –Ω–∞ —É—Ä–æ–≤–Ω–µ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤ - —Å–≤–µ–∂–∏–π –≤–∑–≥–ª—è–¥</title><link href="https://mazko.github.io/blog/posts/2014/03/29/tdd-na-urovne-mikrokontrollerov-svezhii-vzgliad/" rel="alternate"></link><published>2014-03-29T00:00:00+02:00</published><updated>2014-03-29T00:00:00+02:00</updated><author><name>Oleg Mazko</name></author><id>tag:mazko.github.io,2014-03-29:/blog/posts/2014/03/29/tdd-na-urovne-mikrokontrollerov-svezhii-vzgliad/</id><summary type="html">&lt;p&gt;–¢–µ–º–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ü–û –¥–ª—è –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–¥–∏–∫ —É–∂–µ &lt;a href="https://mazko.github.io/blog/posts/2012/10/07/manchesterskii-kod-dlia-chainikov/"&gt;–ø–æ–¥–Ω–∏–º–∞–ª–∞—Å—å&lt;/a&gt;. –°–æ–±—Å—Ç–≤–µ–Ω–Ω–æ –µ—Å–ª–∏ –≤–∫—Ä–∞—Ç—Ü–µ, —Ç–æ –±—ã–ª–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Ä–∞–∑–¥–µ–ª—è—Ç—å –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –º–æ–¥—É–ª–∏ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∏—Ö –ª–æ–≥–∏–∫—É –Ω–∞ –ü–ö –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –∂–µ–ª–µ–∑–∞. –¢–∞–∫–æ–π &lt;em&gt;–Ω–∞–∏–≤–Ω—ã–π&lt;/em&gt; –ø–æ–¥—Ö–æ–¥ —Å–ø–æ—Å–æ–±–µ–Ω –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —É–ø—Ä–æ—Å—Ç–∏—Ç—å –∂–∏–∑–Ω—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É, –Ω–æ –≤ —Ç–æ –∂–µ –≤—Ä–µ–º—è –∏–º–µ–µ—Ç —Å–µ—Ä—å—ë–∑–Ω—ã–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–∏ ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;–¢–µ–º–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ü–û –¥–ª—è –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–¥–∏–∫ —É–∂–µ &lt;a href="https://mazko.github.io/blog/posts/2012/10/07/manchesterskii-kod-dlia-chainikov/"&gt;–ø–æ–¥–Ω–∏–º–∞–ª–∞—Å—å&lt;/a&gt;. –°–æ–±—Å—Ç–≤–µ–Ω–Ω–æ –µ—Å–ª–∏ –≤–∫—Ä–∞—Ç—Ü–µ, —Ç–æ –±—ã–ª–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Ä–∞–∑–¥–µ–ª—è—Ç—å –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –º–æ–¥—É–ª–∏ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∏—Ö –ª–æ–≥–∏–∫—É –Ω–∞ –ü–ö –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –∂–µ–ª–µ–∑–∞. –¢–∞–∫–æ–π &lt;em&gt;–Ω–∞–∏–≤–Ω—ã–π&lt;/em&gt; –ø–æ–¥—Ö–æ–¥ —Å–ø–æ—Å–æ–±–µ–Ω –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —É–ø—Ä–æ—Å—Ç–∏—Ç—å –∂–∏–∑–Ω—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É, –Ω–æ –≤ —Ç–æ –∂–µ –≤—Ä–µ–º—è –∏–º–µ–µ—Ç —Å–µ—Ä—å—ë–∑–Ω—ã–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–∏ –æ—Å–æ–±–µ–Ω–Ω–æ –Ω–∞ —Å—Ç—ã–∫–µ —Å–æ—Ñ—Ç–∞ –ø–µ—Ä–µ—Ñ–∏—Ä–∏–∏:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;—É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è –æ–±—ä—ë–º –∫–æ–¥–∞ –∑–∞ —Å—á—ë—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –∏–ª–∏ &lt;code&gt;#ifdef&lt;/code&gt; –Ω–∞ —Å—Ç—ã–∫–µ —Å –ø–µ—Ä–∏—Ñ–µ—Ä–∏–µ–π (–≤—Å—è–∫–∏–µ &lt;em&gt;UART&lt;/em&gt;, &lt;em&gt;I2C&lt;/em&gt;, –ø–æ—Ä—Ç—ã –≤–≤–æ–¥–∞-–≤—ã–≤–æ–¥–∞ –∏ —Ç.–¥.). –ù–∞–ø—Ä–∏–º–µ—Ä –ª–æ–≥–∏–∫—É –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –±–∏—Ç–æ–≤ –ø–æ—Ä—Ç–æ–≤ –º–æ–∂–Ω–æ –∑–∞–≤–µ—Ä–Ω—É—Ç—å –≤ —Ñ—É–Ω–∫—Ü–∏—é &lt;code&gt;set_flag()&lt;/code&gt; –∏ –ø—Ä–∏ –Ω–∞–ø–∏—Å–∞–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤ –∑–∞–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å–æ–æ—Ç–≤. –µ–π &lt;em&gt;mock&lt;/em&gt; - –æ–¥–Ω–∞–∫–æ —ç—Ç–æ —É–≤–µ–ª–∏—á–∏—Ç –æ–±—â–∏–π –æ–±—ä—ë–º –∫–æ–¥–∞&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;–Ω–∞ —É—Ä–æ–≤–Ω–µ –ø–µ—Ä–∏—Ñ–µ—Ä–∏–∏ –∫–æ–¥ —á–∞—Å—Ç–æ —Ç–∞–∫ –∏ –æ—Å—Ç–∞—ë—Ç—Å—è –Ω–µ–¥–æ–ø–æ–∫—Ä—ã—Ç—ã–º —Ç–µ—Å—Ç–∞–º–∏. –ö –ø—Ä–∏–º–µ—Ä—É –ø–µ—Ä–∏—Ñ–µ—Ä–∏–π–Ω—ã–µ –º–æ–¥—É–ª–∏ –∏–º–µ—é—Ç —Å–≤–æ–π—Å—Ç–≤–æ –ø–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω—ã–º —Å–æ–±—ã—Ç–∏—è–º –≤—ã–±—Ä–∞—Å—ã–≤–∞—Ç—å —Ñ–ª–∞–≥–∏, –Ω–∞–ø–æ–ª–Ω—è—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä—ã –¥–∞–Ω–Ω—ã–º–∏ - –∏–∑–æ–±—Ä–µ—Ç–∞—Ç—å –≤–µ–ª–æ—Å–∏–ø–µ–¥—ã –∏ –ø—Ä–∏–¥—É–º—ã–≤–∞—Ç—å —Ñ–µ–π–∫–æ–≤—ã–µ –ø–µ—Ä–∏—Ñ–µ—Ä–∏–π–Ω—ã–µ –º–æ–¥—É–ª–∏ ? –ö–∞–∫ –º–∏–Ω–∏–º—É–º –Ω—É–∂–Ω–æ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ –ø–æ–Ω–∏–º–∞—Ç—å –∫–∞–∫ —ç—Ç–∞ –ø–µ—Ä–∏—Ñ–µ—Ä–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø–ª—é—Å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;–Ω—É –∞ –æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ñ–∏—á —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –¥–ª—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ —Ç–∏–ø–∞ &lt;a href="http://www.microchip.com/stellent/groups/SiteComm_sg/documents/DeviceDoc/en557154.pdf" rel="nofollow"&gt;MIPS16&lt;/a&gt; –≤–æ–æ–±—â–µ –∏ –≥–æ–≤–æ—Ä–∏—Ç—å –Ω–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç—Å—è&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;–ò—Ç–∞–∫ –¥–∞–ª–µ–µ –±—É–¥–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω –ø—Ä–∏–º–µ—Ä —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤ &lt;em&gt;Microchip&lt;/em&gt;, &lt;strong&gt;—ç–º—É–ª—è—Ç–æ—Ä–∞&lt;/strong&gt; –∏ TDD —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞ &lt;a href="http://throwtheswitch.org/" rel="nofollow"&gt;Ceedling&lt;/a&gt;. –≠–º—É–ª—è—Ç–æ—Ä –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –Ω–∞ –ü–ö –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –µ–≥–æ –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã, –∞ &lt;em&gt;Ceedling&lt;/em&gt; —ç—Ç–æ –Ω–µ –±–æ–ª–µ–µ —á–µ–º —Å—Ä–µ–¥—Å—Ç–≤–æ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏, –Ω–∞–ø–∏—Å–∞–Ω–æ –Ω–∞ &lt;em&gt;Ruby&lt;/em&gt; –ø–ª—é—Å –≤—Å—ë —á—Ç–æ –º–æ–∂–µ—Ç –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –¥–ª—è –ø–æ–∫—Ä—ã—Ç–∏—è —Ç–µ—Å—Ç–∞–º–∏ –∫–æ–¥–∞ –Ω–∞ &lt;em&gt;C&lt;/em&gt; (&lt;em&gt;Unity&lt;/em&gt;, &lt;em&gt;CMock&lt;/em&gt; –∏ –¥–∞–∂–µ &lt;em&gt;CException&lt;/em&gt;).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#apt-get install ruby&lt;/span&gt;
~$ gem install ceedling
~$ ceedling new PIC_Demo
~$ &lt;span class="nb"&gt;cd&lt;/span&gt; PIC_Demo/
~$ ls
build  project.yml  rakefile.rb  src  &lt;span class="nb"&gt;test&lt;/span&gt;  vendor
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ï—â—ë –Ω–∞–º –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è &lt;em&gt;C&lt;/em&gt; –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä –¥–ª—è –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤ &lt;em&gt;PIC&lt;/em&gt; –∏ —Å—Ä–µ–¥–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ &lt;em&gt;MPLAB&lt;/em&gt;. –í—Å—ë —ç—Ç–æ –º–æ–∂–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ —Å–∞–π—Ç–∞ &lt;em&gt;Microchip&lt;/em&gt; –∏ –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —ç—Ç–æ–≥–æ –¥–æ–±—Ä–∞ –¥–æ–ª–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å—Å—è –ø—Ä–∏–º–µ—Ä–Ω–æ —Å–ª–µ–¥—É—é—â–µ–µ:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;~$ which xc16-gcc
/opt/microchip/xc16/v1.21/bin/xc16-gcc
~$ which mplab_ide 
/usr/bin/mplab_ide
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ù–∏–∫–∞–∫ –Ω–µ –æ–±–æ–π—Ç–∏—Å—å –Ω–∞–º –±–µ–∑ &lt;em&gt;Hello World&lt;/em&gt;:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;src/hello.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt; /* Required for printf */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello, world!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ö–æ–º–ø–∏–ª—è—Ü–∏—è + –ª–∏–Ω–∫–æ–≤–∫–∞:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;~$ xc16-gcc -omf&lt;span class="o"&gt;=&lt;/span&gt;elf -mcpu&lt;span class="o"&gt;=&lt;/span&gt;24EP64MC206 src/hello.c &lt;span class="se"&gt;\&lt;/span&gt;
-o build/hello.elf -Wl,-Tp24EP64MC206.gld
~$ file build/hello.elf
build/hello.elf: ELF &lt;span class="m"&gt;32&lt;/span&gt;-bit LSB executable, &lt;span class="se"&gt;\&lt;/span&gt;
version &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;SYSV&lt;span class="o"&gt;)&lt;/span&gt;, statically linked, not stripped
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–≠–º—É–ª—è—Ü–∏—è. –°–∞–º—ã–π –ø—Ä–æ—Å—Ç–æ–π —Å–ª—É—á–∞–π - –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å &lt;em&gt;sim30&lt;/em&gt;, –∫–æ—Ç–æ—Ä—ã–π –ø–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –≤–º–µ—Å—Ç–µ —Å &lt;em&gt;–°&lt;/em&gt; –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä–æ–º &lt;em&gt;xc16-gcc&lt;/em&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;~$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="s2"&gt;LD pic24epsuper&lt;/span&gt;
&lt;span class="s2"&gt;LC build/hello.elf&lt;/span&gt;
&lt;span class="s2"&gt;IO NULL /tmp/&lt;/span&gt;&lt;span class="nv"&gt;$$&lt;/span&gt;&lt;span class="s2"&gt;.txt&lt;/span&gt;
&lt;span class="s2"&gt;RP&lt;/span&gt;
&lt;span class="s2"&gt;E&lt;/span&gt;
&lt;span class="s2"&gt;Q&lt;/span&gt;
&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sim30
~$ cat /tmp/&lt;span class="nv"&gt;$$&lt;/span&gt;.txt
Hello, world!
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ü—Ä–µ–ª–µ—Å—Ç–Ω–æ ! –í–∞–∂–Ω–æ –æ—Ç–º–µ—Ç–∏—Ç—å —á—Ç–æ –ø—Ä–∏ —ç–º—É–ª—è—Ü–∏–∏ –≤ &lt;em&gt;sim30&lt;/em&gt; –µ—Å—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∏ –º–æ–∂–Ω–æ —É–∫–∞–∑—ã–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ &lt;em&gt;—Å–µ–º–µ–π—Å—Ç–≤–∞&lt;/em&gt; —á–∏–ø–æ–≤, –∞ –Ω–µ –∫–∞–∫–æ–π-–ª–∏–±–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;~$ &lt;span class="nb"&gt;echo&lt;/span&gt; DH &lt;span class="p"&gt;|&lt;/span&gt; sim30 &lt;span class="p"&gt;|&lt;/span&gt; grep LD 
LD &amp;lt;devicename&amp;gt; -Load Device: &lt;span class="se"&gt;\&lt;/span&gt;
dspic30super dspic33epsuper pic24epsuper pic24fpsuper pic24super
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ö–∞–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —ç–º—É–ª—è—Ü–∏–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –Ω–µ –≤—Å—è –∏–º–µ—é—â–∞—è—Å—è –Ω–∞ –±–æ—Ä—Ç—É –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ –ø–µ—Ä–∏—Ñ–µ—Ä–∏—è –∏ –æ–± —ç—Ç–æ–º –º—ã –µ—â—ë –ø–æ–≥–æ–≤–æ—Ä–∏–º —á—É—Ç—å –ø–æ–∑–∂–µ, –Ω—É –∞ —Å–µ–π—á–∞—Å —Å–∞–º–æ–µ –≤—Ä–µ–º—è –Ω–∞—á–∞—Ç—å –ø–æ–ª—É—á–∞—Ç—å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ –æ—Ç —é–Ω–∏—Ç —Ç–µ—Å—Ç–æ–≤ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º &lt;a href="http://throwtheswitch.org/" rel="nofollow"&gt;Ceedling&lt;/a&gt;. –í &lt;em&gt;Hello World&lt;/em&gt; –≤—Å–µ–≥–æ –æ–¥–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è main. –ù–µ —Å–µ–∫—Ä–µ—Ç, —á—Ç–æ –≤ &lt;em&gt;C&lt;/em&gt; –ø—Ä–æ–≥—Ä–∞–º–º–µ —Ñ—É–Ω–∫—Ü–∏—è —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º –º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∞, –∞ –ø–æ—Å–∫–æ–ª—å–∫—É –≤ &lt;em&gt;Ceedling&lt;/em&gt; –æ–Ω–∞ —É–∂–µ —è–≤–Ω–æ –∏–º–µ–µ—Ç—Å—è, –¥–ª—è —Ç–µ—Å—Ç–æ–≤ &lt;em&gt;hello.c&lt;/em&gt; —Ç—É—Ç –Ω—É–∂–Ω—ã &lt;code&gt;#ifdef&lt;/code&gt; - –Ω–æ —ç—Ç–æ —á–∞—Å—Ç–Ω—ã–π —Å–ª—É—á–∞–π, –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –∏–∑ –ø—Ä–∞–≤–∏–ª —Ç–∞–∫ —Å–∫–∞–∑–∞—Ç—å –∏ –ø—É–≥–∞—Ç—å—Å—è –Ω–µ —Å—Ç–æ–∏—Ç:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;src/hello.h&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#ifndef hello_H&lt;/span&gt;
&lt;span class="cp"&gt;#define hello_H&lt;/span&gt;

&lt;span class="cp"&gt;#ifdef TEST&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;test_main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="cp"&gt;#endif&lt;/span&gt;

&lt;span class="cp"&gt;#endif &lt;/span&gt;&lt;span class="c1"&gt;// hello_H&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;src/hello.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt; /* Required for printf */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;hello.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#ifdef TEST&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;test_main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="cp"&gt;#else&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="cp"&gt;#endif&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello, world!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;test/test_main.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;unity.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;hello.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setUp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;tearDown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;test_main_function_should_always_return_0&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="n"&gt;TEST_ASSERT_EQUAL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;test_main&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é &lt;em&gt;Ceedling&lt;/em&gt; –∑–∞—Ç–æ—á–µ–Ω –ø–æ–¥ &lt;em&gt;gcc&lt;/em&gt;, –ø–æ—ç—Ç–æ–º—É –Ω—É–∂–Ω–æ –¥–æ–ø–∏–ª–∏—Ç—å &lt;em&gt;project.yml&lt;/em&gt;, —É–∫–∞–∑–∞–≤ –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä, –ª–∏–Ω–∫–æ–≤—â–∏–∫ –≤ —Å–µ–∫—Ü–∏–∏ &lt;code&gt;:tools:&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;project.yml&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;:tools:
  :test_compiler:
    :executable: xc16-gcc
    :arguments:
      - -mcpu=24EP64MC206
      - -x c
      - -c
      - &amp;quot;${1}&amp;quot;
      - -o &amp;quot;${2}&amp;quot;
      - -D$: COLLECTION_DEFINES_TEST_AND_VENDOR
      - -I&amp;quot;$&amp;quot;: COLLECTION_PATHS_TEST_SUPPORT_SOURCE_INCLUDE_VENDOR
      - -Wall
      - -Wextra
      - -mlarge-code
      - -mlarge-arrays
      - -mlarge-data
  :test_linker:
    :executable: xc16-gcc
    :arguments:
      - -mcpu=24EP64MC206
      - -omf=elf
      - ${1}
      - -o &amp;quot;./build/TestBuild.out&amp;quot;
      - -Wl,-Tp24EP64MC206.gld
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤ –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π Ceedling&lt;/span&gt;
&lt;span class="c1"&gt;# rake -T&lt;/span&gt;
~$ rake test:all
&lt;span class="c1"&gt;# build/test/out/cmock.o: Link Error: \&lt;/span&gt;
&lt;span class="c1"&gt;# Could not allocate section .bss, size = 32774 bytes, attributes = bss &lt;/span&gt;
&lt;span class="c1"&gt;# Link Error: Could not allocate data memory&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–õ–∏–Ω–∫–æ–≤—â–∏–∫ —Ä—É–≥–∞–µ—Ç—Å—è - –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—É –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –ø–∞–º—è—Ç–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å &lt;em&gt;cmock&lt;/em&gt;, –ø–æ—ç—Ç–æ–º—É —É–º–µ–Ω—å—à–∏–º –∞–ø–ø–µ—Ç–∏—Ç—ã —ç—Ç–æ–≥–æ –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ–≥–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ –≤ —Å–µ–∫—Ü–∏–∏ &lt;code&gt;:defines:&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;project.yml&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;:commmon: &amp;amp;common_defines
  - UNITY_INT_WIDTH=16
  - CMOCK_MEM_INDEX_TYPE=uint16_t
  - CMOCK_MEM_PTR_AS_INT=uint16_t
  - CMOCK_MEM_ALIGN=1
  - CMOCK_MEM_SIZE=4096
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ü—Ä–æ–±—É–µ–º:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;~$ rake test:all
&lt;span class="c1"&gt;# ERROR: Test executable &amp;quot;test_main.out&amp;quot; failed.&lt;/span&gt;
&lt;span class="c1"&gt;# &amp;gt; Produced no final test result counts in $stdout:&lt;/span&gt;
&lt;span class="c1"&gt;# sh: 1: build/test/out/test_main.out: not found&lt;/span&gt;
&lt;span class="c1"&gt;# &amp;gt; And exited with status: [127] (count of failed tests).&lt;/span&gt;
&lt;span class="c1"&gt;# &amp;gt; This is often a symptom of a bad memory access in source or test code.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–¢—É—Ç &lt;em&gt;Ceedling&lt;/em&gt; –Ω–∞–∏–≤–Ω–æ –ø—ã—Ç–∞–µ—Ç—Å—è –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å–æ–±—Ä–∞–Ω–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É &lt;em&gt;test_main.out&lt;/em&gt;, –Ω–æ –Ω–µ –∑–Ω–∞–µ—Ç –∫–∞–∫, –∑–∞—Ç–æ –º—ã –∑–Ω–∞–µ–º —á—Ç–æ —ç—Ç–æ –¥–µ–ª–∞–µ—Ç—Å—è —Å –ø–æ–º–æ—â—å—é &lt;em&gt;sim30&lt;/em&gt;:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;test/simulation/sim30_instruction.txt&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;LD pic24epsuper
LC ./build/TestBuild.out
IO NULL ./test/simulation/out.txt
RP
E
quit
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;test/simulation/sim_test_fixture.rb&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="no"&gt;OUT_FILE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;test/simulation/out.txt&amp;quot;&lt;/span&gt;
&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;delete&lt;/span&gt; &lt;span class="no"&gt;OUT_FILE&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists?&lt;/span&gt; &lt;span class="no"&gt;OUT_FILE&lt;/span&gt;
&lt;span class="n"&gt;pipe&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;popen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sim30 ./test/simulation/sim30_instruction.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;trap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;INT&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="no"&gt;Process&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;kill&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;KILL&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pipe&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pid&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="no"&gt;Process&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wait&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pipe&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists?&lt;/span&gt; &lt;span class="no"&gt;OUT_FILE&lt;/span&gt;
    &lt;span class="n"&gt;file_contents&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt; &lt;span class="no"&gt;OUT_FILE&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;file_contents&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;\&lt;/span&gt;
          &lt;span class="s2"&gt;&amp;quot;! Program was not simulated ? !&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;\&lt;/span&gt;
          &lt;span class="s2"&gt;&amp;quot;!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–†–∞—Å—Å–∫–∞–∑–∞—Ç—å &lt;em&gt;Ceedling&lt;/em&gt; –≤ —Å–µ–∫—Ü–∏–∏ &lt;code&gt;:tools:&lt;/code&gt; –∫–∞–∫ –≤—Å–µ–º —ç—Ç–∏–º —É–ø—Ä–∞–≤–ª—è—Ç—å:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;project.yml&lt;/em&gt; &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;:test_fixture:
  :executable: ruby
  :name: &amp;quot;Microchip simulator test fixture&amp;quot;
  :stderr_redirect: :win
  :arguments:
    - test/simulation/sim_test_fixture.rb
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ó–∞–ø—É—Å–∫... –í—É–∞–ª—è !&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;~$ rake test:all
&lt;span class="c1"&gt;# ----------------------&lt;/span&gt;
&lt;span class="c1"&gt;# UNIT TEST OTHER OUTPUT&lt;/span&gt;
&lt;span class="c1"&gt;# ----------------------&lt;/span&gt;
&lt;span class="c1"&gt;# [test_main.c]&lt;/span&gt;
&lt;span class="c1"&gt;#   - &amp;quot;Hello, world!&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;# -------------------------&lt;/span&gt;
&lt;span class="c1"&gt;# OVERALL UNIT TEST SUMMARY&lt;/span&gt;
&lt;span class="c1"&gt;# -------------------------&lt;/span&gt;
&lt;span class="c1"&gt;# TESTED:  1&lt;/span&gt;
&lt;span class="c1"&gt;# PASSED:  1&lt;/span&gt;
&lt;span class="c1"&gt;# FAILED:  0&lt;/span&gt;
&lt;span class="c1"&gt;# IGNORED: 0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–í–æ—Ç ! –¢–µ–ø–µ—Ä—å –ø—Ä–æ–µ–∫—Ç –±—É–¥–µ—Ç –∂–∏—Ç—å –∏ —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –≤–º–µ—Å—Ç–µ —Å —Ç–µ—Å—Ç–∞–º–∏. –ü—Ä–µ–¥–ª–∞–≥–∞—é –ø–æ–º–∏–≥–∞—Ç—å —Å–≤–µ—Ç–æ–¥–∏–æ–¥–æ–º –∏ mock–Ω—É—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–µ–≥–æ –¥–µ–π—Å—Ç–≤–∞:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;src/gpio_led.h&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#ifndef gpio_led_H&lt;/span&gt;
&lt;span class="cp"&gt;#define gpio_led_H&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;gpio_led_init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;gpio_led_set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;brightness&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;gpio_led_clear&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="cp"&gt;#endif &lt;/span&gt;&lt;span class="c1"&gt;// gpio_H&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;src/system.h&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#ifndef system_H&lt;/span&gt;
&lt;span class="cp"&gt;#define system_H&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdbool.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="nf"&gt;system_should_abort_app&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="cp"&gt;#endif &lt;/span&gt;&lt;span class="c1"&gt;// system_H&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;src/hello.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;hello.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;system.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;gpio_led.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#ifdef TEST&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;test_main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="cp"&gt;#else&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="cp"&gt;#endif&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;gpio_led_init&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;system_should_abort_app&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;gpio_led_set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;gpio_led_clear&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;test/test_main.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;unity.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;hello.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;mock_system.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;mock_gpio_led.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setUp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="n"&gt;gpio_led_init_Expect&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;tearDown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;test_main_function_without_loop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="n"&gt;system_should_abort_app_ExpectAndReturn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;TEST_ASSERT_EQUAL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;test_main&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;test_main_function_loop_one_iteration&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="n"&gt;system_should_abort_app_ExpectAndReturn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;gpio_led_set_Expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;gpio_led_clear_Expect&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;system_should_abort_app_ExpectAndReturn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;TEST_ASSERT_EQUAL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;test_main&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ü—Ä–æ–±—É–µ–º:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;~$ rake test:all
&lt;span class="c1"&gt;# -------------------------&lt;/span&gt;
&lt;span class="c1"&gt;# OVERALL UNIT TEST SUMMARY&lt;/span&gt;
&lt;span class="c1"&gt;# -------------------------&lt;/span&gt;
&lt;span class="c1"&gt;# TESTED:  2&lt;/span&gt;
&lt;span class="c1"&gt;# PASSED:  2&lt;/span&gt;
&lt;span class="c1"&gt;# FAILED:  0&lt;/span&gt;
&lt;span class="c1"&gt;# IGNORED: 0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ö–∞–∫ –Ω–µ—Å–ª–æ–∂–Ω–æ –¥–æ–≥–∞–¥–∞—Ç—å—Å—è –∏–∑ &lt;em&gt;test/test_main.c&lt;/em&gt; –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –æ–¥–Ω–æ–≥–æ —é–Ω–∏—Ç —Ç–µ—Å—Ç–∞ &lt;em&gt;Ceedling&lt;/em&gt; –ª–∏–Ω–∫—É–µ—Ç –≤—Å–µ —Ñ–∞–π–ª—ã, —É–∫–∞–∑–∞–Ω–Ω—ã–µ –≤ –µ–≥–æ &lt;code&gt;#include&lt;/code&gt;, –ø—Ä–∏—á—ë–º –µ—Å–ª–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–µ—Ñ–∏–∫—Å &lt;code&gt;mock&lt;/code&gt;, –≤–º–µ—Å—Ç–æ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π &lt;em&gt;*.c&lt;/em&gt; –∏–º–ø–ª–µ–º–µ–Ω—Ç–∞—Ü–∏–∏ &lt;em&gt;Ceedling&lt;/em&gt; –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç &lt;em&gt;mock&lt;/em&gt; —Å–æ–≥–ª–∞—Å–Ω–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É, –ø—Ä–æ–ø–∏—Å–∞–Ω–Ω–æ–º—É –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–º &lt;em&gt;*.h&lt;/em&gt;. &lt;/p&gt;
&lt;p&gt;–ß—É—Ç—å –±–ª–∏–∂–µ –∫ –∂–µ–ª–µ–∑—É –Ω–∞ —É—Ä–æ–≤–µ–Ω—å –ø–æ—Ä—Ç–æ–≤ –≤–≤–æ–¥–∞-–≤—ã–≤–æ–¥–∞:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;src/gpio_led.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;gpio_led.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;xc.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;gpio_led_init&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;TRISAbits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TRISA0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;gpio_led_set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;brightness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="cm"&gt;/* TODO: brightness :) */&lt;/span&gt;
    &lt;span class="n"&gt;LATAbits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LATA0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;gpio_led_clear&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;LATAbits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LATA0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;test/test_gpio_led.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;unity.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;gpio_led.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;xc.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setUp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="n"&gt;gpio_led_init&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;LATABITS&lt;/span&gt; &lt;span class="n"&gt;clean&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="n"&gt;memcpy&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;LATAbits&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;clean&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt; &lt;span class="n"&gt;clean&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;tearDown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;test_gpio_led_set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="n"&gt;TEST_ASSERT_EQUAL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;LATAbits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LATA0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;gpio_led_set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;TEST_ASSERT_EQUAL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;LATAbits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LATA0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;test_gpio_led_clear&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="n"&gt;test_gpio_led_set&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;gpio_led_clear&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;TEST_ASSERT_EQUAL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;LATAbits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LATA0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ü—Ä–æ–±—É–µ–º:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;~$ rake test:all
&lt;span class="c1"&gt;# -------------------------&lt;/span&gt;
&lt;span class="c1"&gt;# OVERALL UNIT TEST SUMMARY&lt;/span&gt;
&lt;span class="c1"&gt;# -------------------------&lt;/span&gt;
&lt;span class="c1"&gt;# TESTED:  4&lt;/span&gt;
&lt;span class="c1"&gt;# PASSED:  4&lt;/span&gt;
&lt;span class="c1"&gt;# FAILED:  0&lt;/span&gt;
&lt;span class="c1"&gt;# IGNORED: 0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–û—á–µ–≤–∏–¥–Ω–æ, —á—Ç–æ —Ç–∞–∫–æ–π &lt;em&gt;TDD&lt;/em&gt; –ø–æ–¥—Ö–æ–¥ –Ω–∞ –ø–æ—Ä—è–¥–æ–∫ —É–¥–æ–±–Ω–µ–µ &lt;a href="https://mazko.github.io/blog/posts/2012/10/07/manchesterskii-kod-dlia-chainikov/"&gt;–ø—Ä–µ–¥—ã–¥—É—â–∏—Ö&lt;/a&gt;. –¢—É—Ç –æ—á–µ–Ω—å –º–Ω–æ–≥–æ–µ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π —ç–º—É–ª—è—Ç–æ—Ä–∞ –∏ –∏–Ω–æ–≥–¥–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ &lt;em&gt;sim30&lt;/em&gt; –±—ã–≤–∞–µ—Ç –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ. –¢–∏–ø–∏—á–Ω—ã–π –ø—Ä–∏–º–µ—Ä - –ª–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–π:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;src/gpio_button.h&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#ifndef gpio_button_H&lt;/span&gt;
&lt;span class="cp"&gt;#define gpio_button_H&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;gpio_button_init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="cp"&gt;#endif &lt;/span&gt;&lt;span class="c1"&gt;// gpio_H&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;src/gpio_button.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;gpio_button.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;gpio_led.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;xc.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;gpio_button_init&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;TRISFbits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TRISF0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;CNENFbits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CNIEF0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;IFS1bits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CNIF&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;IEC1bits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CNIE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;__attribute__&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;interrupt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;auto_psv&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="n"&gt;_CNInterrupt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;IFS1bits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CNIF&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;gpio_led_set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;test/test_gpio_button.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;unity.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;gpio_button.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;mock_gpio_led.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;xc.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setUp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="n"&gt;gpio_button_init&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;tearDown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;test_gpio_button_interrupt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="n"&gt;gpio_led_set_Expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;IFS1bits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CNIF&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;asm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;NOP&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–£–ø—Å:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;~$ rake test:all
&lt;span class="c1"&gt;# ------------------------&lt;/span&gt;
&lt;span class="c1"&gt;# FAILED UNIT TEST SUMMARY&lt;/span&gt;
&lt;span class="c1"&gt;# ------------------------&lt;/span&gt;
&lt;span class="c1"&gt;# [test_gpio_button.c]&lt;/span&gt;
&lt;span class="c1"&gt;# Test: test_gpio_button_interrupt&lt;/span&gt;
&lt;span class="c1"&gt;# At line (13): &amp;quot;Function &amp;#39;gpio_led_set&amp;#39; called less times than expected&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ü–æ—Ö–æ–∂–µ —ç–º—É–ª—è—Ç–æ—Ä &lt;em&gt;sim30&lt;/em&gt; –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è. –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ - –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç–º—É–ª—è—Ç–æ—Ä &lt;em&gt;mdb&lt;/em&gt; –∏–∑ —Å—Ä–µ–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ &lt;em&gt;MPLAB&lt;/em&gt;. –¢–µ–∫—É—â–∏–π &lt;em&gt;MPLAB X IDE v2.05&lt;/em&gt; –Ω–∞–ø–∏—Å–∞–Ω –Ω–∞ &lt;em&gt;Java&lt;/em&gt; –∏ –ø–æ—ç—Ç–æ–º—É —ç–º—É–ª—è—Ç–æ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—á–µ–Ω—å –Ω–µ–±—ã—Å—Ç—Ä–æ, –Ω—É –º–∞–µ–º–æ —Ç–µ —à–æ –º–∞–µ–º–æ:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;test/simulation/mplab_sim_instructions.txt&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Device PIC24EP64MC206
Hwtool SIM -p
Program ./build/TestBuild.out
Run
Quit
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;test/simulation/sim_test_fixture.rb&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="no"&gt;OUT_FILE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;test/simulation/out.txt&amp;quot;&lt;/span&gt;
&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;delete&lt;/span&gt; &lt;span class="no"&gt;OUT_FILE&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists?&lt;/span&gt; &lt;span class="no"&gt;OUT_FILE&lt;/span&gt;

&lt;span class="n"&gt;pipe&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;IO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;popen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/opt/microchip/mplabx/mplab_ide/bin/mdb.sh &amp;quot;&lt;/span&gt;   &lt;span class="p"&gt;\&lt;/span&gt;
                &lt;span class="s2"&gt;&amp;quot;./test/simulation/mplab_sim_instructions.txt &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;\&lt;/span&gt;
                &lt;span class="s2"&gt;&amp;quot;&amp;gt; &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="no"&gt;OUT_FILE&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;trap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;INT&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="no"&gt;Process&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;kill&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;KILL&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pipe&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pid&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="no"&gt;Process&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wait&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pipe&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists?&lt;/span&gt; &lt;span class="no"&gt;OUT_FILE&lt;/span&gt;
    &lt;span class="n"&gt;file_contents&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt; &lt;span class="no"&gt;OUT_FILE&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;file_contents&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;\&lt;/span&gt;
          &lt;span class="s2"&gt;&amp;quot;! Program was not simulated ? !&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;\&lt;/span&gt;
          &lt;span class="s2"&gt;&amp;quot;!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–§–∏–Ω–∞–ª—å–Ω—ã–π –∞–∫–∫–æ—Ä–¥:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;~$ rake test:all
&lt;span class="c1"&gt;# -------------------------&lt;/span&gt;
&lt;span class="c1"&gt;# OVERALL UNIT TEST SUMMARY&lt;/span&gt;
&lt;span class="c1"&gt;# -------------------------&lt;/span&gt;
&lt;span class="c1"&gt;# TESTED:  5&lt;/span&gt;
&lt;span class="c1"&gt;# PASSED:  5&lt;/span&gt;
&lt;span class="c1"&gt;# FAILED:  0&lt;/span&gt;
&lt;span class="c1"&gt;# IGNORED: 0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ò—Å—Ö–æ–¥–Ω–∏–∫–∏ &lt;a href="https://mazko.github.io/blog/posts/2014/03/29/tdd-na-urovne-mikrokontrollerov-svezhii-vzgliad/PIC_Demo.zip"&gt;—Ç—É—Ç&lt;/a&gt;.&lt;/p&gt;</content><category term="TDD"></category><category term="CMock"></category><category term="Unity"></category></entry><entry><title>–ê–≤—Ç–æ–º–∞—Ç —Å –∫–æ–Ω–µ—á–Ω—ã–º —á–∏—Å–ª–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–π</title><link href="https://mazko.github.io/blog/posts/2012/10/09/avtomat-s-konechnym-chislom-sostoianii/" rel="alternate"></link><published>2012-10-09T00:00:00+03:00</published><updated>2012-10-09T00:00:00+03:00</updated><author><name>Oleg Mazko</name></author><id>tag:mazko.github.io,2012-10-09:/blog/posts/2012/10/09/avtomat-s-konechnym-chislom-sostoianii/</id><summary type="html">&lt;p&gt;–ü—Ä–æ—Å—Ç—ã–º –ø—Ä–∏–º–µ—Ä–æ–º –º–∞—à–∏–Ω—ã —Å –∫–æ–Ω–µ—á–Ω—ã–º —á–∏—Å–ª–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–π (&lt;strong&gt;FSM&lt;/strong&gt; - &lt;em&gt;Finite State Machine&lt;/em&gt;) –º–æ–∂–µ—Ç –±—ã—Ç—å –ö–∏—Ç–∞–π—Å–∫–∞—è –≥–∏—Ä–ª—è–Ω–¥–∞. –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω–æ –æ–Ω–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∏–∑ —Å–µ–±—è —á–µ—Ä–Ω—É—é –∫–æ—Ä–æ–±–æ—á–∫—É —Å –∫–Ω–æ–ø–æ—á–∫–æ–π, –¥–≤–∞ –ø—Ä–æ–≤–æ–¥–∞ –¥–ª—è –ø–∏—Ç–∞–Ω–∏—è (220 –í), –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≤–æ–¥–∞ –¥–ª—è —Ä–∞–∑–Ω–æ—Ü–≤–µ—Ç–Ω—ã—Ö –ª–∞–º–ø–æ—á–µ–∫, –∫–æ—Ç–æ—Ä—ã–º–∏ —É–ø—Ä–∞–≤–ª—è–µ—Ç –≥–æ—Ç–æ–≤–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞. –í–Ω—É—Ç—Ä–∏ –∫–æ—Ä–æ–±–æ—á–∫–∏ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è &lt;em&gt;–º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä&lt;/em&gt; –∏ —Å–æ–ø—É—Ç—Å—Ç–≤—É—é—â–∞—è –æ–±–≤—è–∑–∫–∞. –ú—ã –Ω–µ –±—É–¥–µ–º —É–≥–ª—É–±–ª—è—Ç—å—Å—è ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;–ü—Ä–æ—Å—Ç—ã–º –ø—Ä–∏–º–µ—Ä–æ–º –º–∞—à–∏–Ω—ã —Å –∫–æ–Ω–µ—á–Ω—ã–º —á–∏—Å–ª–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–π (&lt;strong&gt;FSM&lt;/strong&gt; - &lt;em&gt;Finite State Machine&lt;/em&gt;) –º–æ–∂–µ—Ç –±—ã—Ç—å –ö–∏—Ç–∞–π—Å–∫–∞—è –≥–∏—Ä–ª—è–Ω–¥–∞. –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω–æ –æ–Ω–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∏–∑ —Å–µ–±—è —á–µ—Ä–Ω—É—é –∫–æ—Ä–æ–±–æ—á–∫—É —Å –∫–Ω–æ–ø–æ—á–∫–æ–π, –¥–≤–∞ –ø—Ä–æ–≤–æ–¥–∞ –¥–ª—è –ø–∏—Ç–∞–Ω–∏—è (220 –í), –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≤–æ–¥–∞ –¥–ª—è —Ä–∞–∑–Ω–æ—Ü–≤–µ—Ç–Ω—ã—Ö –ª–∞–º–ø–æ—á–µ–∫, –∫–æ—Ç–æ—Ä—ã–º–∏ —É–ø—Ä–∞–≤–ª—è–µ—Ç –≥–æ—Ç–æ–≤–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞. –í–Ω—É—Ç—Ä–∏ –∫–æ—Ä–æ–±–æ—á–∫–∏ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è &lt;em&gt;–º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä&lt;/em&gt; –∏ —Å–æ–ø—É—Ç—Å—Ç–≤—É—é—â–∞—è –æ–±–≤—è–∑–∫–∞. –ú—ã –Ω–µ –±—É–¥–µ–º —É–≥–ª—É–±–ª—è—Ç—å—Å—è –≤ –¥–µ—Ç–∞–ª–∏ —Å—Ö–µ–º–æ—Ç–µ—Ö–Ω–∏–∫–∏ –∞ —Å–∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∏—Ä—É–µ–º—Å—è –Ω–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –º–µ—Ç–æ–¥–∏–∫–∞—Ö —Ä–µ—à–µ–Ω–∏—è –ø–æ–¥–æ–±–Ω—ã—Ö –∑–∞–¥–∞—á –∏ –∏—Ö –∞–Ω–∞–ª–∏–∑–µ —Ç.–µ. –Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —á–∏—Å—Ç–æ–≥–æ &lt;em&gt;ANSI C&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;–î–ª—è —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤ –Ω–∞–º –ø–æ–Ω–∞–¥–æ–±–∏—Ç—å—Å—è –∫–∞–∫–æ–π-—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –º–∞–∫–µ—Ç, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å / —ç–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –≤ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π —Å—Ä–µ–¥–µ (–≤—ã–±–æ—Ä –ø–∞–ª –Ω–∞ &lt;em&gt;Proteus VSM&lt;/em&gt;). –ï—Å—Ç—å –ø—Ä–æ—Å—Ç–µ–Ω—å–∫–∏–π –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä (PIC16F1823), –∫–æ—Ç–æ—Ä—ã–π —É–ø—Ä–∞–≤–ª—è–µ—Ç –ª–∞–º–ø–æ—á–∫–∞–º–∏ (–≥–∏—Ä–ª—è–Ω–¥–æ–π) –∏ –º–æ–∂–µ—Ç –º–µ–Ω—è—Ç—å –∏—Ö —è—Ä–∫–æ—Å—Ç—å —Å –ø–æ–º–æ—â—å—é –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ —Ü–∏—Ñ—Ä–æ-–∞–Ω–∞–ª–æ–≥–æ–≤–æ–≥–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—è –¶–ê–ü (–≤ —Ä–µ–∞–ª—å–Ω–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ –¥–ª—è —ç—Ç–æ–≥–æ –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –®–ò–ú, –¶–ê–ü –ª—É—á—à–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —ç–º—É–ª—è—Ü–∏–∏ –≤ &lt;em&gt;Proteus VSM&lt;/em&gt;). –ë—ã—Å—Ç—Ä–æ –≤–Ω–∏–∫–Ω—É—Ç—å –≤ —Å—É—Ç—å –¥–µ–ª–∞ –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ–≤ —Å–ª–µ–¥—É—é—â–µ–µ –≤–∏–¥–µ–æ:&lt;/p&gt;
&lt;video width="100%" controls&gt;
  &lt;source src="https://mazko.github.io/blog/posts/2012/10/09/avtomat-s-konechnym-chislom-sostoianii/video.mp4" type="video/mp4"&gt;
Your browser does not support the video tag.
&lt;/video&gt;

&lt;p&gt;–ù–∞—á–Ω—ë–º —Å –ø—Ä–æ—Å—Ç–æ–≥–æ - –Ω–∞–ø–∏—à–µ–º –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è –≥–∏—Ä–ª—è–Ω–¥—ã —Å &lt;em&gt;–¥–≤—É–º—è&lt;/em&gt; —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏ - –≤ –ø–µ—Ä–≤–æ–º —Å–≤–µ—Ç–æ–¥–∏–æ–¥—ã –ø–æ–æ—á–µ—Ä—ë–¥–Ω–æ –≤—Å–ø—ã—Ö–∏–≤–∞—é—Ç —Å–ª–µ–≤–∞ –Ω–∞–ø—Ä–∞–≤–æ, –≤–æ –≤—Ç–æ—Ä–æ–º —Å–ø—Ä–∞–≤–∞ –Ω–∞–ª–µ–≤–æ. –í —Å–∏—Å—Ç–µ–º–µ –¥–≤–∞ —Å–æ–±—ã—Ç–∏—è - –Ω–∞–∂–∞–ª–∏ –∫–Ω–æ–ø–æ—á–∫—É (NEXT) –∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–µ (–Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≥–∏—Ä–ª—è–Ω–¥—ã) —Å–æ–±—ã—Ç–∏–µ –æ—Ç —Ç–∞–π–º–µ—Ä–∞ (TICK). –°–æ–±—ã—Ç–∏–µ NEXT –∏–∑–º–µ–Ω—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ:&lt;/p&gt;
&lt;p&gt;&lt;img alt="–î–∏–∞–≥—Ä–∞–º–º–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π –°–∫—Ä–∏–Ω—à–æ—Ç" src="https://mazko.github.io/blog/posts/2012/10/09/avtomat-s-konechnym-chislom-sostoianii/State_Diagram.png" style="width:100%; border:1px solid #ddd;"&gt;&lt;/p&gt;
&lt;h3&gt;–û–ø–µ—Ä–∞—Ç–æ—Ä—ã switch/case&lt;/h3&gt;
&lt;p&gt;–ü—Ä–∏–±–µ–≥–Ω—É–≤ –∫ –ø–æ–º–æ—â–∏ —É—Å–ª–æ–≤–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ &lt;code&gt;if&lt;/code&gt; / &lt;code&gt;else&lt;/code&gt; –∏–ª–∏ &lt;code&gt;switch&lt;/code&gt; / &lt;code&gt;case&lt;/code&gt; –ø–æ-—Å—Ç–∞—Ä–∏–Ω–∫–µ –∑–∞–¥–∞—á—É —Ä–µ—à–∏–ª–∏ —Ç–∞–∫:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;FSM/Child/src/main.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;main.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;typedef&lt;/span&gt; &lt;span class="k"&gt;enum&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;LEFT_TO_RIGHT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;RIGHT_TO_LEFT&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="n"&gt;State&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cm"&gt;/* Global variable to hold current state */&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;State&lt;/span&gt; &lt;span class="n"&gt;currentState&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;RIGHT_TO_LEFT&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cm"&gt;/* Event handlers implementations */&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;onLeftToRightTickImpl&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;nextLeftLed&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// in main.h&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;onLeftToRightNextImpl&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;resetLeds&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// in main.h&lt;/span&gt;
    &lt;span class="n"&gt;currentState&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;RIGHT_TO_LEFT&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;onRightToLeftTickImpl&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;nextRightLed&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// in main.h&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;onRightToLeftNextImpl&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;resetLeds&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// in main.h&lt;/span&gt;
    &lt;span class="n"&gt;currentState&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;LEFT_TO_RIGHT&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="n"&gt;initHardware&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// in main.h&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(;;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

        &lt;span class="k"&gt;typedef&lt;/span&gt; &lt;span class="k"&gt;enum&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;NEXT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;TICK&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="n"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="cm"&gt;/* –°–æ–±—ã—Ç–∏–µ –ø–æ-—É–º–æ–ª—á–∞–Ω–∏—é */&lt;/span&gt;

        &lt;span class="n"&gt;Event&lt;/span&gt; &lt;span class="n"&gt;eventToFire&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TICK&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="cm"&gt;/* –ï—Å–ª–∏ –Ω–∞–∂–∞–ª–∏ –∫–Ω–æ–ø–∫—É, —Å–æ–±—ã—Ç–∏–µ NEXT */&lt;/span&gt;

        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;isNextButtonPressed&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;eventToFire&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;NEXT&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Fire NEXT event&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; 
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;currentState&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;LEFT_TO_RIGHT&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; 
                &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;eventToFire&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;TICK&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                        &lt;span class="n"&gt;onLeftToRightTickImpl&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// TICK&lt;/span&gt;
                    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;NEXT&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                        &lt;span class="n"&gt;onLeftToRightNextImpl&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// NEXT&lt;/span&gt;

                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// LEFT_TO_RIGHT&lt;/span&gt;
            &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;RIGHT_TO_LEFT&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; 
                &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;eventToFire&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;TICK&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                        &lt;span class="n"&gt;onRightToLeftTickImpl&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// TICK&lt;/span&gt;
                    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;NEXT&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                        &lt;span class="n"&gt;onRightToLeftNextImpl&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// NEXT&lt;/span&gt;

                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// RIGHT_TO_LEFT&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –¥–µ—Ç–∞–ª–∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –≤—ã–Ω–µ—Å–µ–Ω—ã –≤ –∑–∞–≥–æ–ª–æ–≤–æ—á–Ω—ã–π —Ñ–∞–π–ª &lt;strong&gt;main.h&lt;/strong&gt;, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–ª–∞–≥–∞–µ—Ç—Å—è –∫ –∏—Å—Ö–æ–¥–Ω–∏–∫–∞–º. –î–ª—è —Å–±–æ—Ä–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä HI-TECH PICC:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/usr/hitech/picc/9.83/bin/PICC --opt&lt;span class="o"&gt;=&lt;/span&gt;all --chip&lt;span class="o"&gt;=&lt;/span&gt;16F1823 --ASMLIST main.c
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ß—Ç–æ –º—ã –º–æ–∂–µ–º —Å–∫–∞–∑–∞—Ç—å –æ–± —ç—Ç–æ–º —Ä–µ—à–µ–Ω–∏–∏, –∫—Ä–æ–º–µ —Ç–æ–≥–æ, —á—Ç–æ —Ç–∞–º –º–Ω–æ–≥–æ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —Å–ª–æ–≤ &lt;code&gt;switch&lt;/code&gt; –∏ &lt;code&gt;case&lt;/code&gt; ?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;–ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ —Å–µ–±–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–∞–Ω–∏—Ü –∫–æ–¥–∞ —Å –º–æ–Ω–æ–ª–∏—Ç–Ω—ã–º –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º &lt;code&gt;switch&lt;/code&gt; / &lt;code&gt;case&lt;/code&gt;. –¢–∞–∫–æ–π –∫–æ–¥ —Å–ª–æ–∂–Ω–æ —á–∏—Ç–∞—Ç—å –∏ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—Ç—å. –í —Å–∞–º–∏—Ö &lt;code&gt;switch&lt;/code&gt; / &lt;code&gt;case&lt;/code&gt; –∏–ª–∏ &lt;code&gt;if&lt;/code&gt; / &lt;code&gt;else&lt;/code&gt; –Ω–µ—Ç –Ω–∏—á–µ–≥–æ –ø–ª–æ—Ö–æ–≥–æ - –≤ –∫–æ–Ω—Ü–µ-–∫–æ–Ω—Ü–æ–≤ —ç—Ç–æ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ &lt;strong&gt;–°&lt;/strong&gt;. –ù–æ –∫–æ–≥–¥–∞ –∏—Ö –æ—á–µ–Ω—å –º–Ω–æ–≥–æ –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ, —Å —ç—Ç–∏–º –Ω—É–∂–Ω–æ –±–æ—Ä–æ—Ç—å—Å—è.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;H–µ—Ç —É–¥–∞—á–Ω–æ–≥–æ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –º–µ–∂–¥—É –ª–æ–≥–∏–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏–π –º–∞—à–∏–Ω–æ–π —Å –∫–æ–Ω–µ—á–Ω—ã–º —á–∏—Å–ª–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–π –∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–µ–π —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π. –í —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ç—Ä–µ–±—É–µ—Ç –±–æ–ª—å—à–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Ä–∞–∑–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;–¢–∞–±–ª–∏—á–Ω–∞—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞&lt;/h3&gt;
&lt;p&gt;–í—Ç–æ—Ä–æ–π —Å–ø–æ—Å–æ–± —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ —Å–æ—Å—Ç–æ–∏—Ç –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü—ã –ø–µ—Ä–µ—Ö–æ–¥–æ–≤:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;FSM/Table/Simple/src/main.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;main.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;typedef&lt;/span&gt; &lt;span class="k"&gt;enum&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;LEFT_TO_RIGHT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;RIGHT_TO_LEFT&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="n"&gt;State&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cm"&gt;/* Global variable to hold current state */&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;State&lt;/span&gt; &lt;span class="n"&gt;currentState&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;RIGHT_TO_LEFT&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cm"&gt;/* Event handlers implementations */&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;onLeftToRightTickImpl&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;nextLeftLed&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// in main.h&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;onLeftToRightNextImpl&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;resetLeds&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// in main.h&lt;/span&gt;
    &lt;span class="n"&gt;currentState&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;RIGHT_TO_LEFT&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;onRightToLeftTickImpl&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;nextRightLed&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// in main.h&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;onRightToLeftNextImpl&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;resetLeds&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// in main.h&lt;/span&gt;
    &lt;span class="n"&gt;currentState&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;LEFT_TO_RIGHT&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="n"&gt;initHardware&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// in main.h&lt;/span&gt;

    &lt;span class="k"&gt;typedef&lt;/span&gt; &lt;span class="k"&gt;enum&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;NEXT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;TICK&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="n"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;typedef&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;_Transition&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;State&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;Event&lt;/span&gt; &lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;EventFunc&lt;/span&gt;&lt;span class="p"&gt;)();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="n"&gt;Transition&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;Transition&lt;/span&gt; &lt;span class="n"&gt;transitionTable&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;LEFT_TO_RIGHT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TICK&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;onLeftToRightTickImpl&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;LEFT_TO_RIGHT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;NEXT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;onLeftToRightNextImpl&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;RIGHT_TO_LEFT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TICK&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;onRightToLeftTickImpl&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;RIGHT_TO_LEFT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;NEXT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;onRightToLeftNextImpl&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(;;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

        &lt;span class="cm"&gt;/* –°–æ–±—ã—Ç–∏–µ –ø–æ-—É–º–æ–ª—á–∞–Ω–∏—é */&lt;/span&gt;

        &lt;span class="n"&gt;Event&lt;/span&gt; &lt;span class="n"&gt;eventToFire&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TICK&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="cm"&gt;/* –ï—Å–ª–∏ –Ω–∞–∂–∞–ª–∏ –∫–Ω–æ–ø–∫—É, —Å–æ–±—ã—Ç–∏–µ NEXT */&lt;/span&gt;

        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;isNextButtonPressed&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;eventToFire&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;NEXT&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Fire NEXT event&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; 
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="cm"&gt;/* –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è */&lt;/span&gt;

        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;elementsCount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 
            &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;transitionTable&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;transitionTable&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;elementsCount&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;Transition&lt;/span&gt; &lt;span class="n"&gt;transition&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;transitionTable&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;elementsCount&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;state&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;currentState&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; 
                &lt;span class="n"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;eventToFire&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EventFunc&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// –§—É–Ω–∫—Ü–∏—è EventFunc –Ω–∞–π–¥–µ–Ω–∞ –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–î–∞–≤–∞–π—Ç–µ —Å—Ä–∞–≤–Ω–∏–º –¥–∞–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;–¢–∞–±–ª–∏—á–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–µ–¥–ª–µ–Ω–Ω–µ–µ - –∫–∞–∫ –º–∏–Ω–∏–º—É–º –¥–æ–±–∞–≤–∏–ª—Å—è —Ü–∏–∫–ª &lt;code&gt;while&lt;/code&gt;. –î–ª—è –æ–±—Ö–æ–¥–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Ç–∞–±–ª–∏—Ü—ã –∑–∞–¥–µ–π—Å—Ç–≤–æ–≤–∞–Ω–∞ –∏–¥–∏–æ–º–∞ –ö–û–õ–ò–ß–ï–°–¢–í–û –≠–õ–ï–ú–ï–ù–¢–û–í –ú–ê–°–°–ò–í–ê –ö–ê–ö –†–ï–ó–£–õ–¨–¢–ê–¢ –î–ï–õ–ï–ù–ò–Ø, –∫–æ—Ç–æ—Ä–∞—è —É–∂–µ –ø–æ–¥—Ä–æ–±–Ω–æ –æ–ø–∏—Å—ã–≤–∞–ª–∞—Å—å &lt;a href="https://mazko.github.io/blog/posts/2012/10/08/idiomy-v-ansi-c/"&gt;—Ä–∞–Ω–µ–µ&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;B—Å—è –ª–æ–≥–∏–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ —Å–∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞ –≤ –æ–¥–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ. –í—Å—ë –≤–∏–¥–Ω–æ, –∫–∞–∫ –Ω–∞ –ª–∞–¥–æ–Ω–∏. –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–µ–µ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è / –≤—Å–ø–æ–º–Ω–∏—Ç—å, –∫–∞–∫ –≤—Å—ë —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –ª–æ–≥–∏–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏–π –º–∞—à–∏–Ω–æ–π —Å –∫–æ–Ω–µ—á–Ω—ã–º —á–∏—Å–ª–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–π.  –î–∞–≤–∞–π—Ç–µ –¥–æ–±–∞–≤–∏–º –µ—â—ë –æ–¥–Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ - –ª–∞–º–ø–æ—á–∫–∏ &lt;strong&gt;–ø–ª–∞–≤–Ω–æ&lt;/strong&gt; –º–µ–Ω—è—é—Ç —è—Ä–∫–æ—Å—Ç—å:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;FSM/Table/Scale/src/main.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;main.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;typedef&lt;/span&gt; &lt;span class="k"&gt;enum&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;LEFT_TO_RIGHT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;RIGHT_TO_LEFT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="cm"&gt;/* Add brightness algoritms States */&lt;/span&gt;

    &lt;span class="n"&gt;RIGHT_LEFT_TO_BRIGHT&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="n"&gt;State&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cm"&gt;/* Global variable to hold current state */&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;State&lt;/span&gt; &lt;span class="n"&gt;currentState&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;RIGHT_TO_LEFT&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cm"&gt;/* Event handlers implementations */&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;onLeftToRightTickImpl&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;nextLeftLed&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// in main.h&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;onLeftToRightNextImpl&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;resetLeds&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// in main.h&lt;/span&gt;
    &lt;span class="n"&gt;currentState&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;RIGHT_TO_LEFT&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;onRightToLeftTickImpl&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;nextRightLed&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// in main.h&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/* LEFT_TO_RIGHT ==&amp;gt; RIGHT_LEFT_TO_BRIGHT */&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;onRightToLeftNextImpl&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;resetLeds&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// in main.h&lt;/span&gt;
    &lt;span class="n"&gt;currentState&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;RIGHT_LEFT_TO_BRIGHT&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/* Add brightness handlers */&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;onRightToLeftBrigtTickImpl&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;nextRightBrightLed&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// in main.h&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;onRightToLeftBrigtNextImpl&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;resetLeds&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// in main.h&lt;/span&gt;
    &lt;span class="n"&gt;currentState&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;LEFT_TO_RIGHT&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="n"&gt;initHardware&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// in main.h&lt;/span&gt;

    &lt;span class="k"&gt;typedef&lt;/span&gt; &lt;span class="k"&gt;enum&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;NEXT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;TICK&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="n"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;typedef&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;_Transition&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;State&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;Event&lt;/span&gt; &lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;EventFunc&lt;/span&gt;&lt;span class="p"&gt;)();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="n"&gt;Transition&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;Transition&lt;/span&gt; &lt;span class="n"&gt;transitionTable&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;LEFT_TO_RIGHT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TICK&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;onLeftToRightTickImpl&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;LEFT_TO_RIGHT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;NEXT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;onLeftToRightNextImpl&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;RIGHT_TO_LEFT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TICK&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;onRightToLeftTickImpl&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;RIGHT_TO_LEFT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;NEXT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;onRightToLeftNextImpl&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;

        &lt;span class="cm"&gt;/* Add brightness algoritms transitions */&lt;/span&gt;

        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;RIGHT_LEFT_TO_BRIGHT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TICK&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;onRightToLeftBrigtTickImpl&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;RIGHT_LEFT_TO_BRIGHT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;NEXT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;onRightToLeftBrigtNextImpl&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(;;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

        &lt;span class="cm"&gt;/* –°–æ–±—ã—Ç–∏–µ –ø–æ-—É–º–æ–ª—á–∞–Ω–∏—é */&lt;/span&gt;

        &lt;span class="n"&gt;Event&lt;/span&gt; &lt;span class="n"&gt;eventToFire&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TICK&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="cm"&gt;/* –ï—Å–ª–∏ –Ω–∞–∂–∞–ª–∏ –∫–Ω–æ–ø–∫—É, —Å–æ–±—ã—Ç–∏–µ NEXT */&lt;/span&gt;

        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;isNextButtonPressed&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;eventToFire&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;NEXT&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Fire NEXT event&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; 
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="cm"&gt;/* –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è */&lt;/span&gt;

        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;elementsCount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 
            &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;transitionTable&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;transitionTable&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;elementsCount&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;Transition&lt;/span&gt; &lt;span class="n"&gt;transition&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;transitionTable&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;elementsCount&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;state&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;currentState&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; 
                &lt;span class="n"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;eventToFire&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EventFunc&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// –§—É–Ω–∫—Ü–∏—è EventFunc –Ω–∞–π–¥–µ–Ω–∞ –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ù–µ—Å–ª–æ–∂–Ω–æ –∑–∞–º–µ—Ç–∏—Ç—å, —á—Ç–æ –∫–æ–¥ –≤ —Å—É–ø–µ—Ä—Ü–∏–∫–ª–µ &lt;code&gt;for(;;)&lt;/code&gt; –æ—Å—Ç–∞–ª—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π, —Ç.–µ. —Ä–µ—à–µ–Ω–∏–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ç–∞–±–ª–∏—Ü —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏–∑—É–µ—Ç—Å—è –ª—É—á—à–µ–π &lt;em&gt;—Ä–∞—Å—à–∏—Ä—è–µ–º–æ—Å—Ç—å—é&lt;/em&gt; –∫–æ–¥–∞.&lt;/p&gt;
&lt;p&gt;–î–∞–ª–µ–µ –∏–ª–∏ &lt;a href="https://mazko.github.io/blog/posts/2017/02/05/picsimjs-soprogrammy-i-prosteishaia-mnogozadachnost/"&gt;—Å–æ–ø—Ä–æ–≥—Ä–∞–º–º—ã&lt;/a&gt; –∏–ª–∏ &lt;a href="https://mazko.github.io/blog/posts/2017/05/25/zhizn-posle-rtos-model-aktorov-qpc-uml/"&gt;Quantum Leaps QP –∏ UML statecharts&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;–ò—Å—Ö–æ–¥–Ω–∏–∫–∏ &lt;a href="https://mazko.github.io/blog/posts/2012/10/09/avtomat-s-konechnym-chislom-sostoianii/FSM.zip"&gt;—Ç—É—Ç&lt;/a&gt;.&lt;/p&gt;</content><category term="FSM"></category></entry><entry><title>–ò–¥–∏–æ–º—ã –≤ ANSI C</title><link href="https://mazko.github.io/blog/posts/2012/10/08/idiomy-v-ansi-c/" rel="alternate"></link><published>2012-10-08T00:00:00+03:00</published><updated>2012-10-08T00:00:00+03:00</updated><author><name>Oleg Mazko</name></author><id>tag:mazko.github.io,2012-10-08:/blog/posts/2012/10/08/idiomy-v-ansi-c/</id><summary type="html">&lt;p&gt;&lt;em&gt;–®–∞–±–ª–æ–Ω—ã –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è&lt;/em&gt;, –æ–Ω–∏ –∂–µ –ø—Ä–æ—Å—Ç–æ &lt;a href="http://ru.wikipedia.org/wiki/%D0%A8%D0%B0%D0%B1%D0%BB%D0%BE%D0%BD_%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F" rel="nofollow"&gt;–ø–∞—Ç—Ç–µ—Ä–Ω—ã&lt;/a&gt;, –º–æ–∂–Ω–æ –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å –Ω–∞ –≤—Å–µ—Ö —É—Ä–æ–≤–Ω—è—Ö —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è. ¬´–ù–∏–∑–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã–µ¬ª —à–∞–±–ª–æ–Ω—ã –Ω–∞–∑—ã–≤–∞—é—Ç—Å—è &lt;strong&gt;–∏–¥–∏–æ–º–∞–º–∏&lt;/strong&gt;, –ø–æ—Å–∫–æ–ª—å–∫—É –æ–Ω–∏ –∑–∞–≤–∏—Å—è—Ç –æ—Ç –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —è–∑—ã–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è. –í –¥–∞–Ω–Ω–æ–π —Å—Ç–∞—Ç—å–µ –æ–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –ø–æ–¥–±–æ—Ä–∫–∞ —Ç–∞–∫–∏—Ö –≤–æ—Ç &lt;strong&gt;–∏–¥–∏–æ–º&lt;/strong&gt; –≤ —á–∏—Å—Ç–æ–º &lt;strong&gt;–°&lt;/strong&gt; (&lt;em&gt;ANSI C&lt;/em&gt;), –ø–æ –±–æ–ª—å—à–µ–π —á–∞—Å—Ç–∏ —ç—Ç–æ –≤–æ–ª—å–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥ &lt;a href="http://www.adampetersen.se/Idiomatic_expressions_in_C.pdf" rel="nofollow"&gt;Idiomatic Expressions in C&lt;/a&gt; –æ—Ç ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;–®–∞–±–ª–æ–Ω—ã –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è&lt;/em&gt;, –æ–Ω–∏ –∂–µ –ø—Ä–æ—Å—Ç–æ &lt;a href="http://ru.wikipedia.org/wiki/%D0%A8%D0%B0%D0%B1%D0%BB%D0%BE%D0%BD_%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F" rel="nofollow"&gt;–ø–∞—Ç—Ç–µ—Ä–Ω—ã&lt;/a&gt;, –º–æ–∂–Ω–æ –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å –Ω–∞ –≤—Å–µ—Ö —É—Ä–æ–≤–Ω—è—Ö —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è. ¬´–ù–∏–∑–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã–µ¬ª —à–∞–±–ª–æ–Ω—ã –Ω–∞–∑—ã–≤–∞—é—Ç—Å—è &lt;strong&gt;–∏–¥–∏–æ–º–∞–º–∏&lt;/strong&gt;, –ø–æ—Å–∫–æ–ª—å–∫—É –æ–Ω–∏ –∑–∞–≤–∏—Å—è—Ç –æ—Ç –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —è–∑—ã–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è. –í –¥–∞–Ω–Ω–æ–π —Å—Ç–∞—Ç—å–µ –æ–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –ø–æ–¥–±–æ—Ä–∫–∞ —Ç–∞–∫–∏—Ö –≤–æ—Ç &lt;strong&gt;–∏–¥–∏–æ–º&lt;/strong&gt; –≤ —á–∏—Å—Ç–æ–º &lt;strong&gt;–°&lt;/strong&gt; (&lt;em&gt;ANSI C&lt;/em&gt;), –ø–æ –±–æ–ª—å—à–µ–π —á–∞—Å—Ç–∏ —ç—Ç–æ –≤–æ–ª—å–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥ &lt;a href="http://www.adampetersen.se/Idiomatic_expressions_in_C.pdf" rel="nofollow"&gt;Idiomatic Expressions in C&lt;/a&gt; –æ—Ç &lt;a href="http://www.adampetersen.se/articles.htm" rel="nofollow"&gt;Adam Petersen&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –∏–¥–∏–æ–º—ã –æ—á–µ–Ω—å —Ä–µ–¥–∫–æ –∏, –∫–∞–∫ –ø—Ä–∞–≤–∏–ª–æ, –≤—ã–±–æ—Ä–æ—á–Ω–æ –æ–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–µ –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é - –¥–∞–Ω–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª –º–æ–∂–µ—Ç –ø–æ–∫–∞–∑–∞—Ç—å—Å—è –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å–ª–æ–∂–Ω—ã–º –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤, –≤ —Ç–æ –∂–µ –≤—Ä–µ–º—è –ø—Ä–∏ –∏–∑–ª–æ–∂–µ–Ω–∏–∏ –±–æ–ª–µ–µ —Å–µ—Ä—å—ë–∑–Ω–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –∞–≤—Ç–æ—Ä—ã –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞—é—Ç, —á—Ç–æ —á–∏—Ç–∞—Ç–µ–ª—å —Å–æ –≤—Å–µ–º —ç—Ç–∏–º —É–∂–µ –∑–Ω–∞–∫–æ–º. –ö–∞–∫ –±—ã —Ç–∞–º –Ω–∏ –±—ã–ª–æ, —è—Å–Ω–æ –æ–¥–Ω–æ - –¥–∞–∂–µ –µ—Å–ª–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–¥–∏–æ–º—ã –≤ —Å–≤–æ–∏—Ö —Ä–∞–±–æ—Ç–∞—Ö, —ç—Ç–æ –µ—â—ë –Ω–µ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –æ–Ω –Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å –Ω–∏–º–∏ –∑–Ω–∞–∫–æ–º —Ö–æ—Ç—è –±—ã –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –±–æ–ª–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –∏ –±—ã—Å—Ç—Ä–æ —Ä–∞–∑–±–∏—Ä–∞—Ç—å—Å—è –≤ —á—É–∂–æ–º –∫–æ–¥–µ.&lt;/p&gt;
&lt;p&gt;–û–ø–∏—Å—ã–≤–∞–µ–º—ã–µ –≤ –¥–∞–Ω–Ω–æ–º –º–∞—Ç–µ—Ä–∏–∞–ª–µ –∏–¥–∏–æ–º—ã –º–æ–∂–Ω–æ —É—Å–ª–æ–≤–Ω–æ —Ä–∞–∑–¥–µ–ª–∏—Ç—å –Ω–∞ –¥–≤–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;–ò–¥–∏–æ–º—ã –¥–ª—è –Ω–∞–¥—ë–∂–Ω–æ—Å—Ç–∏&lt;/strong&gt;: –ø–æ–º–æ–≥–∞—é—Ç –∏–∑–±–µ–∂–∞—Ç—å —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫ –≤ &lt;strong&gt;–°&lt;/strong&gt;. –ù–∞–ø—Ä–∏–º–µ—Ä, –∏–¥–∏–æ–º–∞ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –°–û–°–¢–ê–í–ù–´–• –¢–ò–ü–û–í –° –ü–û–ú–û–©–¨–Æ {0} –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –Ω–∞–¥—ë–∂–Ω—ã–π –∏ –ø–µ—Ä–µ–Ω–æ—Å–∏–º—ã–π —Å–ø–æ—Å–æ–± –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä –∏ –º–∞—Å—Å–∏–≤–æ–≤.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;–ò–¥–∏–æ–º—ã –¥–ª—è –≤—ã—Ä–∞–∑–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏&lt;/strong&gt;: –¥–µ–ª–∞—é—Ç –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –±–æ–ª–µ–µ —á–∏—Ç–∞–±–µ–ª—å–Ω—ã–º –∏ –ø–æ–Ω—è—Ç–Ω—ã–º, –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –±–æ–ª–µ–µ –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–º, –∞ –ø—Ä–æ—Ü–µ—Å—Å –æ—Ç–ª–∞–¥–∫–∏ –ø—Ä–æ—â–µ –∏ –ø—Ä–æ–∑—Ä–∞—á–Ω–µ–π. –ù–∞–ø—Ä–∏–º–µ—Ä, –∏–¥–∏–æ–º–∞ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –° –û–ü–ò–°–ê–ù–ò–ï–ú –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å –∫ –º–µ—Ö–∞–Ω–∏–∑–º—É –ø—Ä–æ–≤–µ—Ä–æ–∫ (–º–∞–∫—Ä–æ—Å &lt;code&gt;assert&lt;/code&gt;) —Å–ª–æ–≤–µ—Å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–æ–∑–Ω–∏–∫—à–µ–π –ø—Ä–æ–±–ª–µ–º—ã.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;SIZEOF –î–õ–Ø –ü–ï–†–ï–ú–ï–ù–ù–´–•&lt;/h3&gt;
&lt;p&gt;–§—É–Ω–∫—Ü–∏–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ &lt;strong&gt;–°&lt;/strong&gt; –æ—á–µ–Ω—å —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç —Ç–∏–ø &lt;code&gt;void*&lt;/code&gt; - —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –æ–±—ä–µ–∫—Ç –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ —Ç–∏–ø–∞, —ç—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–¥–µ–ª–∞—Ç—å –∏—Ö (—Ñ—É–Ω–∫—Ü–∏–∏) –±–æ–ª–µ–µ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–º–∏ –∏ –∞–±—Å—Ç—Ä–∞–≥–∏—Ä–æ–≤–∞—Ç—å—Å—è –æ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–∏–ø–∞ –¥–∞–Ω–Ω—ã—Ö. –ù–∞–ø—Ä–∏–º–µ—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –≤—ã–¥–µ–ª–µ–Ω–∏—è –ø–∞–º—è—Ç–∏ (&lt;code&gt;malloc&lt;/code&gt;, &lt;code&gt;calloc&lt;/code&gt; –∏ &lt;code&gt;realloc&lt;/code&gt;) —è–≤–ª—è–µ—Ç—Å—è —É–∫–∞–∑–∞—Ç–µ–ª—å &lt;code&gt;void*&lt;/code&gt;, –ø—Ä–∏ —ç—Ç–æ–º —Å–∞–º–∏–º —Ñ—É–Ω–∫—Ü–∏—è–º –Ω–∞ —ç—Ç–∞–ø–µ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –∏–∑–≤–µ—Å—Ç–Ω–æ –æ —Ç–∏–ø–µ –¥–∞–Ω–Ω—ã—Ö, –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö –≤—ã–¥–µ–ª—è–µ—Ç—Å—è –ø–∞–º—è—Ç—å. –í—Å—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –ª–æ–∂–∏—Ç—Å—è –Ω–∞ –∫–æ–¥ –∫–ª–∏–µ–Ω—Ç–∞, –≤—ã–∑—ã–≤–∞—é—â–µ–≥–æ —Ñ—É–Ω–∫—Ü–∏—é - –∏–º–µ–Ω–Ω–æ –æ–Ω –¥–æ–ª–∂–µ–Ω —É–∫–∞–∑–∞—Ç—å –æ–±—ä—ë–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –ø–∞–º—è—Ç–∏:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;HelloTelegram&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;telegram&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HelloTelegram&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;malloc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HelloTelegram&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–î–∞–Ω–Ω—ã–π –∫–æ–¥ –ª–µ–≥–∫–æ —á–∏—Ç–∞–µ—Ç—Å—è –∏ –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ &lt;code&gt;telegram&lt;/code&gt; –æ—Å—Ç–∞—ë—Ç—Å—è &lt;code&gt;HelloTelegram&lt;/code&gt; –≤—Å—ë —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ –Ω–∞–¥–æ. –û–¥–Ω–∞–∫–æ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏—è / –∏–∑–º–µ–Ω–µ–Ω–∏–π –æ—á–µ–Ω—å –ª–µ–≥–∫–æ –∑–∞–ø—É—Ç–∞—Ç—å—Å—è –∏ –¥–æ–ø—É—Å—Ç–∏—Ç—å –æ—à–∏–±–∫—É:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ByeTelegram&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;telegram&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ByeTelegram&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;malloc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HelloTelegram&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ü–æ—Å–∫–æ–ª—å–∫—É –Ω–µ—Ç –Ω–∏–∫–∞–∫–æ–π –≥–∞—Ä–∞–Ω—Ç–∏–∏, —á—Ç–æ —Ä–∞–∑–º–µ—Ä—ã &lt;code&gt;HelloTelegram&lt;/code&gt; –∏ &lt;code&gt;ByeTelegram&lt;/code&gt; —Ä–∞–≤–Ω—ã (—Ç–æ—á–Ω–µ–µ —ç—Ç–æ –±—ã–ª–æ –±—ã —Å—á–∞—Å—Ç–ª–∏–≤—ã–º —Å—Ç–µ—á–µ–Ω–∏–µ–º –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤), –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ—Ç –∫–æ–¥ –ø—Ä–∏–≤–µ–¥—ë—Ç –∫ –ø–µ—á–∞–ª—å–Ω—ã–º –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è–º. –ü—Ä–æ–±–ª–µ–º–∞  –≤ —Ç–æ–º, —á—Ç–æ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å —Ñ—É–Ω–∫—Ü–∏–µ–π &lt;code&gt;malloc&lt;/code&gt; –∏ –µ–π –ø–æ–¥–æ–±–Ω—ã–º–∏ –Ω–∞ —ç—Ç–∞–ø–µ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ —Ç–µ—Ä—è–µ—Ç—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ–∞–ª—å–Ω–æ–º —Ç–∏–ø–µ –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ—ç—Ç–æ–º—É –¥–∞–ª–µ–∫–æ –Ω–µ —Ñ–∞–∫—Ç, —á—Ç–æ –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä –ø–æ–¥–æ–±–Ω—É—é –æ—à–∏–±–∫—É —Å–º–æ–∂–µ—Ç –æ–±–Ω–∞—Ä—É–∂–∏—Ç—å - –æ–Ω –Ω–µ –æ–±—è–∑–∞–Ω —ç—Ç–∏–º –∑–∞–Ω–∏–º–∞—Ç—å—Å—è.&lt;/p&gt;
&lt;p&gt;–ò—Å–ø–æ–ª—å–∑—É—è –∏–¥–∏–æ–º—É SIZEOF –î–õ–Ø –ü–ï–†–ï–ú–ï–ù–ù–´–• –ø–æ–¥–æ–±–Ω—ã–µ –æ—à–∏–±–∫–∏ –º–æ–∂–Ω–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç—å:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;HelloTelegram&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;telegram&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HelloTelegram&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;malloc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;sizeof&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;telegram&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ù–æ –º–∏–Ω—É—Ç–æ—á–∫—É ! –ù–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ª–∏ —Ç—É—Ç —Ä–∞–∑—ã–º–µ–Ω–æ–≤–∞–Ω–∏–µ —É–∫–∞–∑–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π, –∫–æ –≤—Å–µ–º—É –ø—Ä–æ—á–µ–º—É, –∫ —ç—Ç–æ–º—É –º–æ–º–µ–Ω—Ç—É –µ—â—ë –∏ –Ω–µ –±—ã–ª –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω ? –ù–µ—Ç, –∏ –ø—Ä–∏—á–∏–Ω–∞, –ø–æ –∫–æ—Ç–æ—Ä–æ–π —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ç–æ–º, —á—Ç–æ &lt;code&gt;sizeof&lt;/code&gt; —ç—Ç–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä –∞ –Ω–µ —Ñ—É–Ω–∫—Ü–∏—è. –û–ø–µ—Ä–∞—Ç–æ—Ä &lt;code&gt;sizeof&lt;/code&gt; –Ω–µ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–æ–¥, –∞ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ &lt;code&gt;sizeof *telegram&lt;/code&gt; —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –Ω–∞ —ç—Ç–∞–ø–µ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏. –¢–µ–ø–µ—Ä—å, –µ—Å–ª–∏ —Ç–∏–ø &lt;code&gt;telegram&lt;/code&gt; –∏–∑–º–µ–Ω–∏—Ç—Å—è –Ω—É —Å–∫–∞–∂–µ–º –Ω–∞ &lt;code&gt;ByeTelegram&lt;/code&gt;, –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç, –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã–π —Ñ—É–Ω–∫—Ü–∏–∏ &lt;code&gt;malloc&lt;/code&gt;. –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ä–∞–∑–º–µ—Ä –≤—ã–¥–µ–ª—è–µ–º–æ–π –ø–∞–º—è—Ç–∏ –ø–æ–¥ –∑–∞–¥–∞–Ω–Ω—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–∫–ª–∞–¥—ã–≤–∞–µ—Ç—Å—è —Å –ø–ª–µ—á –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞ –Ω–∞ –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä. –ü–æ—Å–∫–æ–ª—å–∫—É –≤ –Ω–∞—à–µ–º –ø—Ä–∏–º–µ—Ä–µ &lt;code&gt;telegram&lt;/code&gt; —ç—Ç–æ —É–∫–∞–∑–∞—Ç–µ–ª—å, —Ç–æ —É–Ω–∞—Ä–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä &lt;code&gt;*&lt;/code&gt; –≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º.&lt;/p&gt;
&lt;p&gt;–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏–¥–∏–æ–º—ã SIZEOF –î–õ–Ø –ü–ï–†–ï–ú–ï–ù–ù–´–• –æ—Ç–Ω—é–¥—å –Ω–µ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç—Å—è —É–∫–∞–∑–∞—Ç–µ–ª—è–º–∏. –í–æ—Ç –ø—Ä–∏–º–µ—Ä –∏–¥–∏–æ–º—ã –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å —Ñ—É–Ω–∫—Ü–∏–µ–π &lt;code&gt;memcpy&lt;/code&gt;, –∫–æ—Ç–æ—Ä–∞—è —Ç–∞–∫–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç &lt;code&gt;void*&lt;/code&gt;, –æ–¥–Ω–∞–∫–æ —É–∂–µ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –æ–¥–Ω–æ–≥–æ –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kt"&gt;uint32_t&lt;/span&gt; &lt;span class="n"&gt;telegramSize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;memcpy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;telegramSize&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;binaryDatastream&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt; &lt;span class="n"&gt;telegramSize&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–¢–µ–ø–µ—Ä—å, –µ—Å–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—Å—è —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö —Å &lt;code&gt;uint32_t telegramSize = 0&lt;/code&gt;; –Ω–∞ &lt;code&gt;uintXX_t telegramSize = 0&lt;/code&gt;; –∫–æ–¥ —Å &lt;code&gt;memcpy&lt;/code&gt; –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∏ –±—É–¥–µ—Ç (–¥–æ–ª–∂–µ–Ω) —Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.&lt;/p&gt;
&lt;h3&gt;–ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –°–û–°–¢–ê–í–ù–´–• –¢–ò–ü–û–í –° –ü–û–ú–û–©–¨–Æ {0}&lt;/h3&gt;
&lt;p&gt;–ù–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ - —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ –æ—à–∏–±–æ–∫ –≤ –ª—é–±—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º–∞—Ö. –í &lt;strong&gt;–°&lt;/strong&gt; –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è &lt;a href="http://ru.wikipedia.org/wiki/%D0%9F%D1%80%D0%B8%D0%BC%D0%B8%D1%82%D0%B8%D0%B2%D0%BD%D1%8B%D0%B9_%D1%82%D0%B8%D0%BF" rel="nofollow"&gt;–ø—Ä–∏–º–∏—Ç–∏–≤–Ω—ã—Ö —Ç–∏–ø–æ–≤&lt;/a&gt; –¥–∞–Ω–Ω—ã—Ö, —Ç–∞–∫–∏—Ö –∫–∞–∫ &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;char&lt;/code&gt; –∏ —Ç.–¥. –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–æ, –Ω–æ –∫–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–æ—Å—Ç–∞–≤–Ω—ã–µ —Ç–∏–ø—ã, —Ç–∞–∫–∏–µ –∫–∞–∫ &lt;strong&gt;–º–∞—Å—Å–∏–≤—ã&lt;/strong&gt; –∏–ª–∏ &lt;strong&gt;—Å—Ç—Ä—É–∫—Ç—É—Ä—ã&lt;/strong&gt; ? –û–ø–∞—Å–Ω–æ–π, –Ω–æ —É–≤—ã, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—ë–Ω–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–æ–π —è–≤–ª—è–µ—Ç—Å—è –≤–æ—Ç —Ç–∞–∫–æ–π —Å–ø–æ—Å–æ–±:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;TemperatureNode&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;todaysAverage&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;TemperatureNode&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;nextTemperature&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;TemperatureNode&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;memset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ü—Ä–æ–±–ª–µ–º–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º &lt;code&gt;memset&lt;/code&gt; –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –≤ —Ç–æ–º, —á—Ç–æ –¥–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Å—Ç–æ –æ–±–Ω—É–ª—è–µ—Ç –±–∏—Ç—ã, –Ω–µ –∑–∞–±–æ—Ç—è—Å—å –æ –¥–µ—Ç–∞–ª—è—Ö –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö, —Å –∫–æ—Ç–æ—Ä—ã–º –µ–π –ø—Ä–∏—Ö–æ–¥–∏—Ç—Å—è —Ä–∞–±–æ—Ç–∞—Ç—å. –í &lt;strong&gt;–°&lt;/strong&gt; –º–æ–∂–Ω–æ –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö, –Ω–∞–ø—Ä–∏–º–µ—Ä &lt;code&gt;NULL&lt;/code&gt; - —É–∫–∞–∑–∞—Ç–µ–ª—å –∏–ª–∏ —á–∏—Å–ª–∞ —Å &lt;em&gt;–ø–ª–∞–≤–∞—é—â–µ–π –∑–∞–ø—è—Ç–æ–π&lt;/em&gt;, —É –∫–æ—Ç–æ—Ä—ã—Ö –≤—Å–µ –±–∏—Ç—ã –≤ –Ω–æ–ª—å –µ—â—ë –Ω–µ –æ–∑–Ω–∞—á–∞—é—Ç, —á—Ç–æ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ —Ç–æ–∂–µ –±—É–¥–µ—Ç –Ω–æ–ª—å. –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É, –ø–æ–≤–µ–¥–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–π –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –æ–∂–∏–¥–∞–µ–º–æ–≥–æ.&lt;/p&gt;
&lt;p&gt;–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—É—Ç—ë–º —è–≤–Ω–æ–π –ø–æ—à–∞–≥–æ–≤–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –µ—ë –ø–æ–ª–µ–π –≤—ã–≥–ª—è–¥–∏—Ç –≥—Ä–æ–º–æ–∑–¥–∫–æ –∏ –µ–≥–æ —Ç—Ä—É–¥–Ω–æ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—Ç—å. –î–∞–∂–µ –µ—Å–ª–∏ –∏–∑–±–µ–∂–∞—Ç—å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–¥–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è), –∫–∞–∂–¥—ã–π —Ä–∞–∑ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ / —É–¥–∞–ª–µ–Ω–∏–∏ —É —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–æ–ª–µ–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–Ω–æ—Å–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏ –≤ –∫–æ–¥, –∑–∞–Ω–∏–º–∞—é—â–∏–π—Å—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π.&lt;/p&gt;
&lt;p&gt;–ö —Å—á–∞—Å—Ç—å—é, —Ç—É—Ç –º–æ–∂–Ω–æ –∑–∞–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å –∏–¥–∏–æ–º—É –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –°–û–°–¢–ê–í–ù–´–• –¢–ò–ü–û–í –° –ü–û–ú–û–©–¨–Æ {0}. –î–∞–Ω–Ω—ã–π –ø—Ä–∏—ë–º &lt;strong&gt;–≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç&lt;/strong&gt; –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –≤—Å–µ—Ö –ø–æ–ª–µ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã (–≤–∫–ª—é—á–∞—è —á–∏—Å–ª–∞ —Å –ø–ª–∞–≤–∞—é—â–µ–π –∑–∞–ø—è—Ç–æ–π –∏ —Ç.–¥.)  –Ω—É–ª–µ–≤—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏. –ü–µ—Ä–µ–Ω–æ—Å–∏–º–æ—Å—Ç—å –¥–∞–Ω–Ω–æ–≥–æ –∫–æ–¥–∞ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ü–µ–ª–µ–≤–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç—Å—è –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä–æ–º:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;TemperatureNode&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–¢–∞–∫–∂–µ –¥–∞–Ω–Ω–∞—è –∏–¥–∏–æ–º–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω–∞ –ø—Ä–∏ –æ–±–Ω—É–ª–µ–Ω–∏–∏ —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–∞—Å—Å–∏–≤–æ–≤ –∏–ª–∏ –ø–æ–ª–µ–π —Å—Ç—Ä—É–∫—Ç—É—Ä –≤ –ª—é–±–æ–º –º–µ—Å—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã, –¥–ª—è —ç—Ç–æ–π —Ü–µ–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–∑–¥–∞—Ç—å —ç—Ç–∞–ª–æ–Ω (–ª—É—á—à–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É &lt;code&gt;const&lt;/code&gt;), –∞ –µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ –º–µ—Ä–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cm"&gt;/* –≠—Ç–∞–ª–æ–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å –Ω—É–ª–µ–≤—ã–º–∏ –ø–æ–ª—è–º–∏ */&lt;/span&gt;

&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;TemperatureNode&lt;/span&gt; &lt;span class="n"&gt;zeroNode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;TemperatureNode&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="cm"&gt;/* –ß—Ç–æ-—Ç–æ –¥–µ–ª–∞–µ—Ç—Å—è —Å —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π node. */&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="cm"&gt;/* –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–±–Ω—É–ª–∏—Ç—å –≤—Å–µ –ø–æ–ª—è node */&lt;/span&gt;

&lt;span class="n"&gt;node&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;zeroNode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ü—Ä–∏ –æ–±–Ω—É–ª–µ–Ω–∏–∏ –º–∞—Å—Å–∏–≤–æ–≤ –æ–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—Å—Ç–æ–≥–æ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç - –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–µ—Ä–µ–±–∏—Ä–∞—Ç—å –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ —Ü–∏–∫–ª–µ. –ö–∞–∫ –≤–∞—Ä–∏–∞–Ω—Ç, –º–æ–∂–Ω–æ –∑–∞–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å &lt;code&gt;memcpy&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;zeroArray&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;NO_OF_TEMPERATURES&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;temperatures&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;NO_OF_TEMPERATURES&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="cm"&gt;/* –ß—Ç–æ-—Ç–æ –¥–µ–ª–∞–µ—Ç—Å—è —Å –º–∞—Å—Å–∏–≤–æ–º temperatures. */&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="cm"&gt;/* –û–±–Ω—É–ª–∏—Ç—å –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ temperatures. */&lt;/span&gt;

&lt;span class="n"&gt;memcpy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;temperatures&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;zeroArray&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt; &lt;span class="n"&gt;temperatures&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–î–ª—è –º–Ω–æ–≥–æ–º–µ—Ä–Ω—ã—Ö –º–∞—Å—Å–∏–≤–æ–≤ –∏ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä –º–æ–≥—É—Ç –ø–æ–Ω–∞–¥–æ–±–∏—Ç—å—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ñ–∏–≥—É—Ä–Ω—ã–µ —Å–∫–æ–±–∫–∏ –Ω–∞–ø—Ä–∏–º–µ—Ä &lt;code&gt;{{0}}&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;–ö–û–õ–ò–ß–ï–°–¢–í–û –≠–õ–ï–ú–ï–ù–¢–û–í –ú–ê–°–°–ò–í–ê –ö–ê–ö –†–ï–ó–£–õ–¨–¢–ê–¢ –î–ï–õ–ï–ù–ò–Ø&lt;/h3&gt;
&lt;p&gt;–ö–∞–∫ –∏–∑–≤–µ—Å—Ç–Ω–æ, &lt;strong&gt;–°&lt;/strong&gt; –Ω–µ –∏–∑–æ–±–∏–ª—É–µ—Ç —É–¥–æ–±—Å—Ç–≤–∞–º–∏ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –º–∞—Å—Å–∏–≤–∞–º–∏. –ü—Ä–∏ –ø–µ—Ä–µ–¥–∞—á–µ –º–∞—Å—Å–∏–≤–∞ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ —Ñ—É–Ω–∫—Ü–∏–∏, –ø–æ–ø—Ä–æ—Å—Ç—É –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –µ–≥–æ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç. –ë–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–æ–≥–ª–∞—à–µ–Ω–∏–π (–ø—Ä–∏–º–µ—Ä —Ç–∞–∫–æ–≥–æ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è - —Å—Ç—Ä–æ–∫–∞, —Ç–æ—Ç –∂–µ –º–∞—Å—Å–∏–≤, –Ω–æ –æ–Ω –≤—Å–µ–≥–¥–∞ –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è –Ω—É–ª–µ–≤—ã–º —Å–∏–º–≤–æ–ª–æ–º), —ç—Ç–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, —á—Ç–æ–±—ã –≤ —Ç–µ–ª–µ —Ñ—É–Ω–∫—Ü–∏–∏ —É–∑–Ω–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞. –í —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ API –≤–µ—à–∞—é—Ç –≤—Å—é —á—ë—Ä–Ω—É—é –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—é –ø–æ –≤—ã—á–∏—Å–ª–µ–Ω–∏—é –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞ –Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞. –û–¥–Ω–∏–º –∏–∑ –ø—Ä–∏–º–µ—Ä–æ–≤ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ñ—É–Ω–∫—Ü–∏—è &lt;code&gt;poll()&lt;/code&gt; –≤ POSIX API. –í –∫–∞—á–µ—Å—Ç–≤–µ –ø–µ—Ä–≤–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –µ–π –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è –º–∞—Å—Å–∏–≤ —Å—Ç—Ä—É–∫—Ç—É—Ä &lt;code&gt;pollfd&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;pollfd&lt;/span&gt; &lt;span class="n"&gt;handles&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;NO_OF_HANDLES&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="cm"&gt;/* –ó–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è –º–∞—Å—Å–∏–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ */&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;poll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;handles&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;NO_OF_HANDLES&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TIMEOUT&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ü—Ä–æ–±–ª–µ–º–∞ –¥–∞–Ω–Ω–æ–≥–æ –∫–æ–¥–∞ –≤ —Ç–æ–º, —á—Ç–æ –∑–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º –∫—Ä–∞—Å–∏–≤–æ–≥–æ –∏–º–µ–Ω–∏ –Ω–∏—á–µ–≥–æ –Ω–µ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —Ç–æ, —á—Ç–æ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞ NO_OF_HANDLES —ç—Ç–æ —Ä–µ–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –º–∞—Å—Å–∏–≤–µ. –•–æ—Ä–æ—à–∏–µ –∏–º–µ–Ω–∞ –∏–º–µ—é—Ç –±–æ–ª—å—à–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞. –ö–æ–º–ø–∏–ª—è—Ç–æ—Ä—É –æ–Ω–∏ –Ω–∏ –æ —á–µ–º –Ω–µ –≥–æ–≤–æ—Ä—è—Ç, –æ–Ω –Ω–µ –±—É–¥–µ—Ç —Ä—É–≥–∞—Ç—å—Å—è –Ω–∞ —Ç–∞–∫–æ–π, —è–≤–Ω–æ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–¥ —Å "–¥—É—à–∫–æ–º":&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#define NO_OF_HANDLES x&lt;/span&gt;
&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;pollfd&lt;/span&gt; &lt;span class="n"&gt;handles&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;NO_OF_HANDLES&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="cm"&gt;/* –ó–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è –º–∞—Å—Å–∏–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ */&lt;/span&gt;

&lt;span class="cp"&gt;#undef NO_OF_HANDLES&lt;/span&gt;
&lt;span class="cp"&gt;#define NO_OF_HANDLES y&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;poll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;handles&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;NO_OF_HANDLES&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TIMEOUT&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ü—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –∏–¥–∏–æ–º—ã –ö–û–õ–ò–ß–ï–°–¢–í–û –≠–õ–ï–ú–ï–ù–¢–û–í –ú–ê–°–°–ò–í–ê –ö–ê–ö –†–ï–ó–£–õ–¨–¢–ê–¢ –î–ï–õ–ï–ù–ò–Ø, –º—ã –º–æ–∂–µ–º –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å, —á—Ç–æ –≤—ã—á–∏—Å–ª—è–µ–º–æ–µ –Ω–∞ —ç—Ç–∞–ø–µ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞ –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç —Ä–∞–≤–Ω—ã–º —Ä–µ–∞–ª—å–Ω–æ–º—É –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –º–∞—Å—Å–∏–≤–µ:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;pollfd&lt;/span&gt; &lt;span class="n"&gt;handles&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;NO_OF_HANDLES&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="cm"&gt;/* –ó–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è –º–∞—Å—Å–∏–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ */&lt;/span&gt;

&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;size_t&lt;/span&gt; &lt;span class="n"&gt;noOfHandles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt; &lt;span class="n"&gt;handles&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt; &lt;span class="n"&gt;handles&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;poll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;handles&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;noOfHandles&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TIMEOUT&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–í –æ—Å–Ω–æ–≤–µ –∏–¥–∏–æ–º—ã –ª–µ–∂–∏—Ç —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ, —á—Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –¥–µ–ª–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –≤—Å–µ–≥–æ –º–∞—Å—Å–∏–≤–∞ –Ω–∞ —Ä–∞–∑–º–µ—Ä –æ–¥–Ω–æ–≥–æ –∏–∑ –µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —è–≤–ª—è–µ—Ç—Å—è –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤.&lt;/p&gt;
&lt;h3&gt;ENUM –î–õ–Ø –¶–ï–õ–û–ß–ò–°–õ–ï–ù–ù–´–• –ö–û–ù–°–¢–ê–ù–¢&lt;/h3&gt;
&lt;p&gt;–í –ø—Ä–µ–¥—ã–¥—É—â–µ–º –ø—Ä–∏–º–µ—Ä–µ —Ä–∞–∑–º–µ—Ä–Ω–æ—Å—Ç—å –º–∞—Å—Å–∏–≤–∞ –∑–∞–¥–∞—ë—Ç—Å—è –º–∞–∫—Ä–æ—Å–æ–º &lt;code&gt;#define NO_OF_HANDLES&lt;/code&gt;, –Ω–æ —ç—Ç–æ –∂–µ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –∏ –±–æ–ª–µ–µ —Å—Ç—Ä–æ–≥–∏–º —Å–ø–æ—Å–æ–±–æ–º —á–µ—Ä–µ–∑ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ enum:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;enum&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;NO_OF_HANDLES&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;pollfd&lt;/span&gt; &lt;span class="n"&gt;handles&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;NO_OF_HANDLES&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–¢–∞–∫–æ–µ —Ä–µ—à–µ–Ω–∏–µ –±–æ–ª–µ–µ –Ω–∞–¥—ë–∂–Ω–æ —Ç.–∫. –¥–ª—è enum –Ω–µ–ª—å–∑—è —Å–¥–µ–ª–∞—Ç—å –∫–∞–∫—É—é-–Ω–∏–±—É–¥—å –ø–∞–∫–æ—Å—Ç—å —Ç–∏–ø–∞ &lt;code&gt;#undef&lt;/code&gt;. –ï—â—ë –º–æ–∂–Ω–æ –±—ã–ª–æ –±—ã –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –∑–∞–¥–∞—Ç—å —Ä–∞–∑–º–µ—Ä–Ω–æ—Å—Ç—å –∏ —Å –ø–æ–º–æ—â—å—é &lt;code&gt;const int NO_OF_HANDLES=42;&lt;/code&gt;, –ø—Ä–∞–≤–¥–∞ —Ç–∞–∫–æ–π —Å–ø–æ—Å–æ–± –≤–æ–∑–º–æ–∂–µ–Ω —Ç–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–π –∏ –ø–æ—ç—Ç–æ–º—É –Ω–µ –æ—Å–æ–±–æ –ø—Ä–∞–∫—Ç–∏—á–µ–Ω –≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç enum.&lt;/p&gt;
&lt;h3&gt;–ú–ê–ì–ò–ß–ï–°–ö–ò–ï –ß–ò–°–õ–ê –ö–ê–ö –ü–ï–†–ï–ú–ï–ù–ù–´–ï&lt;/h3&gt;
&lt;p&gt;–ß—Ç–æ –∑–∞ 42 !? –û–ø—ã—Ç–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã –∏–∑–±–µ–≥–∞—é—Ç &lt;a href="http://ru.wikipedia.org/wiki/%D0%9C%D0%B0%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%BE%D0%B5_%D1%87%D0%B8%D1%81%D0%BB%D0%BE_%28%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5%29" rel="nofollow"&gt;–º–∞–≥–∏—á–µ—Å–∫–∏—Ö —á–∏—Å–µ–ª&lt;/a&gt;, –ø–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω–∏ –¥–µ–ª–∞—é—Ç –∫–æ–¥ —Ç—Ä—É–¥–Ω—ã–º –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è –∏ –º–æ–≥—É—Ç –∑–∞–ø—É—Ç–∞—Ç—å –ª—é–±–æ–≥–æ, –∫—Ç–æ –±—É–¥–µ—Ç –µ–≥–æ —á–∏—Ç–∞—Ç—å / —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—Ç—å. –ü—Ä–∞–≤–¥–∞ –µ—Å—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —á–∏—Å–ª–∞ - 0, 1, 3.14 –∏ 42, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏–Ω—è—Ç–æ —Å—á–∏—Ç–∞—Ç—å –º–µ–Ω–µ–µ –º–∞–≥–∏—á–µ—Å–∫–∏–º–∏, —á–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ. –ö–æ–≥–¥–∞ –º—ã –≤–∏–¥–∏–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º—É—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 0, –º–æ–∂–Ω–æ –ø—Ä–µ–¥–ø–æ–ª–æ–∂–∏—Ç—å, —á—Ç–æ –æ–Ω–∞ –±—É–¥–µ—Ç –∏–∑–º–µ–Ω—è—Ç—å—Å—è –≥–¥–µ-—Ç–æ –¥–∞–ª—å—à–µ –≤ –∫–æ–¥–µ. –ß–∏—Å–ª–æ 1 –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ—Å—Ç–æ –∞–Ω–∞–ª–æ–≥–æ–º &lt;code&gt;true&lt;/code&gt;. –ß–∏—Å–ª–æ &lt;a href="http://ru.wikipedia.org/wiki/%D0%9E%D1%82%D0%B2%D0%B5%D1%82_%D0%BD%D0%B0_%D0%B3%D0%BB%D0%B0%D0%B2%D0%BD%D1%8B%D0%B9_%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81_%D0%B6%D0%B8%D0%B7%D0%BD%D0%B8,_%D0%B2%D1%81%D0%B5%D0%BB%D0%B5%D0%BD%D0%BD%D0%BE%D0%B9_%D0%B8_%D0%B2%D1%81%D0%B5%D0%B3%D0%BE_%D1%82%D0%B0%D0%BA%D0%BE%D0%B3%D0%BE" rel="nofollow"&gt;42&lt;/a&gt; —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ –ø–æ —Å–≤–æ–µ–π –ø—Ä–∏—Ä–æ–¥–µ, –æ–Ω–æ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –≥–ª–∞–≤–Ω—ã–π –≤–æ–ø—Ä–æ—Å –∂–∏–∑–Ω–∏, –≤—Å–µ–ª–µ–Ω–Ω–æ–π –∏ –≤—Å–µ–≥–æ —Ç–∞–∫–æ–≥–æ.&lt;/p&gt;
&lt;p&gt;–ö–∞–∫ –Ω–∏ —Å—Ç—Ä–∞–Ω–Ω–æ, —Å &lt;em&gt;–Ω–µ –æ—á–µ–Ω—å&lt;/em&gt; –º–∞–≥–∏—á–µ—Å–∫–∏–º–∏ —á–∏—Å–ª–∞–º–∏ —Ç–æ–∂–µ –º–æ–≥—É—Ç –±—ã—Ç—å –ø—Ä–æ–±–ª–µ–º—ã. –ù–∞–ø—Ä–∏–º–µ—Ä —É —Å—Ç—Ä—É–∫—Ç—É—Ä—ã &lt;code&gt;struct tm&lt;/code&gt;, –∫–æ—Ç–æ—Ä–∞—è c–æ–¥–µ—Ä–∂–∏—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –≤ &lt;strong&gt;–°&lt;/strong&gt;, –ø–æ–ª–µ &lt;code&gt;int tm_year;&lt;/code&gt; —Ö—Ä–∞–Ω–∏—Ç –≥–æ–¥—ã —Å 1900 (–≤ Windows) –∏–ª–∏ —Å 1970 (–≤ Unix). –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º &lt;em&gt;–Ω—É–ª–µ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ&lt;/em&gt; —ç—Ç–æ–≥–æ –ø–æ–ª—è –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ –µ—â—ë –Ω–µ –æ–∑–Ω–∞—á–∞–µ—Ç &lt;em&gt;–Ω—É–ª–µ–≤–æ–π –≥–æ–¥&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;–ù—É –∞ —Å –Ω–∞—Å—Ç–æ—è—â–∏–º–∏ –º–∞–≥–∏—á–µ—Å–∫–∏–º–∏ —á–∏—Å–ª–∞–º–∏ –≤—Å—ë –µ—â—ë –ø–µ—á–∞–ª—å–Ω–µ–π:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;startTimer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ù–µ—Å–º–æ—Ç—Ä—è –Ω–∞ —Ö–æ—Ä–æ—à–µ–µ –∏–º—è —Ñ—É–Ω–∫—Ü–∏–∏, —Å–ª–æ–∂–Ω–æ –æ–¥–Ω–æ–∑–Ω–∞—á–Ω–æ —Å–∫–∞–∑–∞—Ç—å, —á—Ç–æ —Ç—É—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç. –ï—Å–ª–∏ –ø—Ä–µ–¥–ø–æ–ª–æ–∂–∏—Ç—å, —á—Ç–æ 10 - —ç—Ç–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –∏–Ω—Ç–µ—Ä–≤–∞–ª, —Ç–æ –≤ —á—ë–º –æ–Ω –∏–∑–º–µ—Ä—è–µ—Ç—Å—è ? –°–µ–∫—É–Ω–¥—ã, –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥—ã –∏–ª–∏ —ë–∂–∏–∫–∏ ? –ê –º–æ–∂–µ—Ç —ç—Ç–æ –≤–æ–æ–±—â–µ –∫–∞–∫–æ–π-—Ç–æ –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä ? –°–æ –≤—Ç–æ—Ä—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º —Ç–∞–∫–∞—è –∂–µ –∏—Å—Ç–æ—Ä–∏—è.&lt;/p&gt;
&lt;p&gt;–®–∞–≥–æ–º –Ω–∞–≤—Å—Ç—Ä–µ—á—É –∫ —Å–∞–º–æ–¥–æ–∫—É–º–µ–Ω—Ç–∏—Ä—É—é—â–µ–º—É—Å—è –∫–æ–¥—É –±—É–¥–µ—Ç –∏–¥–∏–æ–º–∞ –ú–ê–ì–ò–ß–ï–°–ö–ò–ï –ß–ò–°–õ–ê –ö–ê–ö –ü–ï–†–ï–ú–ï–ù–ù–´–ï. –°–æ–≥–ª–∞—Å–∏—Ç–µ—Å—å, –¥–∞–Ω–Ω—ã–π –∫–æ–¥ –≤—ã–∑—ã–≤–∞–µ—Ç –Ω–∞–º–Ω–æ–≥–æ –º–µ–Ω—å—à–µ –≤–æ–ø—Ä–æ—Å–æ–≤:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;size_t&lt;/span&gt; &lt;span class="n"&gt;timeoutInSeconds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;size_t&lt;/span&gt; &lt;span class="n"&gt;doNotRescheduleTimer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;startTimer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;timeoutInSeconds&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;doNotRescheduleTimer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–°–ª–µ–¥—É—è —Ç–∞–∫–æ–º—É –ø—Ä–∏–Ω—Ü–∏–ø—É –≥–¥–µ-—Ç–æ –¥–∞–ª—å—à–µ –≤ –∫–æ–¥–µ –º–æ–∂–Ω–æ –ø–æ –∞–Ω–∞–ª–æ–≥–∏–∏ –Ω–∞–ø–∏—Å–∞—Ç—å:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;startTimer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tenSecondsTimeout&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;doNotRescheduleTimer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ö–æ–¥ —Å—Ç–∞–ª –µ—â—ë –±–æ–ª–µ–µ –ø–æ–Ω—è—Ç–Ω—ã–º, –Ω–µ —Ç–∞–∫ –ª–∏ ? –ò–ª–∏ –Ω–µ —Å–æ–≤—Å–µ–º ? –ü–æ–¥–≤–æ—Ö —Ç—É—Ç –≤ —Ç–æ–º, —á—Ç–æ –¥–ª—è –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä–∞ &lt;code&gt;tenSecondsTimeout&lt;/code&gt; —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ –∏–º—è. –ù–∏—á—Ç–æ –Ω–µ –º–µ—à–∞–µ—Ç –∫–∞–∫–æ–º—É-—Ç–æ —Å–ª–∏—à–∫–æ–º —É–º–Ω–æ–º—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—É –ø—Ä–∏—Å–≤–æ–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π &lt;code&gt;tenSecondsTimeout&lt;/code&gt; –Ω–µ —Å–æ–≤—Å–µ–º —Ç–æ —á–∏—Å–ª–æ, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã—Ç–µ–∫–∞–µ—Ç –∏–∑ –µ—ë –∏–º–µ–Ω–∏:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;size_t&lt;/span&gt; &lt;span class="n"&gt;tenSecondsTimeout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="cm"&gt;/* Original value was 10 */&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–¢–∞–∫–æ–µ –∏–Ω–æ–≥–¥–∞ —Å–ª—É—á–∞–µ—Ç—Å—è, –∏ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –æ—Ç–ª–∞–¥–∫–∏ –º–æ–∂–Ω–æ –¥–æ–ª–≥–æ –¥—É–º–∞—Ç—å, —Å–∫–æ–ª—å–∫–æ –∂–µ –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ –¥–ª—è—Ç—Å—è 10 —Å–µ–∫—É–Ω–¥...&lt;/p&gt;
&lt;p&gt;–ò–¥–µ–∞–ª—å–Ω–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è —Ç—É—Ç –Ω–µ—Ç. –ü–æ–∂–∞–ª—É–π, –Ω–µ —Å—Ç–æ–∏—Ç –ø—Ä–∏–º–µ–Ω—è—Ç—å —ç—Ç—É –∏–¥–∏–æ–º—É —Å–ª–µ–ø–æ –∏ –≥–¥–µ –ø–æ–ø–∞–ª–æ - –ª—É—á—à–µ, —á—Ç–æ–±—ã –≤ –∏–º–µ–Ω–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –Ω–µ –±—ã–ª–æ —É–ø–æ–º–∏–Ω–∞–Ω–∏–π –æ &lt;strong&gt;—á–∏—Å–ª–∞—Ö&lt;/strong&gt; –∏–ª–∏ &lt;strong&gt;—Ç–∏–ø–∞—Ö –¥–∞–Ω–Ω—ã—Ö&lt;/strong&gt;, –ø–æ—Å–∫–æ–ª—å–∫—É –æ–Ω–∏ –æ—á–µ–Ω—å —á–∞—Å—Ç–æ –º–µ–Ω—è—é—Ç—Å—è.&lt;/p&gt;
&lt;h3&gt;–ò–ú–ï–ù–û–í–ê–ù–ù–´–ï –ê–†–ì–£–ú–ï–ù–¢–´&lt;/h3&gt;
&lt;p&gt;–ö–∞–∫ –º—ã —É–∂–µ –∑–Ω–∞–µ–º, —Å–ª–µ–¥—É—è –ø—Ä–∏–Ω—Ü–∏–ø—É –ú–ê–ì–ò–ß–ï–°–ö–ò–ï –ß–ò–°–õ–ê –ö–ê–ö –ü–ï–†–ï–ú–ï–ù–ù–´–ï –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –∫–æ–¥ –±–æ–ª–µ–µ —á–∏—Ç–∞–±–µ–ª—å–Ω—ã–º, –Ω–æ, –∫–∞–∫ –≤–∏–¥–Ω–æ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –ø—Ä–∏–º–µ—Ä–∞, –±—ã–≤–∞—é—Ç —Å–ª—É—á–∞–∏, –∫–æ–≥–¥–∞ –ø–æ–¥–æ–±—Ä–∞—Ç—å —Ö–æ—Ä–æ—à–µ–µ –∏–º—è –¥–ª—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –ø—Ä–æ–±–ª–µ–º–∞—Ç–∏—á–Ω–æ. –ü–æ—ç—Ç–æ–º—É –¥–∞–≤–∞–π—Ç–µ –Ω–µ–º–Ω–æ–≥–æ –ø–µ—Ä–µ–¥–µ–ª–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –ø—Ä–∏–º–µ—Ä. –î–æ–ø—É—Å—Ç–∏–º, –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π, –∫–æ—Ç–æ—Ä–∞—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø–µ—Ä–≤–æ–≥–æ —Ç–∞–π–º–µ—Ä–∞, –º–æ–∂–Ω–æ –¥–∞—Ç—å –∏–º—è &lt;code&gt;timeoutInSeconds&lt;/code&gt;, –Ω–æ –∫–∞–∫–æ–µ –∏–º—è —Ç–æ–≥–¥–∞ —Å—Ç–æ–∏—Ç –¥–∞–≤–∞—Ç—å –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ —Ç–∞–π–º–µ—Ä–∞ ? –ö–∞–∫ –≤–∞—Ä–∏–∞–Ω—Ç, –º–æ–∂–Ω–æ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å &lt;code&gt;timeoutInSeconds&lt;/code&gt;, –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ —É–±—Ä–∞–≤ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ &lt;code&gt;const&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kt"&gt;size_t&lt;/span&gt; &lt;span class="n"&gt;timeoutInSeconds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;size_t&lt;/span&gt; &lt;span class="n"&gt;doNotRescheduleTimer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;notifyClosingDoor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;startTimer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;timeoutInSeconds&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;doNotRescheduleTimer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="n"&gt;timeoutInSeconds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;closeDoor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;startTimer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;timeoutInSeconds&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;doNotRescheduleTimer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–¢—Ä—É–¥–Ω–æ –Ω–∞–∑–≤–∞—Ç—å —Ç–∞–∫–æ–π –∫–æ–¥ —á–∏—Ç–∞–±–µ–ª—å–Ω—ã–º –∏ –Ω–∞–¥—ë–∂–Ω—ã–º. –ö–æ–Ω—Ü–µ–ø—Ü–∏—è –ò–ú–ï–ù–û–í–ê–ù–ù–´–• –ê–†–ì–£–ú–ï–ù–¢–û–í –º–æ–≥–ª–∞ –±—ã —Ä–µ—à–∏—Ç—å –¥–∞–Ω–Ω—É—é –ø—Ä–æ–±–ª–µ–º—É, –ø–æ–∑–≤–æ–ª—è—è —è–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞—Ç—å –∏–º—è –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º–æ–≥–æ –≤ –º–µ—Ç–æ–¥ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞, –≤–º–µ—Å—Ç–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –µ–≥–æ –ø–æ –ø–æ–ª–æ–∂–µ–Ω–∏—é. &lt;strong&gt;–°&lt;/strong&gt; –Ω–∞–ø—Ä—è–º—É—é –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ç–∞–∫—É—é –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å, –æ–¥–Ω–∞–∫–æ –≤—Å—ë –∂–µ –∏–º–µ–µ—Ç—Å—è –æ–¥–∏–Ω —Å–ø–æ—Å–æ–± —ç–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Ö–æ–∂–µ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kt"&gt;size_t&lt;/span&gt; &lt;span class="n"&gt;timeoutInSeconds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;size_t&lt;/span&gt; &lt;span class="n"&gt;doNotRescheduleTimer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;notifyClosingDoor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;startTimer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;timeoutInSeconds&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;doNotRescheduleTimer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="n"&gt;closeDoor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;startTimer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;timeoutInSeconds&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;doNotRescheduleTimer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π &lt;code&gt;timeoutInSeconds&lt;/code&gt; –ø–æ-–ø—Ä–µ–∂–Ω–µ–º—É –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ—Ç—Å—è –∑–∞–¥–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –ø–æ—Å–ª–µ —á–µ–≥–æ –æ–Ω–∞ –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç —Ñ—É–Ω–∫—Ü–∏–∏ &lt;code&gt;startTimer&lt;/code&gt;. –¢–µ–ø–µ—Ä—å –∫–æ–¥ –Ω–µ–ø–ª–æ—Ö–æ –≤—ã–≥–ª—è–¥–∏—Ç, –æ–¥–Ω–∞–∫–æ –ø—Ä–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –≤—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π, –∫–æ–≥–¥–∞ –∫–∞–∂–¥—ã–π –±–∞–π—Ç –ø–∞–º—è—Ç–∏ –Ω–∞ —Å—á–µ—Ç—É, —Ç–∞–∫–æ–π –ø–æ–¥—Ö–æ–¥ –º–æ–∂–µ—Ç –æ–∫–∞–∑–∞—Ç—å—Å—è —Å–ª–∏—à–∫–æ–º —Ä–∞—Å—Ç–æ—á–∏—Ç–µ–ª—å–Ω—ã–º. –í –ø–æ–¥–æ–±–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö –Ω–∏—á—Ç–æ –Ω–µ –º–µ—à–∞–µ—Ç –≤–º–µ—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è &lt;code&gt;timeoutInSeconds&lt;/code&gt; –ø—Ä–æ—Å—Ç–æ –∑–∞–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;closeDoor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;startTimer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="cm"&gt;/*Timeout in seconds*/&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="cm"&gt;/*Don&amp;#39;t reschedule*/&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ß–µ–º –±–æ–ª—å—à–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –≤ –∫–æ–¥–µ —Ç–µ–º –≤–µ—Å–µ–ª–µ–π –µ–≥–æ —á–∏—Ç–∞—Ç—å.&lt;/p&gt;
&lt;h3&gt;–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –° –û–ü–ò–°–ê–ù–ò–ï–ú&lt;/h3&gt;
&lt;p&gt;–í —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–µ &lt;strong&gt;C&lt;/strong&gt; –∏–º–µ–µ—Ç—Å—è –º–µ—Ö–∞–Ω–∏–∑–º –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã –Ω–∞ —ç—Ç–∞–ø–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è - –º–∞–∫—Ä–æ—Å &lt;code&gt;assert&lt;/code&gt;, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å –ø–æ–≤–µ–¥–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã, –æ–±–Ω–∞—Ä—É–∂–∏–≤–∞—è –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –æ—à–∏–±–∫–∏. –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–º –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º –¥–ª—è &lt;code&gt;assert&lt;/code&gt; —è–≤–ª—è–µ—Ç—Å—è –≤—ã—Ä–∞–∂–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤ –Ω–æ—Ä–º–∞–ª—å–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∏—Å—Ç–∏–Ω–Ω–æ. –í —ç—Ç–æ–º —Å–ª—É—á–∞–µ –Ω–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∏ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –∏–¥—ë—Ç –¥–∞–ª—å—à–µ. –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ &lt;code&gt;assert&lt;/code&gt; –ø–µ—á–∞—Ç–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ &lt;a href="http://ru.wikipedia.org/wiki/%D0%A1%D1%82%D0%B0%D0%BD%D0%B4%D0%B0%D1%80%D1%82%D0%BD%D1%8B%D0%B5_%D0%BF%D0%BE%D1%82%D0%BE%D0%BA%D0%B8" rel="nofollow"&gt;—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–æ—Ç–æ–∫&lt;/a&gt; &lt;code&gt;stderr&lt;/code&gt; –∏ –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é &lt;code&gt;abort()&lt;/code&gt; –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã.&lt;/p&gt;
&lt;p&gt;–ù–∏–∫–æ–º—É –Ω–µ —Ö–æ—á–µ—Ç—Å—è —Ä–∞–∑–±–∏—Ä–∞—Ç—å—Å—è –≤ –¥–ª–∏–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏—è—Ö, –≤ —ç—Ç–æ–º —Å–ª—É—á–∞–µ –º—ã —Å—Ç–∞—Ä–∞–µ–º—Å—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —É–ø—Ä–æ—Å—Ç–∏—Ç—å –∫–æ–¥, –ø—Ä–µ–æ–±—Ä–∞–∑—É—è –µ–≥–æ —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–µ, –±–æ–ª–µ–µ –º–∞–ª–µ–Ω—å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –ø–µ—Ä–µ–¥–∞–≤–∞—è –∏–º –∫–∞–∫–∏–µ-—Ç–æ –¥–∞–Ω–Ω—ã–µ. –ò—Å–ø–æ–ª—å–∑—É—è –º–∞–∫—Ä–æ—Å &lt;code&gt;assert&lt;/code&gt;, —Ñ—É–Ω–∫—Ü–∏—è –º–æ–∂–µ—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ –µ–π –∞—Ä–≥—É–º–µ–Ω—Ç—ã –ø–µ—Ä–µ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º —Å–≤–æ–µ–π –æ—Å–Ω–æ–≤–Ω–æ–π –ª–æ–≥–∏–∫–∏ –∏ —Ç–µ–º —Å–∞–º—ã–º –≤—ã—è–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É –Ω–∞ —Å–∞–º–æ–º —Ä–∞–Ω–Ω–µ–º —ç—Ç–∞–ø–µ:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;sayHelloTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;Address&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;aGoodFriend&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;aGoodFriend&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Telegram&lt;/span&gt; &lt;span class="n"&gt;friendlyGreetings&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

        &lt;span class="cm"&gt;/* –ó–∞–ø–æ–ª–Ω—è–µ–º —Ç–µ–ª–µ–≥—Ä–∞–º–º—É telegram... */&lt;/span&gt;

        &lt;span class="n"&gt;sendTelegram&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;friendlyGreetings&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;aGoodFriend&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Empty address not allowed&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;sendTelegram&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;Telegram&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;telegram&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;Address&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;receiver&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="cm"&gt;/* –ü—Ä–æ–≤–µ—Ä–∫–∞. –¢–µ–ª–µ–≥—Ä–∞–º–º–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç ? */&lt;/span&gt;
    &lt;span class="n"&gt;assert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;telegram&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="cm"&gt;/* –ü—Ä–æ–≤–µ—Ä–∫–∞. –ü–æ–ª—É—á–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç ? */&lt;/span&gt;
    &lt;span class="n"&gt;assert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;receiver&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="cm"&gt;/* –û—Ç—Å—ã–ª–∞–µ–º —Ç–µ–ª–µ–≥—Ä–∞–º–º—É... */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–§–æ—Ä–º–∞—Ç –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –º–æ–∂–µ—Ç –Ω–µ–º–Ω–æ–≥–æ –æ—Ç–ª–∏—á–∞—Ç—å—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä–∞, –Ω–æ –ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á—Ç–æ-—Ç–æ —Ç–∞–∫–æ–µ:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Assertion failed: expression, file filename, line line number
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–°—É—Ç—å –∏–¥–∏–æ–º—ã –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –° –û–ü–ò–°–ê–ù–ò–ï–ú –≤ —Ç–æ–º, —á—Ç–æ –≤ &lt;em&gt;–≤—ã—Ä–∞–∂–µ–Ω–∏–µ&lt;/em&gt; (expression) –º–æ–∂–Ω–æ –ø–æ–¥–º–µ—à–∞—Ç—å —Å—Ç—Ä–æ–∫—É - –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π. –≠—Ç–æ –ø–æ–∑–≤–æ–ª–∏—Ç –Ω–µ —Ç–æ–ª—å–∫–æ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –º–µ—Å—Ç–æ, –≤ –∫–æ—Ç–æ—Ä–æ–º –≤–æ–∑–Ω–∏–∫–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞, –Ω–æ –∏ –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ –ø–æ–Ω—è—Ç–Ω–æ –æ–ø–∏—Å–∞—Ç—å –µ—ë:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;assert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;receiver&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Is validated by the caller&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ì–ª–∞–≤–Ω—ã–º –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–æ–º —Ç–∞–∫–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞ —è–≤–ª—è–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –æ–±—ä—ë–º –ø–∞–º—è—Ç–∏, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥—É—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è —Å—Ç—Ä–æ–∫–∏ —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏. –î–ª—è –≤—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π —ç—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ. –û–¥–Ω–∞–∫–æ –Ω–µ —Å—Ç–æ–∏—Ç –∑–∞–±—ã–≤–∞—Ç—å, —á—Ç–æ –º–∞–∫—Ä–æ—Å &lt;code&gt;assert&lt;/code&gt; - —ç—Ç–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞—Ä–∏–π –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏, –µ–≥–æ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è –º–æ–∂–Ω–æ –æ—Ç–∫–ª—é—á–∏—Ç—å (&lt;code&gt;NDEBUG&lt;/code&gt;).&lt;/p&gt;
&lt;h3&gt;–°–¢–ê–¢–ò–ß–ï–°–ö–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê&lt;/h3&gt;
&lt;p&gt;–î–∏–∞–≥–Ω–æ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—à–∏–±–∫–∏ –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ –Ω–∞ —ç—Ç–∞–ø–µ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ –æ–±—ã—á–Ω–æ –≤—ã—Ö–æ–¥–∏—Ç –¥–µ—à–µ–≤–ª–µ —á–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–¥—É–∫—Ç –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö. –ù–∞–ø—Ä–∏–º–µ—Ä –ø–∞—Ä–æ—á–∫–∞ –º–∞–∫—Ä–æ—Å–æ–≤ –¥–ª—è –±–∏—Ç–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#define BIT_SET(a,b) ((a) |= (1&amp;lt;&amp;lt;(b)))&lt;/span&gt;
&lt;span class="cp"&gt;#define BIT_CLEAR(a,b) ((a) &amp;amp;= ~(1&amp;lt;&amp;lt;(b)))&lt;/span&gt;
&lt;span class="cp"&gt;#define BIT_FLIP(a,b) ((a) ^= (1&amp;lt;&amp;lt;(b)))&lt;/span&gt;
&lt;span class="cp"&gt;#define BIT_CHECK(a,b) ((a) &amp;amp; (1&amp;lt;&amp;lt;(b)))&lt;/span&gt;

&lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// OK&lt;/span&gt;
&lt;span class="n"&gt;BIT_SET&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// BAD: 10 &amp;gt; 8 * sizeof(a)&lt;/span&gt;
&lt;span class="n"&gt;BIT_SET&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–û—á–µ–≤–∏–¥–Ω–æ –æ–ø–µ—Ä–∞—Ü–∏—è &lt;code&gt;BIT_SET(a, 10);&lt;/code&gt; –Ω–µ –∏–º–µ–µ—Ç —Å–º—ã—Å–ª–∞ –¥–ª—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π 8 –±–∏—Ç –∏ —Ç–∞–∫–æ–π –∫–ª–∞—Å—Å –æ—à–∏–±–æ–∫ –º–æ–∂–Ω–æ –∏ –Ω—É–∂–Ω–æ –æ–±–Ω–∞—Ä—É–∂–∏–≤–∞—Ç—å –µ—â—ë –Ω–∞ —ç—Ç–∞–ø–µ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏. –°—É—â–µ—Å—Ç–≤—É—é—Ç –º–Ω–æ–≥–æ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö &lt;a href="http://www.pixelbeat.org/programming/gcc/static_assert.html" rel="nofollow"&gt;—Å–ø–æ—Å–æ–±–æ–≤&lt;/a&gt; —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#define STATIC_ASSERT(cond) typedef int foo[(cond) ? 1 : -1]&lt;/span&gt;

&lt;span class="cp"&gt;#define BIT_SET(a,b) STATIC_ASSERT(8*sizeof(a)&amp;gt;b); ((a) |= (1&amp;lt;&amp;lt;(b)))&lt;/span&gt;

&lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// OK&lt;/span&gt;
&lt;span class="n"&gt;BIT_SET&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// compile error&lt;/span&gt;
&lt;span class="n"&gt;BIT_SET&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–¢–µ–ø–µ—Ä—å –ª–æ–≥–∏—á–µ—Å–∫–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–æ–¥ &lt;code&gt;BIT_SET(a, 10);&lt;/code&gt; –ø–æ–ø—Ä–æ—Å—Ç—É –Ω–µ —Å–æ–±–µ—Ä—ë—Ç—Å—è —á—Ç–æ –∏ —Ç—Ä–µ–±–æ–≤–∞–ª–æ—Å—å –≤ –ø–æ—Å—Ç–∞–Ω–æ–≤–∫–µ –∑–∞–¥–∞—á–∏.&lt;/p&gt;
&lt;h3&gt;–ö–û–ù–°–¢–ê–ù–¢–´ –°–õ–ï–í–ê&lt;/h3&gt;
&lt;p&gt;–í —Å—Ç–∞–Ω–¥–∞—Ä—Ç &lt;strong&gt;–°&lt;/strong&gt; –≤–æ—à–ª–∞ –æ–¥–Ω–∞ –∑–∞–≥–∞–¥–æ—á–Ω–∞—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è, –≤ –∫–æ—Ç–æ—Ä–æ–π –ª–µ–≥–∫–æ –∑–∞–ø—É—Ç–∞—Ç—å—Å—è / –æ—á–µ–ø—è—Ç–∞—Ç—å—Å—è (–º—ã —Å –Ω–µ–π –æ—Ç—á–∞—Å—Ç–∏ —É–∂–µ –ø–µ—Ä–µ—Å–µ–∫–∞–ª–∏—Å—å –ø—Ä–∏ –æ–ø–∏—Å–∞–Ω–∏–∏ –∏–¥–∏–æ–º—ã –ò–ú–ï–ù–û–í–ê–ù–ù–´–ï –ê–†–ì–£–ú–ï–ù–¢–´):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="cm"&gt;/* –°—é–¥–∞ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–æ–ø–∞–¥—ë–º (–ò–Ω–¥—É—Å—Å–∫–∏–π –∫–æ–¥) ! */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="cm"&gt;/* –ê –≤–æ—Ç —Å—é–¥–∞ –ø–æ–ø–∞–¥—ë–º... */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ò–Ω–æ–≥–¥–∞ –ø–æ–¥–æ–±–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –≤—Å—ë –∂–µ –∏–º–µ—é—Ç —Å–∫—Ä—ã—Ç—ã–π —Å–º—ã—Å–ª:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Friend&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;aGoodFriend&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;aGoodFriend&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;findFriendLivingAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;sayHelloTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;aGoodFriend&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;I am not your friend&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–° –ø–æ–º–æ—â—å—é –∏–¥–∏–æ–º—ã –ö–û–ù–°–¢–ê–ù–¢–´ –°–õ–ï–í–ê –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç –º–æ–∂–µ—Ç –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ —É–∫–∞–∑–∞—Ç—å –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä—É, —á—Ç–æ –æ–Ω –∏–º–µ–ª –≤–≤–∏–¥—É –æ–ø–µ—Ä–∞—Ü–∏—é &lt;em&gt;—Å—Ä–∞–≤–Ω–µ–Ω–∏—è&lt;/em&gt;, –∞ –Ω–µ &lt;em&gt;–ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è&lt;/em&gt;. –°–ª–µ–¥—É—é—â–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è –Ω–µ –∏–º–µ–µ—Ç —Å–º—ã—Å–ª–∞ –∏ –ø–æ—ç—Ç–æ–º—É –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä –¥–æ–ª–∂–µ–Ω —Ä—É–≥–∞—Ç—å—Å—è:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ê –≤–æ—Ç –ø–æ–¥–æ–±–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –Ω–µ –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏—Ç –∑–¥—Ä–∞–≤–æ–º—É —Å–º—ã—Å–ª—É:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="cm"&gt;/* –ï—Å–ª–∏ —Ö —Ä–∞–≤–µ–Ω –Ω—É–ª—é, –Ω–∞–º —Å—é–¥–∞ */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ù–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –æ—á–µ–≤–∏–¥–Ω—É—é –ø–æ–ª—å–∑—É —ç—Ç–æ–π –∏–¥–∏–æ–º—ã, –æ–ø—ã—Ç–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã —Å—á–∏—Ç–∞—é—Ç, —á—Ç–æ –æ–Ω–∞ –¥–µ–ª–∞–µ—Ç –∫–æ–¥ —Ç—Ä—É–¥–Ω—ã–º –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è, –∏, —á—Ç–æ –µ—â—ë —Ö—É–∂–µ, –Ω–µ—Ç –ø–æ–ª–Ω–æ–π –≥–∞—Ä–∞–Ω—Ç–∏–∏ —Ç–æ–≥–æ, —á—Ç–æ –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä —Å–æ–æ–±—â–∏—Ç –æ–± –æ—à–∏–±–∫–µ. –ß—Ç–æ –∂, –∫ –º–Ω–µ–Ω–∏—é –æ–ø—ã—Ç–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤ —Å—Ç–æ–∏—Ç –ø—Ä–∏—Å–ª—É—à–∏–≤–∞—Ç—å—Å—è.&lt;/p&gt;
&lt;h3&gt;–ò–ù–ö–ê–ü–°–£–õ–Ø–¶–ò–Ø –î–ê–ù–ù–´–•&lt;/h3&gt;
&lt;p&gt;–í–∑–≥–ª—è–Ω–µ–º –Ω–∞ —Å—É–ø–µ—Ä —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é &lt;a href="https://mazko.github.io/blog/posts/2012/10/07/ispolzovanie-manchesterskogo-koda-na-primere/"&gt;–∫–æ–ª—å—Ü–µ–≤–æ–≥–æ –±—É—Ñ–µ—Ä–∞&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;circular_buffer.h&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;shift_circular&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;circular_add_1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;circular_add_0&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;circular_print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;circular_buffer.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;circular_buffer.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;long&lt;/span&gt;&lt;span class="p"&gt;))];&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;shift_circular&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt; &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;long&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0x80&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;|=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt; &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;long&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0x80&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;|=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt; &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;long&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0x80&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;|=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt; &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;long&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;circular_add_0&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;shift_circular&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; 
    &lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;=&lt;/span&gt; &lt;span class="mh"&gt;0xFE&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;circular_add_1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;shift_circular&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; 
    &lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;|=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;circular_print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%.2x&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;usage.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;circular_add_1&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="n"&gt;circular_add_0&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="n"&gt;circular_print&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ß—Ç–æ –±—É–¥–µ—Ç, –∫–æ–≥–¥–∞ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –æ–¥–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ–ª–µ–µ –æ–¥–Ω–æ–≥–æ –∫–æ–ª—å—Ü–µ–≤–æ–≥–æ –±—É—Ñ–µ—Ä–∞ ? –ü–æ—Å–∫–æ–ª—å–∫—É —Å–æ–±–∞–∫–æ–≤–æ–¥—ã &lt;em&gt;ANCI C&lt;/em&gt; –Ω–µ &lt;a href="http://stackoverflow.com/questions/4523497/typedef-fixed-length-array#answer-4523537" rel="nofollow"&gt;—Ä–µ–∫–æ–º–µ–Ω–¥—É—é—Ç&lt;/a&gt; –∑–∞–¥–∞–≤–∞—Ç—å –Ω–æ–≤—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö –∫–∞–∫ –º–∞—Å—Å–∏–≤ —Å –∑–∞–¥–∞–Ω–Ω–æ–π –≤–µ–ª–∏—á–∏–Ω–æ–π, –¥–∞–Ω–Ω—ã–µ –±—É—Ñ–µ—Ä–∞ –æ–±—ë—Ä–Ω—É—Ç—ã –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä—É &lt;code&gt;CircularBuffer&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;circular_buffer.h&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;typedef&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;CircularBuffer&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;long&lt;/span&gt;&lt;span class="p"&gt;))];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="n"&gt;CircularBuffer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;shift_circular&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;circular_add_1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CircularBuffer&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;circular_add_0&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CircularBuffer&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;circular_print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CircularBuffer&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;circular_buffer.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;circular_buffer.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;shift_circular&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt; &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;long&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0x80&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;|=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt; &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;long&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0x80&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;|=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt; &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;long&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0x80&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;|=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt; &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;long&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;circular_add_0&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CircularBuffer&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;circular_buffer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;shift_circular&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;circular_buffer&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
    &lt;span class="n"&gt;circular_buffer&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;=&lt;/span&gt; &lt;span class="mh"&gt;0xFE&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;circular_add_1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CircularBuffer&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;circular_buffer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;shift_circular&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;circular_buffer&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
    &lt;span class="n"&gt;circular_buffer&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;|=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;circular_print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CircularBuffer&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;circular_buffer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;circular_buffer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%.2x&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;circular_buffer&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;usage.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;CircularBuffer&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="cm"&gt;/* a.bytes[0] = 42; –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä –ø—Ä–æ–≥–ª–æ—Ç–∏—Ç, –Ω–µ –ø–æ —Ñ–µ–Ω—à—É—é :( */&lt;/span&gt;
&lt;span class="n"&gt;circular_add_1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;circular_add_0&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;circular_print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ &lt;code&gt;circular_buffer&lt;/code&gt; –æ–ø–∏—Å–∞–Ω–∞ –≤ &lt;em&gt;circular_buffer.h&lt;/em&gt;, –∞ –∑–Ω–∞—á–∏—Ç –≤–∏–¥–Ω–∞ –≤–µ–∑–¥–µ –≥–¥–µ –ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è —ç—Ç–æ—Ç –∑–∞–≥–æ–ª–æ–≤–æ—á–Ω—ã–π —Ñ–∞–π–ª. –ü–æ–±–æ—Ä–æ—Ç—å —ç—Ç–æ –º–æ–∂–Ω–æ —Å –ø–æ–º–æ—â—å—é —Ç.–Ω. &lt;strong&gt;–Ω–µ–∑–∞–≤–µ—Ä—à—ë–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ –¥–∞–Ω–Ω—ã—Ö&lt;/strong&gt; –∏ —Ñ–∞–±—Ä–∏–∫–∏:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;circular_buffer.h&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;typedef&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;CircularBuffer&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;CircularBufferPtr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;shift_circular&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="n"&gt;CircularBufferPtr&lt;/span&gt; &lt;span class="nf"&gt;circular_create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;circular_add_1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CircularBufferPtr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;circular_add_0&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CircularBufferPtr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;circular_print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CircularBufferPtr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;circular_buffer.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;circular_buffer.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;CircularBuffer&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;long&lt;/span&gt;&lt;span class="p"&gt;))];&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;shift_circular&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt; &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;long&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0x80&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;|=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt; &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;long&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0x80&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;|=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt; &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;long&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0x80&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;|=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt; &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;long&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;CircularBufferPtr&lt;/span&gt; &lt;span class="nf"&gt;circular_create&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;CircularBufferPtr&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;malloc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;sizeof&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;circular_add_0&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CircularBufferPtr&lt;/span&gt; &lt;span class="n"&gt;circular_buffer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;shift_circular&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;circular_buffer&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;circular_buffer&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;=&lt;/span&gt; &lt;span class="mh"&gt;0xFE&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;circular_add_1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CircularBufferPtr&lt;/span&gt; &lt;span class="n"&gt;circular_buffer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;shift_circular&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;circular_buffer&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;circular_buffer&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;|=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;circular_print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CircularBufferPtr&lt;/span&gt; &lt;span class="n"&gt;circular_buffer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;circular_buffer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%.2x&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;circular_buffer&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;usage.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;CircularBufferPtr&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;circular_create&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;circular_create&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="cm"&gt;/* a-&amp;gt;bytes[0] = 42; –æ—à–∏–±–∫–∞: –¥–æ—Å—Ç—É–ø –ø–æ —É–∫–∞–∑–∞—Ç–µ–ª—é –Ω–∞ –Ω–µ–ø–æ–ª–Ω—ã–π —Ç–∏–ø */&lt;/span&gt;
&lt;span class="n"&gt;circular_add_1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;circular_print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;free&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;free&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ù–µ–∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö –∏–Ω–æ–≥–¥–∞ –Ω–∞–∑—ã–≤–∞—é—Ç &lt;em&gt;–Ω–µ–ø–æ–ª–Ω—ã–º&lt;/em&gt;, –∞ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª–µ –Ω–∞ –∞–Ω–≥–ª. &lt;em&gt;incomplete type&lt;/em&gt;.&lt;/p&gt;</content><category term="–ü–∞—Ç—Ç–µ—Ä–Ω"></category><category term="–ò–¥–∏–æ–º–∞"></category></entry><entry><title>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –º–∞–Ω—á–µ—Å—Ç–µ—Ä—Å–∫–æ–≥–æ –∫–æ–¥–∞ –Ω–∞ –ø—Ä–∏–º–µ—Ä–µ</title><link href="https://mazko.github.io/blog/posts/2012/10/07/ispolzovanie-manchesterskogo-koda-na-primere/" rel="alternate"></link><published>2012-10-07T00:00:00+03:00</published><updated>2012-10-07T00:00:00+03:00</updated><author><name>Oleg Mazko</name></author><id>tag:mazko.github.io,2012-10-07:/blog/posts/2012/10/07/ispolzovanie-manchesterskogo-koda-na-primere/</id><summary type="html">&lt;p&gt;–í &lt;a href="https://mazko.github.io/blog/posts/2012/10/07/manchesterskii-kod-dlia-chainikov/"&gt;–ø—Ä–µ–¥—ã–¥—É—â–µ–º&lt;/a&gt; –ø–æ—Å—Ç–µ –±—ã–ª–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–∞ –ø–æ—á–≤–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å &lt;em&gt;–ú–∞–Ω—á–µ—Å—Ç–µ—Ä—Å–∫–∏–º –∫–æ–¥–æ–º&lt;/em&gt;. –¢–µ–ø–µ—Ä—å —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º —Ä–µ–∞–ª—å–Ω—ã–π –ø—Ä–∏–º–µ—Ä —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤ &lt;strong&gt;Microchip&lt;/strong&gt; - –æ–¥–∏–Ω –±—É–¥–µ—Ç –∫–æ–¥–∏—Ä–æ–≤–∞—Ç—å –∏ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ, –¥—Ä—É–≥–æ–π –ø—Ä–∏–Ω–∏–º–∞—Ç—å, –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞—Ç—å –∏ –≤—ã–≤–æ–¥–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ &lt;strong&gt;UART&lt;/strong&gt; - —Ç–µ—Ä–º–∏–Ω–∞–ª. –ü–æ—Å–∫–æ–ª—å–∫—É —ç—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–∏–º–µ—Ä, —Ç–æ —Å –≤—ã–±–æ—Ä–æ–º &lt;strong&gt;C&lt;/strong&gt; - –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä–∞ –Ω–∏—á–µ–≥–æ –≤—ã–¥—É–º—ã–≤–∞—Ç—å –Ω–µ –±—É–¥–µ–º –∏ –≤–æ–∑—å–º—ë–º —Ç–æ ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;–í &lt;a href="https://mazko.github.io/blog/posts/2012/10/07/manchesterskii-kod-dlia-chainikov/"&gt;–ø—Ä–µ–¥—ã–¥—É—â–µ–º&lt;/a&gt; –ø–æ—Å—Ç–µ –±—ã–ª–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–∞ –ø–æ—á–≤–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å &lt;em&gt;–ú–∞–Ω—á–µ—Å—Ç–µ—Ä—Å–∫–∏–º –∫–æ–¥–æ–º&lt;/em&gt;. –¢–µ–ø–µ—Ä—å —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º —Ä–µ–∞–ª—å–Ω—ã–π –ø—Ä–∏–º–µ—Ä —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤ &lt;strong&gt;Microchip&lt;/strong&gt; - –æ–¥–∏–Ω –±—É–¥–µ—Ç –∫–æ–¥–∏—Ä–æ–≤–∞—Ç—å –∏ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ, –¥—Ä—É–≥–æ–π –ø—Ä–∏–Ω–∏–º–∞—Ç—å, –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞—Ç—å –∏ –≤—ã–≤–æ–¥–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ &lt;strong&gt;UART&lt;/strong&gt; - —Ç–µ—Ä–º–∏–Ω–∞–ª. –ü–æ—Å–∫–æ–ª—å–∫—É —ç—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–∏–º–µ—Ä, —Ç–æ —Å –≤—ã–±–æ—Ä–æ–º &lt;strong&gt;C&lt;/strong&gt; - –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä–∞ –Ω–∏—á–µ–≥–æ –≤—ã–¥—É–º—ã–≤–∞—Ç—å –Ω–µ –±—É–¥–µ–º –∏ –≤–æ–∑—å–º—ë–º —Ç–æ, —á—Ç–æ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–∞—ë—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å - –ø—Ä–æ–±–Ω—É—é –≤–µ—Ä—Å–∏—é &lt;strong&gt;mplabc18&lt;/strong&gt; (&lt;em&gt;mplabc18_v3.40_windows_eval.exe&lt;/em&gt;) –Ω–∞ 60 –¥–Ω–µ–π, —Å–∫–∞—á–∞—Ç—å –º–æ–∂–Ω–æ —Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ —Å–∞–π—Ç–∞ —Å —Ä–æ–¥–Ω–æ–π —Å—Ä–µ–¥–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ &lt;strong&gt;MPLAB_IDE&lt;/strong&gt; (&lt;em&gt;v8_70&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;–ö–∞–∫ –∏ –≤ –ø—Ä–æ—à–ª—ã–π —Ä–∞–∑ –Ω–∞—á–Ω—ë–º —Å –ø—Ä–æ—Å—Ç–æ–≥–æ - —Ä–µ–∞–ª–∏–∑—É–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤—ã–≤–∞–µ—Ç –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö –≤ &lt;em&gt;–ú–∞–Ω—á–µ—Å—Ç–µ—Ä—Å–∫–∏–π –ö–æ–¥&lt;/em&gt; –∏ –ø–µ—Ä–µ–¥–∞—ë—Ç –∏—Ö. –ü—Ä–µ–∂–¥–µ –≤—Å–µ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç –≤ &lt;strong&gt;MPLAB&lt;/strong&gt;, –º–∞—Å—Ç–µ—Ä –ø–æ–ø—Ä–æ—Å–∏—Ç —É–∫–∞–∑–∞—Ç—å –º–æ–¥–µ–ª—å –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ - —Ç—É—Ç –∫–∞–∫–∏—Ö-–ª–∏–±–æ –æ—Å–æ–±—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –Ω–µ—Ç, –ø–æ—ç—Ç–æ–º—É –º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å —Å–∞–º—ã–π –ø—Ä–æ—Å—Ç–æ–π, –Ω–∞–ø—Ä–∏–º–µ—Ä &lt;strong&gt;PIC18F1230&lt;/strong&gt;. –í —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –¥–æ–ª–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å—Å—è —á—Ç–æ-—Ç–æ –≤—Ä–æ–¥–µ —ç—Ç–æ–≥–æ:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;p18cxxx.h&amp;gt; &lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;timers.h&amp;gt; &lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;../../../../src/tx/Man_Encode.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt; 
    &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;short&lt;/span&gt; &lt;span class="kt"&gt;long&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;PORTBbits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RB0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="n"&gt;TRISB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="n"&gt;OpenTimer0&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TIMER_INT_ON&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;T0_8BIT&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;T0_SOURCE_INT&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;T0_PS_1_8&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(;;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

        &lt;span class="cm"&gt;/* &amp;#39;n&amp;#39; =&amp;gt; 01101110b, MSB = 0 see tests =&amp;gt; Man_Decode.cpp */&lt;/span&gt;

        &lt;span class="n"&gt;On_Man_Encode_One&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;  &lt;span class="c1"&gt;// Clay balance (1 - 1 = 0) &lt;/span&gt;
        &lt;span class="n"&gt;On_Man_Encode_Zero&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// Sync balance (2 - 2 = 0) &lt;/span&gt;
        &lt;span class="n"&gt;On_Man_Encode_Zero&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;  
        &lt;span class="n"&gt;On_Man_Encode_One&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;  &lt;span class="c1"&gt;// Sync &lt;/span&gt;
        &lt;span class="n"&gt;On_Man_Encode_One&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; 
        &lt;span class="n"&gt;On_Man_Encode_Zero&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// Clay&lt;/span&gt;

        &lt;span class="n"&gt;Man_Encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;n&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
        &lt;span class="n"&gt;Man_Encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;o&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
        &lt;span class="n"&gt;Man_Encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;n&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
        &lt;span class="n"&gt;Man_Encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;g&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
        &lt;span class="n"&gt;Man_Encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
        &lt;span class="n"&gt;Man_Encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;e&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
        &lt;span class="n"&gt;Man_Encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;e&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
        &lt;span class="n"&gt;Man_Encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;d&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
        &lt;span class="n"&gt;Man_Encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;y&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
        &lt;span class="n"&gt;Man_Encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
        &lt;span class="n"&gt;Man_Encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
        &lt;span class="n"&gt;Man_Encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;u&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
        &lt;span class="n"&gt;Man_Encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;\r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
        &lt;span class="n"&gt;Man_Encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="n"&gt;On_Man_Encode_Zero&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="cm"&gt;/* Tx off */&lt;/span&gt;

        &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;150000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
    &lt;span class="p"&gt;}&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;On_Man_Encode_One&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt; 
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;INTCONbits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TMR0IF&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
    &lt;span class="n"&gt;TMR0L&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;104&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// 4Mhz/4/8/1200bp/s = 104 &lt;/span&gt;
    &lt;span class="n"&gt;INTCONbits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TMR0IF&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="n"&gt;PORTBbits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RB0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;On_Man_Encode_Zero&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt; 
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;INTCONbits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TMR0IF&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
    &lt;span class="n"&gt;TMR0L&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;104&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// 4Mhz/4/8/1200bp/s = 104 &lt;/span&gt;
    &lt;span class="n"&gt;INTCONbits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TMR0IF&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="n"&gt;PORTBbits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RB0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="MPLab –°–∫—Ä–∏–Ω—à–æ—Ç" src="https://mazko.github.io/blog/posts/2012/10/07/ispolzovanie-manchesterskogo-koda-na-primere/mplab_man_tx.png" style="width:100%; border:1px solid grey;"&gt;&lt;/p&gt;
&lt;p&gt;–†–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —Å–±–æ—Ä–∫–∏ —è–≤–ª—è–µ—Ç—Å—è —Ñ–∞–π–ª —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º &lt;strong&gt;.hex&lt;/strong&gt;, –≤ –Ω–∞—Ä–æ–¥–µ –ø—Ä–æ—Å—Ç–æ &lt;em&gt;—Ö–µ–∫—Å&lt;/em&gt; - –ø—Ä–æ—à–∏–≤–∫–∞, –∫–æ—Ç–æ—Ä—É—é –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–ø–∏—Å–∞—Ç—å –≤ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä —Å –ø–æ–º–æ—â—å—é —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è (–ø—Ä–æ–≥—Ä–∞–º–º–∞—Ç–æ—Ä–∞). –ü–æ—Å–∫–æ–ª—å–∫—É –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ, –Ω–∞–≤–µ—Ä–Ω–æ, —É –í–∞—Å –Ω–µ—Ç, –º–æ–∂–Ω–æ –∑–∞–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω—É—é —Å—Ä–µ–¥—É, –∫–æ—Ç–æ—Ä–∞—è —É–º–µ–µ—Ç —ç–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –ø–æ–≤–µ–¥–µ–Ω–∏–µ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã—Ö —Å—Ö–µ–º - &lt;strong&gt;Proteus VSM&lt;/strong&gt; (v 7.9sp1). –ö–∞–∫ –≤–∏–¥–Ω–æ –∏–∑ —Ä–∏—Å—É–Ω–∫–∞ –Ω–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–º –æ—Å—Ü–∏–ª–ª–æ–≥—Ä–∞—Ñ–µ –≤—Ä–µ–º—è –ª–æ–≥–∏—á–µ—Å–∫–æ–π 1 —á—É—Ç—å –±–æ–ª—å—à–µ 4 –¥–µ–ª–µ–Ω–∏–π –ø—Ä–∏ —à–∞–≥–µ 0.2 –º—Å. –ü—Ä–∏ —Å–∫–æ—Ä–æ—Å—Ç–∏ 1200 –±–∏—Ç/—Å 1000 –º—Å / 1200 = 0,83 –º—Å —ç—Ç–æ –ø–æ—Ö–æ–∂–µ –Ω–∞ –ø—Ä–∞–≤–¥—É.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Proteus Sim –°–∫—Ä–∏–Ω—à–æ—Ç" src="https://mazko.github.io/blog/posts/2012/10/07/ispolzovanie-manchesterskogo-koda-na-primere/proteus_tx_simulation.png" style="width:100%; border:1px solid grey;"&gt;&lt;/p&gt;
&lt;p&gt;–¢–µ–ø–µ—Ä—å —Ä–µ–∞–ª–∏–∑—É–µ–º –ø—Ä–∏—ë–º–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ –≤—Ö–æ–¥–µ (–≤—ã–≤–æ–¥ &lt;strong&gt;RB0&lt;/strong&gt;), –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞—Ç—å —Å–∏–≥–Ω–∞–ª –∏–∑ &lt;em&gt;–ú–∞–Ω—á–µ—Å—Ç–µ—Ä—Å–∫–æ–≥–æ –ö–æ–¥–∞&lt;/em&gt; –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∏ –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –ø–µ—Ä–µ–¥–∞—á–∞ –ø–æ–ª–µ–∑–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –°–∞–º—ã–π –ø—Ä–æ—Å—Ç–æ–π —Å–ø–æ—Å–æ–± –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ –≤ &lt;strong&gt;Proteus VSM&lt;/strong&gt; - –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π &lt;strong&gt;UART&lt;/strong&gt; - —Ç–µ—Ä–º–∏–Ω–∞–ª.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;p18cxxx.h&amp;gt; &lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;timers.h&amp;gt; &lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;usart.h&amp;gt; &lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;  &lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;../../../../src/rx/Man_Decode.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;long&lt;/span&gt;&lt;span class="p"&gt;))];&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;printrxbuf&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
        &lt;span class="n"&gt;_usart_putc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="nf"&gt;calcperiods&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TMR0L&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="n"&gt;TMR0L&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="cm"&gt;/* 8Mhz/4/32/1200(bp/s) = 52 */&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;52&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;52&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt; 
    &lt;span class="n"&gt;OpenTimer0&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TIMER_INT_OFF&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;T0_8BIT&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;T0_SOURCE_INT&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;T0_PS_1_32&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
    &lt;span class="n"&gt;OpenUSART&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;USART_TX_INT_OFF&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;USART_RX_INT_OFF&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; 
        &lt;span class="n"&gt;USART_ASYNCH_MODE&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;USART_EIGHT_BIT&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; 
        &lt;span class="n"&gt;USART_CONT_RX&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;USART_BRGH_HIGH&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 38400 b/s&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(;;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
        &lt;span class="n"&gt;memset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; 
        &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(;;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
            &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;ds_B&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;\r&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
                &lt;span class="n"&gt;printrxbuf&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; 
                &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
            &lt;span class="p"&gt;}&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;PORTBbits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RB0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;ds_B&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;continue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
                &lt;span class="n"&gt;ds_B&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
                &lt;span class="n"&gt;Man_Decode_Stable_Zero&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;calcperiods&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt; 
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;ds_B&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;continue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
                &lt;span class="n"&gt;ds_B&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
                &lt;span class="n"&gt;Man_Decode_Stable_One&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;calcperiods&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt; 
            &lt;span class="p"&gt;}&lt;/span&gt; 
        &lt;span class="p"&gt;}&lt;/span&gt; 
    &lt;span class="p"&gt;}&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;shiftrxbuf&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt; &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;long&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0x80&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;|=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt; &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;long&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0x80&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;|=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt; &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;long&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0x80&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;|=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt; &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;long&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;On_Man_Decode_Add_0&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt; 
    &lt;span class="n"&gt;shiftrxbuf&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; 
    &lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;=&lt;/span&gt; &lt;span class="mh"&gt;0xFE&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;On_Man_Decode_Add_1&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt; 
    &lt;span class="n"&gt;shiftrxbuf&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; 
    &lt;span class="n"&gt;rxbuf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;|=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="MPLab –°–∫—Ä–∏–Ω—à–æ—Ç" src="https://mazko.github.io/blog/posts/2012/10/07/ispolzovanie-manchesterskogo-koda-na-primere/mplab_man_rx.png" style="width:100%; border:1px solid grey;"&gt;&lt;/p&gt;
&lt;p&gt;–ö–∞–∫ –≤–∏–¥–Ω–æ –∏–∑ –∫–æ–¥–∞, –ø—Ä–∏–∑–Ω–∞–∫–æ–º –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö –≤ –¥–∞–Ω–Ω–æ–º –ø—Ä–∏–º–µ—Ä–µ —è–≤–ª—è–µ—Ç—Å—è –∫–æ–º–±–∏–Ω–∞—Ü–∏—è —Å–∏–º–≤–æ–ª–æ–≤ &lt;code&gt;'\r'&lt;/code&gt; –∏ &lt;code&gt;'\n'&lt;/code&gt;. –≠—Ç–æ –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–æ–µ —Ä–µ—à–µ–Ω–∏–µ, –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –≤ —Ä–µ–∞–ª—å–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö —ç—Ç–æ—Ç –º–µ—Ö–∞–Ω–∏–∑–º –Ω—É–∂–Ω–æ –¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å - –∏–Ω–∞—á–µ –∏–Ω–æ–≥–¥–∞ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∞—Ç—å –ª–æ–∂–Ω—ã–π —Å–∏–≥–Ω–∞–ª –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö. –¢–∞–∫–∂–µ —Å—Ç–æ–∏—Ç –æ–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –±—É—Ñ–µ—Ä &lt;code&gt;rxbuf&lt;/code&gt;, –≤ –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ &lt;code&gt;shiftrxbuf()&lt;/code&gt;. –ï—Ç–æ—Ç –º–µ—Ç–æ–¥ –¥–µ–ª–∞–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏—é –ø–æ–±–∏—Ç–æ–≤–æ–≥–æ —Å–¥–≤–∏–≥–∞ –¥–ª—è –≤—Å–µ–≥–æ –±—É—Ñ–µ—Ä–∞, –∫–∞–∫ –µ—Å–ª–∏ –±—ã —ç—Ç–æ –±—ã–ª –ø—Ä–æ—Å—Ç–æ–π (–ø—Ä–∏–º–∏—Ç–∏–≤–Ω—ã–π) —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö —Ç–∏–ø–∞ &lt;code&gt;char&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt; –∏ —Ç.–¥.  –ï—Å–ª–∏ –≤—Å—ë —ç—Ç–æ —Ç–µ–ø–µ—Ä—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤ &lt;strong&gt;Proteus VSM&lt;/strong&gt;, —Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±—É–¥–µ—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ —Ç–∞–∫–∏–º:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Proteus Sim –°–∫—Ä–∏–Ω—à–æ—Ç" src="https://mazko.github.io/blog/posts/2012/10/07/ispolzovanie-manchesterskogo-koda-na-primere/proteus_rx_simulation.png" style="width:100%; border:1px solid grey;"&gt;&lt;/p&gt;
&lt;p&gt;–í—Ä–æ–¥–µ –≤—Å—ë, –∏—Å—Ö–æ–¥–Ω–∏–∫–∏ –Ω–∞ &lt;a href="https://github.com/mazko/Manchester-Code" rel="nofollow"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;</content><category term="–ú–∞–Ω—á–µ—Å—Ç–µ—Ä—Å–∫–∏–π –∫–æ–¥"></category><category term="UART"></category></entry><entry><title>–ú–∞–Ω—á–µ—Å—Ç–µ—Ä—Å–∫–∏–π –∫–æ–¥ –¥–ª—è —á–∞–π–Ω–∏–∫–æ–≤</title><link href="https://mazko.github.io/blog/posts/2012/10/07/manchesterskii-kod-dlia-chainikov/" rel="alternate"></link><published>2012-10-07T00:00:00+03:00</published><updated>2012-10-07T00:00:00+03:00</updated><author><name>Oleg Mazko</name></author><id>tag:mazko.github.io,2012-10-07:/blog/posts/2012/10/07/manchesterskii-kod-dlia-chainikov/</id><summary type="html">&lt;p&gt;&lt;em&gt;–ú–∞–Ω—á–µ—Å—Ç–µ—Ä—Å–∫–∏–π –ö–æ–¥&lt;/em&gt; - —ç—Ç–æ —Å–∞–º–æ—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É—é—â–∏–π—Å—è –¥–≤–æ–∏—á–Ω—ã–π –∫–æ–¥ –±–µ–∑ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π —Å–æ—Å—Ç–∞–≤–ª—è—é—â–µ–π, –≤ –∫–æ—Ç–æ—Ä–æ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º–æ–≥–æ –±–∏—Ç–∞ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º —Å–º–µ–Ω—ã –ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ —É—Ä–æ–≤–Ω—è –≤ —Å–µ—Ä–µ–¥–∏–Ω–µ –æ–±—É—Å–ª–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –∑–∞—Ä–∞–Ω–µ–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞. –ü–æ—Å–∫–æ–ª—å–∫—É –ª–æ–≥–∏—á–µ—Å–∫–∏—Ö —É—Ä–æ–≤–Ω–µ–π —É —Å–∞–º–æ–π –º–∞–ª–µ–Ω—å–∫–æ–π –µ–¥–∏–Ω–∏—Ü—ã –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ (–±–∏—Ç) –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∏–∑–≤–µ—Å—Ç–Ω–æ –≤—Å–µ–≥–æ –¥–≤–∞ (1 –∏ 0),  –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Ç—É—Ç –Ω–µ–º–Ω–æ–≥–æ: –ª–∏–±–æ —Å–º–µ–Ω–∞ 1 ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;–ú–∞–Ω—á–µ—Å—Ç–µ—Ä—Å–∫–∏–π –ö–æ–¥&lt;/em&gt; - —ç—Ç–æ —Å–∞–º–æ—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É—é—â–∏–π—Å—è –¥–≤–æ–∏—á–Ω—ã–π –∫–æ–¥ –±–µ–∑ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π —Å–æ—Å—Ç–∞–≤–ª—è—é—â–µ–π, –≤ –∫–æ—Ç–æ—Ä–æ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º–æ–≥–æ –±–∏—Ç–∞ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º —Å–º–µ–Ω—ã –ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ —É—Ä–æ–≤–Ω—è –≤ —Å–µ—Ä–µ–¥–∏–Ω–µ –æ–±—É—Å–ª–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –∑–∞—Ä–∞–Ω–µ–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞. –ü–æ—Å–∫–æ–ª—å–∫—É –ª–æ–≥–∏—á–µ—Å–∫–∏—Ö —É—Ä–æ–≤–Ω–µ–π —É —Å–∞–º–æ–π –º–∞–ª–µ–Ω—å–∫–æ–π –µ–¥–∏–Ω–∏—Ü—ã –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ (–±–∏—Ç) –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∏–∑–≤–µ—Å—Ç–Ω–æ –≤—Å–µ–≥–æ –¥–≤–∞ (1 –∏ 0),  –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Ç—É—Ç –Ω–µ–º–Ω–æ–≥–æ: –ª–∏–±–æ —Å–º–µ–Ω–∞ 1 =&amp;gt; 0 –ª–∏–±–æ 0 =&amp;gt; 1. –°–æ–≥–ª–∞—Å–Ω–æ –æ–±—â–µ–ø—Ä–∏–Ω—è—Ç—ã–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º –¥–ª—è &lt;em&gt;–ú–∞–Ω—á–µ—Å—Ç–µ—Ä—Å–∫–æ–≥–æ –∫–æ–¥–∞&lt;/em&gt; –ø–µ—Ä–µ—Ö–æ–¥ –æ—Ç –Ω—É–ª—è –∫ –µ–¥–∏–Ω–∏—Ü–µ —Å—á–∏—Ç–∞–µ—Ç—Å—è 1, –∞ –µ—Å–ª–∏ –Ω–∞–æ–±–æ—Ä–æ—Ç, —Ç–æ 0. –ù–∞ —Å–∞–º–æ–º –¥–µ–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ - —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ —Ñ–æ—Ä–º–∞–ª—å–Ω–æ—Å—Ç—å - –≤–æ–ø—Ä–æ—Å –≤ —Ç–æ–º, —Å –∫–∞–∫–æ–π —Å—Ç–æ—Ä–æ–Ω—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å ;-) –ì–ª–∞–≤–Ω–æ–µ, —á—Ç–æ–±—ã –∏ –ø—Ä–∏—ë–º–Ω–∏–∫ –∏ –ø–µ—Ä–µ–¥–∞—Ç—á–∏–∫ —Å–º–æ—Ç—Ä–µ–ª–∏ –Ω–∞ –∂–∏–∑–Ω—å –æ–¥–∏–Ω–∞–∫–æ–≤–æ.&lt;/p&gt;
&lt;p&gt;&lt;img alt="–ö–æ–¥ –ú–∞–Ω—á–µ—Å—Ç–µ—Ä" src="https://mazko.github.io/blog/posts/2012/10/07/manchesterskii-kod-dlia-chainikov/man_diagram.png" style="width:100%; border:1px solid #ddd;"&gt;&lt;/p&gt;
&lt;p&gt;–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –∏ –Ω–∞–∂–º–∏—Ç–µ "&lt;strong&gt;Encode Manchester!&lt;/strong&gt;":&lt;/p&gt;
&lt;script type="text/javascript" src="https://mazko.github.io/blog/posts/2012/10/07/manchesterskii-kod-dlia-chainikov/manchester.js"&gt; &lt;/script&gt;

&lt;p&gt;
&lt;input maxlength="25" size="10" id="manchester_query" value="0x623" style="text-align: right; padding:.3em;" type="text"/&gt;
&lt;button type="button" style="padding:.2em;" onclick="manchester_encode_and_print();"&gt;&lt;noscript&gt;&lt;span style="color:red;"&gt;–í–∫–ª—é—á–∏—Ç–µ JavaScript ! &lt;/span&gt;&lt;/noscript&gt;Encode Manchester!&lt;/button&gt;
&lt;/p&gt;

&lt;p id="manchester_result"&gt;
&lt;/p&gt;

&lt;p&gt;–¢–µ–ø–µ—Ä—å –¥–∞–≤–∞–π—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–∏–º –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É –∏ –ø–æ–ø—Ä–æ–±—É–µ–º –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏ –ø–µ—Ä–µ—á–∏—Å–ª–∏—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ &lt;em&gt;–ú–∞–Ω—á–µ—Å—Ç–µ—Ä—Å–∫–∏–π –ö–æ–¥&lt;/em&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;P–∞–∑–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è –≤–¥–≤–æ–µ - —ç—Ç–æ –Ω–µ–≥–∞—Ç–∏–≤–Ω–æ —Å–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç–∏ –ø–µ—Ä–µ–¥–∞—á–∏&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;K–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –Ω—É–ª–µ–π –≤—Å–µ–≥–¥–∞ —Ä–∞–≤–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –µ–¥–∏–Ω–∏—Ü, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ —É —Ç–∞–∫–æ–≥–æ —Å–∏–≥–Ω–∞–ª–∞ –Ω–µ –±—É–¥–µ—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π —Å–æ—Å—Ç–∞–≤–ª—è—é—â–µ–π - —ç—Ç–æ –∫—Ä–∞–π–Ω–µ –≤–∞–∂–Ω–æ –¥–ª—è —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏—Ö —Ü–µ–ø–µ–π –∏ —Ä–∞–¥–∏–æ–≤–æ–ª–Ω&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;–ö–æ–º–±–∏–Ω–∞—Ü–∏—è –ª–æ–≥–∏—á–µ—Å–∫–∏—Ö —É—Ä–æ–≤–Ω–µ–π 11 –æ–¥–Ω–æ–∑–Ω–∞—á–Ω–æ –≥–æ–≤–æ—Ä–∏—Ç –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º –ø—Ä–∏–Ω—è—Ç–æ–º 0, –∞ –∫–æ–º–±–∏–Ω–∞—Ü–∏—è 00, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ, –≥–æ–≤–æ—Ä–∏—Ç –æ 1. –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –ø–æ—Å–ª–µ –æ–¥–Ω–æ–π –∏–∑ –Ω–∏—Ö –ø—Ä–∏—ë–º–Ω–∏–∫ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç—Å—è&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;–ù–µ –º–æ–∂–µ—Ç –∏–¥—Ç–∏ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –±–æ–ª–µ–µ –¥–≤—É—Ö –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –ª–æ–≥–∏—á–µ—Å–∫–∏—Ö —É—Ä–æ–≤–Ω–µ–π, —Ç.–µ. –∫–æ–º–±–∏–Ω–∞—Ü–∏—è —Ç–∏–ø–∞ 111 –∏–ª–∏ 000 –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;–í –Ω–∞—á–∞–ª–µ –¥–∞–Ω–Ω—ã—Ö –∏ –≤ –∫–æ–Ω—Ü–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–≤—É—Ö –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –ª–æ–≥–∏—á–µ—Å–∫–∏—Ö —É—Ä–æ–≤–Ω–µ–π - —Ç–æ–ª—å–∫–æ 10 –∏–ª–∏ 01&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;–°–Ω–∞—á–∞–ª–∞ –ø–∏—à–µ–º —Ç–µ—Å—Ç&lt;/h3&gt;
&lt;p&gt;–û –ø–æ–ª—å–∑–µ —Ç–µ—Å—Ç–æ–≤ –º–æ–∂–Ω–æ –ø–æ—á–∏—Ç–∞—Ç—å &lt;a href="https://ru.wikipedia.org/wiki/%D0%9C%D0%BE%D0%B4%D1%83%D0%BB%D1%8C%D0%BD%D0%BE%D0%B5_%D1%82%D0%B5%D1%81%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5" rel="nofollow"&gt;—Ç—É—Ç&lt;/a&gt;. –í –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —Ä–µ—à–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π –∑–∞–¥–∞—á–∏ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ç–µ—Ö–Ω–∏–∫–∞ &lt;strong&gt;Mock&lt;/strong&gt;-–æ–±—ä–µ–∫—Ç–æ–≤, –ø–æ—ç—Ç–æ–º—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–≤—è–∑–∫–∞ &lt;strong&gt;gtest&lt;/strong&gt; (&lt;a href="http://code.google.com/p/googletest-translations/w/list" rel="nofollow"&gt;Google Test&lt;/a&gt;) + &lt;strong&gt;gmock&lt;/strong&gt; (&lt;a href="http://code.google.com/p/googletest-translations/w/list" rel="nofollow"&gt;Google Mocking Framework&lt;/a&gt;). –í—Å—ë —ç—Ç–æ –¥–æ–±—Ä–æ –ø–æ—Å—Ç–∞–≤–ª—è—é—Ç—Å—è –≤ –∏—Å—Ö–æ–¥–Ω–∏–∫–∞—Ö, –ø–æ—ç—Ç–æ–º—É –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ –∫ —Å–∏—Å—Ç–µ–º–µ - —Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π &lt;strong&gt;C&lt;/strong&gt; / &lt;strong&gt;C++&lt;/strong&gt; –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä, –Ω–∞–ø—Ä–∏–º–µ—Ä &lt;strong&gt;gcc g++&lt;/strong&gt; –¥–ª—è &lt;strong&gt;Linux&lt;/strong&gt; –∏–ª–∏ &lt;strong&gt;Visual Studio C++&lt;/strong&gt; –¥–ª—è &lt;strong&gt;Windows&lt;/strong&gt;. –¢–∞–∫ –≤—ã–≥–ª—è–¥–∏—Ç –ø—Ä–æ—Å—Ç–æ–µ –∫–æ–Ω—Å–æ–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç —Å–æ–±–∏—Ä–∞—Ç—å—Å—è –≤–º–µ—Å—Ç–µ —Å —Ç–µ—Å—Ç–∞–º–∏ –∏ –∑–∞–ø—É—Å–∫–∞—Ç—å –∏—Ö:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;/manchester/tests/gtest/main.cpp&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;gtest/gtest.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;testing&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;InitGoogleTest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;RUN_ALL_TESTS&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–¢–µ–ø–µ—Ä—å —Å–∞–º–∏ —Ç–µ—Å—Ç—ã. –ë–æ–ª–µ–µ –ø—Ä–æ—Å—Ç–æ–π –∑–∞–¥–∞—á–µ–π —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ &lt;em&gt;–ú–∞–Ω—á–µ—Å—Ç–µ—Ä—Å–∫–∏–π –ö–æ–¥&lt;/em&gt; (&lt;strong&gt;encode&lt;/strong&gt;), –ø–æ—ç—Ç–æ–º—É —Å –Ω–µ—ë, –ø–æ–∂–∞–ª—É–π, –∏ –Ω–∞—á–Ω—ë–º:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;/manchester/tests/gtest/src/manchester/Man_Encode.cpp&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;gtest/gtest.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;gmock/gmock.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;extern&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;C&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;../../../../manchester/src/tx/Man_Encode.c&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;IManEncode&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;virtual&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;Man_Encode_One&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;virtual&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Man_Encode_Zero&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="cm"&gt;/* Mock implementation */&lt;/span&gt;

&lt;span class="n"&gt;ACTION_P2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Act_Inc_1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;ON_CALL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Man_Encode_One&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WillByDefault&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Act_Inc_1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;testing&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;ByRef&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;ACTION_P2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Act_Inc_0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;ON_CALL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Man_Encode_Zero&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WillByDefault&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Act_Inc_0&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;testing&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;ByRef&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ManEncodeMock&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;IManEncode&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;MOCK_METHOD0&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Man_Encode_One&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
        &lt;span class="n"&gt;MOCK_METHOD0&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Man_Encode_Zero&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

        &lt;span class="n"&gt;ManEncodeMock&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;_total_1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_total_0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;ON_CALL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Man_Encode_One&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WillByDefault&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Act_Inc_1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;testing&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;ByRef&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_total_1&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
            &lt;span class="n"&gt;ON_CALL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Man_Encode_Zero&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WillByDefault&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Act_Inc_0&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;testing&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;ByRef&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_total_0&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;Expect_Total_1_And_0_Eq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;EXPECT_EQ&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_total_1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;EXPECT_EQ&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_total_0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;private&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;_total_1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_total_0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="cm"&gt;/* Fixture class for each test */&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ManEncodeTest_F&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;testing&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Test&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;ManEncodeMock&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;getMock&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;_ManEncodePtr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;protected&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;virtual&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;SetUp&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;_ManEncodePtr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;_ManEncode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;private&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;ManEncodeMock&lt;/span&gt; &lt;span class="n"&gt;_ManEncode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;ManEncodeMock&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;_ManEncodePtr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;    
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="n"&gt;ManEncodeMock&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;ManEncodeTest_F&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;_ManEncodePtr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cm"&gt;/* Man_Encode externs (events) */&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;On_Man_Encode_One&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;ManEncodeTest_F&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;getMock&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Man_Encode_One&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;On_Man_Encode_Zero&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;ManEncodeTest_F&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;getMock&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Man_Encode_Zero&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/* 0 =&amp;gt; 1010101010101010(manchester) */&lt;/span&gt;

&lt;span class="n"&gt;TEST_F&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ManEncodeTest_F&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Send_0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;testing&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;InSequence&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;EXPECT_CALL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;getMock&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;Man_Encode_One&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt; &lt;span class="c1"&gt;// MSB&lt;/span&gt;
        &lt;span class="n"&gt;EXPECT_CALL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;getMock&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;Man_Encode_Zero&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;Man_Encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;getMock&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Expect_Total_1_And_0_Eq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/* 255(dec) =&amp;gt; 11111111(bin) =&amp;gt; 0101010101010101(manchester) */&lt;/span&gt;

&lt;span class="n"&gt;TEST_F&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ManEncodeTest_F&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Send_255&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;testing&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;InSequence&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;EXPECT_CALL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;getMock&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;Man_Encode_Zero&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt; &lt;span class="c1"&gt;// MSB&lt;/span&gt;
        &lt;span class="n"&gt;EXPECT_CALL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;getMock&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;Man_Encode_One&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;Man_Encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;getMock&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Expect_Total_1_And_0_Eq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/* 170(dec) =&amp;gt; 10101010(bin) =&amp;gt; 0110011001100110(manchester) */&lt;/span&gt;

&lt;span class="n"&gt;TEST_F&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ManEncodeTest_F&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Send_170&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;testing&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;InSequence&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;EXPECT_CALL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;getMock&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;Man_Encode_Zero&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt; &lt;span class="c1"&gt;// MSB&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;EXPECT_CALL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;getMock&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;Man_Encode_One&lt;/span&gt;&lt;span class="p"&gt;()).&lt;/span&gt;&lt;span class="n"&gt;Times&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;EXPECT_CALL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;getMock&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;Man_Encode_Zero&lt;/span&gt;&lt;span class="p"&gt;()).&lt;/span&gt;&lt;span class="n"&gt;Times&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;EXPECT_CALL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;getMock&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;Man_Encode_One&lt;/span&gt;&lt;span class="p"&gt;()).&lt;/span&gt;&lt;span class="n"&gt;Times&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;EXPECT_CALL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;getMock&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;Man_Encode_Zero&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

    &lt;span class="n"&gt;Man_Encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;170&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;getMock&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Expect_Total_1_And_0_Eq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/* 85(dec) =&amp;gt; 01010101(bin) =&amp;gt; 1001100110011001(manchester) */&lt;/span&gt;

&lt;span class="n"&gt;TEST_F&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ManEncodeTest_F&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Send_85&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;testing&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;InSequence&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;EXPECT_CALL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;getMock&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;Man_Encode_One&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt; &lt;span class="c1"&gt;// MSB&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;EXPECT_CALL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;getMock&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;Man_Encode_Zero&lt;/span&gt;&lt;span class="p"&gt;()).&lt;/span&gt;&lt;span class="n"&gt;Times&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;EXPECT_CALL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;getMock&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;Man_Encode_One&lt;/span&gt;&lt;span class="p"&gt;()).&lt;/span&gt;&lt;span class="n"&gt;Times&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;EXPECT_CALL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;getMock&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;Man_Encode_Zero&lt;/span&gt;&lt;span class="p"&gt;()).&lt;/span&gt;&lt;span class="n"&gt;Times&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;EXPECT_CALL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;getMock&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;Man_Encode_One&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

    &lt;span class="n"&gt;Man_Encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;85&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;getMock&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Expect_Total_1_And_0_Eq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/* 84(dec) =&amp;gt; 01010100(bin) =&amp;gt; 1001100110011010(manchester) */&lt;/span&gt;

&lt;span class="n"&gt;TEST_F&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ManEncodeTest_F&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Send_84&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;testing&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;InSequence&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;EXPECT_CALL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;getMock&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;Man_Encode_One&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt; &lt;span class="c1"&gt;// MSB&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;EXPECT_CALL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;getMock&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;Man_Encode_Zero&lt;/span&gt;&lt;span class="p"&gt;()).&lt;/span&gt;&lt;span class="n"&gt;Times&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;EXPECT_CALL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;getMock&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;Man_Encode_One&lt;/span&gt;&lt;span class="p"&gt;()).&lt;/span&gt;&lt;span class="n"&gt;Times&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;EXPECT_CALL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;getMock&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;Man_Encode_Zero&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
    &lt;span class="n"&gt;EXPECT_CALL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;getMock&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;Man_Encode_One&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
    &lt;span class="n"&gt;EXPECT_CALL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;getMock&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;Man_Encode_Zero&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

    &lt;span class="n"&gt;Man_Encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;84&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;getMock&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Expect_Total_1_And_0_Eq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–í—Å–µ —Ç–µ—Å—Ç—ã –ø–æ–º–µ—â–µ–Ω—ã –≤ –º–∞–∫—Ä–æ—Å &lt;code&gt;TEST_F()&lt;/code&gt;. –í –Ω–∞—á–∞–ª–µ —Ç–µ—Å—Ç–∞ —Å –ø–æ–º–æ—â—å—é &lt;code&gt;EXPECT_CALL()&lt;/code&gt; –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–∂–∏–¥–∞–µ–º–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ. –í –ø—Ä–æ—Ü–µ—Å—Å–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è &lt;em&gt;0 =&amp;gt; 1010101010101010&lt;/em&gt; –∏ –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏, —á—Ç–æ —Å—Ç–∞—Ä—à–∏–π –±–∏—Ç –∏–¥—ë—Ç –ø–µ—Ä–≤—ã–º (&lt;em&gt;MSB&lt;/em&gt;), –æ–∂–∏–¥–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –≤—ã–∑–æ–≤ –º–µ—Ç–æ–¥–æ–≤ &lt;code&gt;On_Man_Encode_One()&lt;/code&gt;  –∏ &lt;code&gt;On_Man_Encode_Zero()&lt;/code&gt; –∏ —Ç–∞–∫ –≤–æ—Å–µ–º—å —Ä–∞–∑. –ü–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –æ–∂–∏–¥–∞–µ–º–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–æ, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–∑–≤–∞—Ç—å –ø—Ä–æ–≤–µ—Ä—è–µ–º—ã–π –º–µ—Ç–æ–¥ &lt;code&gt;Man_Encode()&lt;/code&gt;. –ï—Å–ª–∏ —Ä–µ–∞–ª—å–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –æ–∂–∏–¥–∞–µ–º–æ–≥–æ, –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤ –±—É–¥–µ—Ç —Å–æ–æ–±—â–µ–Ω–æ –æ–± –æ—à–∏–±–∫–µ. –í –∫–æ–Ω—Ü–µ –∫–∞–∂–¥–æ–≥–æ —Ç–µ—Å—Ç–∞ —Ç–∞–∫–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏—è, —á—Ç–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω—É–ª–µ–π —Ä–∞–≤–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –µ–¥–∏–Ω–∏—Ü.&lt;/p&gt;
&lt;p&gt;–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ &lt;em&gt;–ú–∞–Ω—á–µ—Å—Ç–µ—Ä—Å–∫–∏–π –ö–æ–¥&lt;/em&gt; –æ—á–µ–Ω—å –ª–µ–≥–∫–æ:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;/manchester/src/tx/Man_Encode.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;Man_Encode.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cm"&gt;/********************************************************************&lt;/span&gt;
&lt;span class="cm"&gt; *      Function Name:  Man_Encode                                  *&lt;/span&gt;
&lt;span class="cm"&gt; *      Return Value:   no                                          *&lt;/span&gt;
&lt;span class="cm"&gt; *      Parameters:     character to transmit                       *&lt;/span&gt;
&lt;span class="cm"&gt; *      Description:    Convert char to Manchester Code (2 chars)   *&lt;/span&gt;
&lt;span class="cm"&gt; *                      MSB is first to convert                     *&lt;/span&gt;
&lt;span class="cm"&gt; ********************************************************************/&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Man_Encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;register&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;character&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;register&lt;/span&gt; &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;bitcount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bitcount&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;character&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0x80&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;On_Man_Encode_Zero&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="n"&gt;On_Man_Encode_One&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;On_Man_Encode_One&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="n"&gt;On_Man_Encode_Zero&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;character&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–†–µ–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞—Ç–Ω–æ–π –∑–∞–¥–∞—á–∏ - –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ &lt;em&gt;–ú–∞–Ω—á–µ—Å—Ç–µ—Ä—Å–∫–æ–≥–æ –ö–æ–¥–∞&lt;/em&gt; –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–ª–æ–∂–Ω–µ–µ. –ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è —Å –ø—Ä–∏—ë–º–Ω–∏–∫–æ–º —Å–∏–∏–≥–Ω–∞–ª–∞. –í —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —Ç–µ—Å—Ç–æ–≤ –Ω–∞—Å –æ—Å–æ–±–æ –Ω–µ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –∫–∞–∫ –∏–º–µ–Ω–Ω–æ –ø—Ä–∏—ë–º–Ω–∏–∫ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç—Å—è –∏ –≤ –∫–∞–∫–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –±—É–¥—É—Ç –≤—ã–∑–≤–∞–Ω—ã(–µ—Å–ª–∏ –≤–æ–æ–±—â–µ –±—É–¥—É—Ç) &lt;code&gt;On_Man_Decode_Add_1()&lt;/code&gt; –∏ &lt;code&gt;On_Man_Decode_Add_0()&lt;/code&gt; - –¥–ª—è —ç—Ç–æ–π —Ü–µ–ª–∏ –æ–±–æ–∑–Ω–∞—á–∏–º –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –æ–∂–∏–¥–∞–Ω–∏—è –∫–∞–∫ &lt;code&gt;testing::AtMost(1)&lt;/code&gt;. –ü–æ—Å–ª–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ—Ü–µ—Å—Å –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ–∂–Ω–æ —Ç–æ—á–Ω–æ —Å–ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞—Ç—å –∏ –æ–ø–∏—Å–∞—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —Å –ø–æ–º–æ—â—å—é &lt;code&gt;EXPECT_CALL()&lt;/code&gt;. –¢–∞–∫–∂–µ –∫–∞–∫ –∏ –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–º —Å–ª—É—á–∞–µ –≤ –∫–æ–Ω—Ü–µ –∫–∞–∂–¥–æ–≥–æ —Ç–µ—Å—Ç–∞ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π —Å–æ—Å—Ç–∞–≤–ª—è—é—â–µ–π (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω—É–ª–µ–π –∏ –µ–¥–∏–Ω–∏—Ü –¥–æ–ª–∂–Ω–æ —Å–æ–≤–ø–∞–¥–∞—Ç—å).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;/manchester/tests/gtest/src/manchester/Man_Decode.cpp&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;gtest/gtest.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;gmock/gmock.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;extern&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;C&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;../../../../manchester/src/rx/Man_Decode.c&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;IManDecode&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;virtual&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;Man_Dec_Add_1&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;virtual&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Man_Dec_Add_0&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="cm"&gt;/* Mock implementation */&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ManDecodeMock&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;IManDecode&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;MOCK_METHOD0&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Man_Dec_Add_1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
        &lt;span class="n"&gt;MOCK_METHOD0&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Man_Dec_Add_0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="cm"&gt;/* Fixture class for each test */&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ManDecodeTest_F&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;testing&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Test&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;ManDecodeMock&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;getMock&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;_ManDecodePtr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;protected&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;virtual&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;SetUp&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;_total_1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_total_0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;_ManDecodePtr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;_ManDecode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;Expect_Total_1_And_0_Eq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;EXPECT_EQ&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_total_1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;EXPECT_EQ&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_total_0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;Perform_Stable_Zero&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;periods&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;_total_0&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;periods&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;Man_Decode_Stable_Zero&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;periods&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;Perform_Stable_One&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;periods&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;_total_1&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;periods&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;Man_Decode_Stable_One&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;periods&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;private&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;ManDecodeMock&lt;/span&gt; &lt;span class="n"&gt;_ManDecode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;ManDecodeMock&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;_ManDecodePtr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;_total_1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_total_0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="n"&gt;ManDecodeMock&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;ManDecodeTest_F&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;_ManDecodePtr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cm"&gt;/* Man_Decode externs (events) */&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;On_Man_Decode_Add_1&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;ManDecodeTest_F&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;getMock&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Man_Dec_Add_1&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;On_Man_Decode_Add_0&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;ManDecodeTest_F&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;getMock&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Man_Dec_Add_0&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/* Helpers for TEST_F */&lt;/span&gt;

&lt;span class="cp"&gt;#define EXPECT_MAN_SYNCH(x,y)                               \&lt;/span&gt;
&lt;span class="cp"&gt;    EXPECT_CALL(*getMock(), Man_Dec_Add_##x())              \&lt;/span&gt;
&lt;span class="cp"&gt;        .Times(testing::AtMost(1)); &lt;/span&gt;&lt;span class="cm"&gt;/* Clay? */&lt;/span&gt;&lt;span class="cp"&gt;             \&lt;/span&gt;
&lt;span class="cp"&gt;    EXPECT_CALL(*getMock(), Man_Dec_Add_##y())              \&lt;/span&gt;
&lt;span class="cp"&gt;        .Times(testing::AtMost(1)); &lt;/span&gt;&lt;span class="cm"&gt;/* Clay? */&lt;/span&gt;&lt;span class="cp"&gt;             \&lt;/span&gt;
&lt;span class="cp"&gt;    EXPECT_CALL(*getMock(), Man_Dec_Add_##x()); &lt;/span&gt;&lt;span class="cm"&gt;/* Sync  */&lt;/span&gt;&lt;span class="cp"&gt; \&lt;/span&gt;
&lt;span class="cp"&gt;    EXPECT_CALL(*getMock(), Man_Dec_Add_##y())  &lt;/span&gt;&lt;span class="cm"&gt;/* Sync  */&lt;/span&gt;&lt;span class="cp"&gt; \&lt;/span&gt;

&lt;span class="cp"&gt;#define PERFORM_MAN_SYNCH(x,y)                               \&lt;/span&gt;
&lt;span class="cp"&gt;    Perform_Stable_##x(1);  &lt;/span&gt;&lt;span class="cm"&gt;/* Clay balance (1 - 1 = 0) */&lt;/span&gt;&lt;span class="cp"&gt;   \&lt;/span&gt;
&lt;span class="cp"&gt;    Perform_Stable_##y(2);  &lt;/span&gt;&lt;span class="cm"&gt;/* Sync balance (2 - 2 = 0) */&lt;/span&gt;&lt;span class="cp"&gt;   \&lt;/span&gt;
&lt;span class="cp"&gt;    Perform_Stable_##x(2);  &lt;/span&gt;&lt;span class="cm"&gt;/* Sync */&lt;/span&gt;&lt;span class="cp"&gt;                       \&lt;/span&gt;
&lt;span class="cp"&gt;    Perform_Stable_##y(1)   &lt;/span&gt;&lt;span class="cm"&gt;/* Clay */&lt;/span&gt;&lt;span class="cp"&gt;                       \&lt;/span&gt;

&lt;span class="cm"&gt;/* 1010101010101010(manchester) =&amp;gt; 0 */&lt;/span&gt;

&lt;span class="n"&gt;TEST_F&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ManDecodeTest_F&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Decode_0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;testing&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;InSequence&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;EXPECT_MAN_SYNCH&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;EXPECT_CALL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;getMock&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;Man_Dec_Add_0&lt;/span&gt;&lt;span class="p"&gt;()).&lt;/span&gt;&lt;span class="n"&gt;Times&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;PERFORM_MAN_SYNCH&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;One&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Zero&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Perform_Stable_One&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;Perform_Stable_Zero&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;Expect_Total_1_And_0_Eq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Sync(3) + Byte(8)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/* 0101010101010101(manchester) =&amp;gt; 11111111(bin) =&amp;gt; 255(dec) */&lt;/span&gt;

&lt;span class="n"&gt;TEST_F&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ManDecodeTest_F&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Decode_255&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;testing&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;InSequence&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;EXPECT_MAN_SYNCH&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;EXPECT_CALL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;getMock&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;Man_Dec_Add_1&lt;/span&gt;&lt;span class="p"&gt;()).&lt;/span&gt;&lt;span class="n"&gt;Times&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;PERFORM_MAN_SYNCH&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Zero&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;One&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Perform_Stable_Zero&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;Perform_Stable_One&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;Expect_Total_1_And_0_Eq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Sync(3) + Byte(8)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/* 0110011001100110(manchester) =&amp;gt; 10101010(bin) =&amp;gt; 170(dec) */&lt;/span&gt;

&lt;span class="n"&gt;TEST_F&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ManDecodeTest_F&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Decode_170&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;testing&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;InSequence&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;EXPECT_MAN_SYNCH&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;EXPECT_CALL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;getMock&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;Man_Dec_Add_1&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
        &lt;span class="n"&gt;EXPECT_CALL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;getMock&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;Man_Dec_Add_0&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;PERFORM_MAN_SYNCH&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Zero&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;One&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;Perform_Stable_Zero&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Perform_Stable_One&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;Perform_Stable_Zero&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;Perform_Stable_One&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;Perform_Stable_Zero&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;Expect_Total_1_And_0_Eq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Sync(3) + Byte(8)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/* 1001100110011001(manchester) =&amp;gt; 01010101(bin) =&amp;gt; 85(dec) */&lt;/span&gt;

&lt;span class="n"&gt;TEST_F&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ManDecodeTest_F&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Decode_85&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;testing&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;InSequence&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;EXPECT_MAN_SYNCH&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;EXPECT_CALL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;getMock&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;Man_Dec_Add_0&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
        &lt;span class="n"&gt;EXPECT_CALL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;getMock&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;Man_Dec_Add_1&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;PERFORM_MAN_SYNCH&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;One&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Zero&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;Perform_Stable_One&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Perform_Stable_Zero&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;Perform_Stable_One&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;Perform_Stable_Zero&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;Perform_Stable_One&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;Expect_Total_1_And_0_Eq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Sync(3) + Byte(8)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/* 1001100110011010(manchester) =&amp;gt; 84(dec) =&amp;gt; 01010100(bin) */&lt;/span&gt;

&lt;span class="n"&gt;TEST_F&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ManDecodeTest_F&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Decode_84&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;testing&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;InSequence&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;EXPECT_MAN_SYNCH&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;EXPECT_CALL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;getMock&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;Man_Dec_Add_0&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
        &lt;span class="n"&gt;EXPECT_CALL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;getMock&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;Man_Dec_Add_1&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;EXPECT_CALL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;getMock&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;Man_Dec_Add_0&lt;/span&gt;&lt;span class="p"&gt;()).&lt;/span&gt;&lt;span class="n"&gt;Times&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;PERFORM_MAN_SYNCH&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;One&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Zero&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;Perform_Stable_One&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Perform_Stable_Zero&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;Perform_Stable_One&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;Perform_Stable_Zero&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;Perform_Stable_One&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;Perform_Stable_Zero&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;Expect_Total_1_And_0_Eq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Sync(3) + Byte(8)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è &lt;em&gt;–ú–∞–Ω—á–µ—Å—Ç–µ—Ä—Å–∫–æ–≥–æ –∫–æ–¥–∞&lt;/em&gt;:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;/manchester/src/rx/Man_Decode.c&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;Man_Decode.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;ds_LB&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cm"&gt;/********************************************************************&lt;/span&gt;
&lt;span class="cm"&gt; *      Function Name:  Man_Decode_Stable_Zero                      *&lt;/span&gt;
&lt;span class="cm"&gt; *      Return Value:   no                                          *&lt;/span&gt;
&lt;span class="cm"&gt; *      Parameters:     Stable digital input periods. Ideal 1 or 2  *&lt;/span&gt;
&lt;span class="cm"&gt; *      Description:    Convert signal from Manchester Code.        *&lt;/span&gt;
&lt;span class="cm"&gt; *                      Fire according On_Man_Decode_Add_1()        *&lt;/span&gt;
&lt;span class="cm"&gt; *                      callback event.                             *&lt;/span&gt;
&lt;span class="cm"&gt; ********************************************************************/&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Man_Decode_Stable_Zero&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;register&lt;/span&gt; &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;periods&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;periods&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!--&lt;/span&gt;&lt;span class="n"&gt;periods&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;ds_LB&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;On_Man_Decode_Add_1&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="n"&gt;ds_LB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!--&lt;/span&gt;&lt;span class="n"&gt;periods&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;On_Man_Decode_Add_1&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="n"&gt;ds_LB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/********************************************************************&lt;/span&gt;
&lt;span class="cm"&gt; *      Function Name:  Man_Decode_Stable_One                       *&lt;/span&gt;
&lt;span class="cm"&gt; *      Return Value:   no                                          *&lt;/span&gt;
&lt;span class="cm"&gt; *      Parameters:     Stable digital input periods. Ideal 1 or 2  *&lt;/span&gt;
&lt;span class="cm"&gt; *      Description:    Convert signal from Manchester Code.        *&lt;/span&gt;
&lt;span class="cm"&gt; *                      Fire according On_Man_Decode_Add_0()        *&lt;/span&gt;
&lt;span class="cm"&gt; *                      callback event.                             *&lt;/span&gt;
&lt;span class="cm"&gt; ********************************************************************/&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Man_Decode_Stable_One&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;register&lt;/span&gt; &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;periods&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;periods&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!--&lt;/span&gt;&lt;span class="n"&gt;periods&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;ds_LB&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;On_Man_Decode_Add_0&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="n"&gt;ds_LB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!--&lt;/span&gt;&lt;span class="n"&gt;periods&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;On_Man_Decode_Add_0&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="n"&gt;ds_LB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;–°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤&lt;/h3&gt;
&lt;p&gt;–ï—Å–ª–∏ –í—ã —Ä–∞–±–æ—Ç–∞–µ—Ç–µ –≤ —Å–≤—è–∑–∫–µ &lt;strong&gt;Windows&lt;/strong&gt; + &lt;strong&gt;Visual Studio&lt;/strong&gt;, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å–ª–µ–¥—É—é—â–µ–µ:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="nv"&gt;GTEST_HOME&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;gtest-1.6.0 
&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="nv"&gt;GMOCK_HOME&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;gmock-1.6.0

cl /EHsc /I&lt;span class="nv"&gt;%GTEST_HOME%&lt;/span&gt; /I&lt;span class="nv"&gt;%GTEST_HOME%&lt;/span&gt;/include -I&lt;span class="nv"&gt;%GMOCK_HOME%&lt;/span&gt; &lt;span class="se"&gt;^&lt;/span&gt;
&lt;span class="se"&gt;-&lt;/span&gt;I&lt;span class="nv"&gt;%GMOCK_HOME%&lt;/span&gt;/include main.cpp src/manchester/Man_Encode.cpp &lt;span class="se"&gt;^&lt;/span&gt;
&lt;span class="se"&gt;s&lt;/span&gt;rc/manchester/Man_Decode.cpp &lt;span class="nv"&gt;%GTEST_HOME%&lt;/span&gt;/src/gtest-all.cc &lt;span class="se"&gt;^&lt;/span&gt;
&lt;span class="se"&gt;%&lt;/span&gt;GMOCK_HOME%/src/gmock-all.cc

main.exe
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="Windows –°–∫—Ä–∏–Ω—à–æ—Ç" src="https://mazko.github.io/blog/posts/2012/10/07/manchesterskii-kod-dlia-chainikov/win-gtest-gmock-run.png" style="width:100%; border:1px solid grey;"&gt;&lt;/p&gt;
&lt;p&gt;–ü—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ &lt;strong&gt;Linux&lt;/strong&gt; + &lt;strong&gt;gcc g++&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;GTEST_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;gtest-1.6.0
&lt;span class="nv"&gt;GMOCK_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;gmock-1.6.0

g++ -g -I&lt;span class="nv"&gt;$GTEST_HOME&lt;/span&gt; -I&lt;span class="nv"&gt;$GTEST_HOME&lt;/span&gt;/include -I&lt;span class="nv"&gt;$GMOCK_HOME&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
-I&lt;span class="nv"&gt;$GMOCK_HOME&lt;/span&gt;/include -pthread main.cpp src/manchester/Man_Encode.cpp &lt;span class="se"&gt;\&lt;/span&gt;
src/manchester/Man_Decode.cpp &lt;span class="nv"&gt;$GTEST_HOME&lt;/span&gt;/src/gtest-all.cc &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nv"&gt;$GMOCK_HOME&lt;/span&gt;/src/gmock-all.cc

./a.out
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="Linux –°–∫—Ä–∏–Ω—à–æ—Ç" src="https://mazko.github.io/blog/posts/2012/10/07/manchesterskii-kod-dlia-chainikov/suse_tests_run.png" style="width:100%; border:1px solid grey;"&gt;&lt;/p&gt;
&lt;p&gt;–¢–µ—Å—Ç–æ–≤ –º–Ω–æ–≥–æ –Ω–µ –±—ã–≤–∞–µ—Ç. –ù–∞–ø—Ä–∏–º–µ—Ä, –±—ã–ª–æ –±—ã –Ω–µ–ø–ª–æ—Ö–æ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –¥–ª—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏–∑ –¥–≤—É—Ö –±–∞–π—Ç –∏ –±–æ–ª–µ–µ, –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫—É —É—Å–ª–æ–≤–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –Ω–µ–≤–æ–∑–º–æ–∂–Ω—ã—Ö –¥–ª—è –ú–∞–Ω—á–µ—Å—Ç–µ—Ä—Å–∫–æ–≥–æ –ö–æ–¥–∞ –∫–æ–º–±–∏–Ω–∞—Ü–∏–π - –Ω–∞–ø—Ä–∏–º–µ—Ä 111 –∏–ª–∏ 000. –ß–µ–º –±–æ–ª—å—à–µ —Ç–µ—Ä–ø–µ–Ω–∏—è –∏ –≤—ã–¥–µ—Ä–∂–∫–∏ –Ω–∞ —ç—Ç–æ–º —ç—Ç–∞–ø–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ - —Ç–µ–º –∫—Ä–µ–ø—á–µ –±—É–¥–µ—Ç —Å–æ–Ω –ø–æ—Å–ª–µ –µ—ë —Å–¥–∞—á–∏ –≤ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏—é.&lt;/p&gt;
&lt;h3&gt;–ü—Ä–∞–∫—Ç–∏–∫–∞&lt;/h3&gt;
&lt;p&gt;–¢–µ—Å—Ç—ã —ç—Ç–æ —Ö–æ—Ä–æ—à–æ, –Ω–æ –ø–æ–∫–∞ —á—Ç–æ –≤—Å—ë —ç—Ç–æ –±–æ–ª—å—à–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ —Ç–µ–æ—Ä–∏—é - –∞ —Ç–µ–æ—Ä–∏—è –±–µ–∑ –ø—Ä–∞–∫—Ç–∏–∫–∏, –∫–∞–∫ –∏–∑–≤–µ—Å—Ç–Ω–æ, —Å–∫—É—á–Ω–∞. –ü–æ—ç—Ç–æ–º—É, –µ—Å–ª–∏ –í—ã –¥–æ—á–∏—Ç–∞–ª–∏ –¥–æ —ç—Ç–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞, –º–∏–ª–æ—Å—Ç–∏ –ø—Ä–æ—à—É –ø–æ—Å–µ—Ç–∏—Ç—å &lt;a href="https://mazko.github.io/blog/posts/2012/10/07/ispolzovanie-manchesterskogo-koda-na-primere/"&gt;—Å–ª–µ–¥—É—é—â–∏–π&lt;/a&gt; –ø–æ—Å—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø—Ä–∏—ë–º–Ω–∏–∫–∞ –∏ –ø–µ—Ä–µ–¥–∞—Ç—á–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–≤–∞ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞, –∞ —Å–∞–º –ø—Ä–æ—Ü–µ—Å—Å —ç–º—É–ª–∏—Ä—É–µ—Ç—Å—è –≤ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π —Å—Ä–µ–¥–µ, –∫–æ—Ç–æ—Ä–∞—è —É–º–µ–µ—Ç –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞—Ç—å –ø–æ–≤–µ–¥–µ–Ω–∏–µ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏—Ö —Ü–µ–ø–µ–π.&lt;/p&gt;
&lt;p&gt;–ò—Å—Ö–æ–¥–Ω–∏–∫–∏ –∫ —Ç–µ–∫—É—â–µ–º—É –ø–æ—Å—Ç—É –Ω–∞ &lt;a href="https://github.com/mazko/Manchester-Code" rel="nofollow"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;</content><category term="TDD"></category><category term="–ú–∞–Ω—á–µ—Å—Ç–µ—Ä—Å–∫–∏–π –∫–æ–¥"></category><category term="gtest"></category><category term="gmock"></category></entry><entry><title>–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–π Bootloader –æ—Ç Microchip –¥–ª—è PIC16 / PIC18</title><link href="https://mazko.github.io/blog/posts/2012/10/03/zamechatelnyi-bootloader-ot-microchip-dlia-pic16-pic18/" rel="alternate"></link><published>2012-10-03T00:00:00+03:00</published><updated>2012-10-03T00:00:00+03:00</updated><author><name>Oleg Mazko</name></author><id>tag:mazko.github.io,2012-10-03:/blog/posts/2012/10/03/zamechatelnyi-bootloader-ot-microchip-dlia-pic16-pic18/</id><summary type="html">&lt;p&gt;–í—ã –ø–µ—Ä–µ–ø—Ä–æ—à–∏–≤–∞–ª–∏ –∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å &lt;strong&gt;BIOS&lt;/strong&gt; ? –ï—Å–ª–∏ –Ω–µ—Ç, —Ç–æ –í–∞–º —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ, –ø–æ–≤–µ–∑–ª–æ... –í–æ–±—â–µ–º –ø—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ —Å–µ–±–µ &lt;strong&gt;BIOS&lt;/strong&gt;, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ —É–º–µ–µ—Ç –ø—Ä–æ—à–∏–≤–∞—Ç—å —Å–∞–º —Å–µ–±—è –∏ –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–ª–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–ª–æ—Ö–æ (–µ–≥–æ —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç –ª—é–¥–∏, —Ç–æ—á–Ω–æ —Ç–∞–∫–∏–µ –∂–µ –∫–∞–∫ –∏ –º—ã —Å –í–∞–º–∏), –Ω—É–∂–Ω–æ –≤—ã–∫–ª—é—á–∏—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä, –æ—Ç–∫—Ä—É—Ç–∏—Ç—å –ø–∞—Ä—É —à—É—Ä—É–ø–æ–≤, —Å–Ω—è—Ç—å –∫—Ä—ã—à–∫—É, –≤—ã—Ç—è–Ω—É—Ç—å –º–∏–∫—Ä–æ—Å—Ö–µ–º—É ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;–í—ã –ø–µ—Ä–µ–ø—Ä–æ—à–∏–≤–∞–ª–∏ –∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å &lt;strong&gt;BIOS&lt;/strong&gt; ? –ï—Å–ª–∏ –Ω–µ—Ç, —Ç–æ –í–∞–º —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ, –ø–æ–≤–µ–∑–ª–æ... –í–æ–±—â–µ–º –ø—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ —Å–µ–±–µ &lt;strong&gt;BIOS&lt;/strong&gt;, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ —É–º–µ–µ—Ç –ø—Ä–æ—à–∏–≤–∞—Ç—å —Å–∞–º —Å–µ–±—è –∏ –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–ª–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–ª–æ—Ö–æ (–µ–≥–æ —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç –ª—é–¥–∏, —Ç–æ—á–Ω–æ —Ç–∞–∫–∏–µ –∂–µ –∫–∞–∫ –∏ –º—ã —Å –í–∞–º–∏), –Ω—É–∂–Ω–æ –≤—ã–∫–ª—é—á–∏—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä, –æ—Ç–∫—Ä—É—Ç–∏—Ç—å –ø–∞—Ä—É —à—É—Ä—É–ø–æ–≤, —Å–Ω—è—Ç—å –∫—Ä—ã—à–∫—É, –≤—ã—Ç—è–Ω—É—Ç—å –º–∏–∫—Ä–æ—Å—Ö–µ–º—É &lt;strong&gt;BIOS&lt;/strong&gt;, –Ω–∞–π—Ç–∏ —Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π –ø—Ä–æ–≥—Ä–∞–º–º–∞—Ç–æ—Ä, –ü–†–û–®–ò–¢–¨, –ø–æ—Å–ª–µ —á–µ–≥–æ —Å–¥–µ–ª–∞—Ç—å –≤—Å—ë —Ç–æ –∂–µ —Å–∞–º–æ–µ –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ. –ü–∞—Ä—É —Ä–∞–∑ —Å–¥–µ–ª–∞—Ç—å –º–æ–∂–Ω–æ, –Ω–æ —Ö–æ—Ç–µ–ª–æ—Å—å –±—ã —á—Ç–æ-–Ω–∏–±—É–¥—å –ø–æ—É–¥–æ–±–Ω–µ–µ, –æ—Å–æ–±–µ–Ω–Ω–æ –µ—Å–ª–∏ –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è —ç—Ç–æ—Ç –ø—Ä–æ—Ü–µ—Å—Å —á–∞—Å—Ç–æ –ø–æ–≤—Ç–æ—Ä—è—Ç—å –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.&lt;/p&gt;
&lt;p&gt;–ü–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã &lt;strong&gt;Microchip&lt;/strong&gt; –Ω–∞—É—á–∏–ª–∏—Å—å –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ —Å—á–∏—Ç—ã–≤–∞—Ç—å/–∑–∞–ø–∏—Å—ã–≤–∞—Ç—å —è—á–µ–π–∫–∏ —Å–≤–æ–µ–π Flash-–ø–∞–º—è—Ç–∏ (–ø–æ—è–≤–∏–ª–∏—Å—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∞—Å—Å–µ–º–±–ª–µ—Ä–∞), –ø–æ—è–≤–ª–µ–Ω–∏–µ &lt;strong&gt;Bootloader&lt;/strong&gt;'–æ–≤ - —ç—Ç–æ –±—ã–ª –ª–∏—à—å –≤–æ–ø—Ä–æ—Å –≤—Ä–µ–º–µ–Ω–∏. –û—á–µ–Ω—å —Ö–æ—Ä–æ—à–æ, –∫–æ–≥–¥–∞ —ç—Ç–∏–º –≤–æ–ø—Ä–æ—Å–æ–º –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤ - –∫—Ç–æ –∫–∞–∫ –Ω–µ –æ–Ω –ª—É—á—à–µ –æ—Å–≤–µ–¥–æ–º–ª—ë–Ω –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö —Å–≤–æ–µ–π –ø—Ä–æ–¥—É–∫—Ü–∏–∏. –ù–∞ –æ–¥–Ω–æ–º –∏–∑ —Ç–∞–∫–∏—Ö Bootloader'–æ–≤ –ø–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–µ–º &lt;strong&gt;AN1310&lt;/strong&gt;, –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –Ω–∞ –ª–∏–Ω–µ–π–∫—É &lt;strong&gt;PIC16&lt;/strong&gt; / &lt;strong&gt;PIC18&lt;/strong&gt; –∏ –∏—Å–ø–æ–ª—å–∑—É—é—â–∏–º –¥–ª—è –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å &lt;strong&gt;UART&lt;/strong&gt; –¥–∞–≤–∞–π—Ç–µ –æ—Å—Ç–∞–Ω–æ–≤–∏–º—Å—è –ø–æ–ø–æ–¥—Ä–æ–±–Ω–µ–µ. –°–∫–∞—á–∞—Ç—å –≤—Å—ë –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–ª—è —Ä–∞–±–æ—Ç—ã –ü–û –º–æ–∂–Ω–æ —Å —Å–∞–π—Ç–∞ &lt;a href="http://www.microchip.com/applicationnotes" rel="nofollow"&gt;–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è&lt;/a&gt;.&lt;/p&gt;
&lt;script type="text/javascript" src="https://mazko.github.io/blog/posts/2012/10/03/zamechatelnyi-bootloader-ot-microchip-dlia-pic16-pic18/jquery-1.11.2.min.js"&gt; &lt;/script&gt;

&lt;script type="text/javascript" src="https://mazko.github.io/blog/posts/2012/10/03/zamechatelnyi-bootloader-ot-microchip-dlia-pic16-pic18/slider/easySlider1.7.js"&gt; &lt;/script&gt;

&lt;script type="text/javascript" src="https://mazko.github.io/blog/posts/2012/10/03/zamechatelnyi-bootloader-ot-microchip-dlia-pic16-pic18/onload.js"&gt; &lt;/script&gt;

&lt;div id="slider_bootloder_shots" style="padding-top: .6em;"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src="https://mazko.github.io/blog/posts/2012/10/03/zamechatelnyi-bootloader-ot-microchip-dlia-pic16-pic18/shots/start.png" alt="start" /&gt;&lt;/li&gt;
&lt;li&gt;&lt;img src="https://mazko.github.io/blog/posts/2012/10/03/zamechatelnyi-bootloader-ot-microchip-dlia-pic16-pic18/shots/settings.png" alt="settings" /&gt;&lt;/li&gt;
&lt;li&gt;&lt;img src="https://mazko.github.io/blog/posts/2012/10/03/zamechatelnyi-bootloader-ot-microchip-dlia-pic16-pic18/shots/break.png" alt="break" /&gt;&lt;/li&gt;
&lt;li&gt;&lt;img src="https://mazko.github.io/blog/posts/2012/10/03/zamechatelnyi-bootloader-ot-microchip-dlia-pic16-pic18/shots/bootloader_connected.png" alt="bootloader_connected" /&gt;&lt;/li&gt;
&lt;li&gt;&lt;img src="https://mazko.github.io/blog/posts/2012/10/03/zamechatelnyi-bootloader-ot-microchip-dlia-pic16-pic18/shots/erase.png" alt="erase" /&gt;&lt;/li&gt;
&lt;li&gt;&lt;img src="https://mazko.github.io/blog/posts/2012/10/03/zamechatelnyi-bootloader-ot-microchip-dlia-pic16-pic18/shots/write.png" alt="write" /&gt;&lt;/li&gt;
&lt;li&gt;&lt;img src="https://mazko.github.io/blog/posts/2012/10/03/zamechatelnyi-bootloader-ot-microchip-dlia-pic16-pic18/shots/verify.png" alt="verify" /&gt;&lt;/li&gt;
&lt;li&gt;&lt;img src="https://mazko.github.io/blog/posts/2012/10/03/zamechatelnyi-bootloader-ot-microchip-dlia-pic16-pic18/shots/read_main.png" alt="read_main" /&gt;&lt;/li&gt;
&lt;li&gt;&lt;img src="https://mazko.github.io/blog/posts/2012/10/03/zamechatelnyi-bootloader-ot-microchip-dlia-pic16-pic18/shots/read_eeprom.png" alt="read_eeprom" /&gt;&lt;/li&gt;
&lt;li&gt;&lt;img src="https://mazko.github.io/blog/posts/2012/10/03/zamechatelnyi-bootloader-ot-microchip-dlia-pic16-pic18/shots/read_config.png" alt="read_config" /&gt;&lt;/li&gt;
&lt;li&gt;&lt;img src="https://mazko.github.io/blog/posts/2012/10/03/zamechatelnyi-bootloader-ot-microchip-dlia-pic16-pic18/shots/run.png" alt="run" /&gt;&lt;/li&gt;
&lt;li&gt;&lt;img src="https://mazko.github.io/blog/posts/2012/10/03/zamechatelnyi-bootloader-ot-microchip-dlia-pic16-pic18/shots/validate_balance.png" alt="validate_balance" /&gt;&lt;/li&gt;
&lt;li&gt;&lt;img src="https://mazko.github.io/blog/posts/2012/10/03/zamechatelnyi-bootloader-ot-microchip-dlia-pic16-pic18/shots/reboot.png" alt="reboot" /&gt;&lt;/li&gt;
&lt;li&gt;&lt;img src="https://mazko.github.io/blog/posts/2012/10/03/zamechatelnyi-bootloader-ot-microchip-dlia-pic16-pic18/shots/reboot_1.png" alt="reboot_1" /&gt;&lt;/li&gt;
&lt;li&gt;&lt;img src="https://mazko.github.io/blog/posts/2012/10/03/zamechatelnyi-bootloader-ot-microchip-dlia-pic16-pic18/shots/reboot_2.png" alt="reboot_2" /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div style="clear: both;"&gt;
&lt;/div&gt;

&lt;p&gt;–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ &lt;strong&gt;AN1310&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;–ò—Å–ø–æ–ª—å–∑—É–µ—Ç –º–∞–ª–µ–Ω—å–∫–∏–π –æ–±—ä—ë–º Flash –ø–∞–º—è—Ç–∏ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ - –≤ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–µ —Å–ª—É—á–∞–µ–≤ –º–µ–Ω–µ–µ 450 —Å–ª–æ–≤&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏ –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö UART –º–µ–∂–¥—É –ü–ö (host) –∏ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–º&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;–®–∏—Ä–æ–∫–∏–π –¥–∏–∞–ø–∞–∑–æ–Ω –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–∫–æ—Ä–æ—Å—Ç–∏ –ø–µ—Ä–µ–¥–∞—á–∏ 1,200 –ö–±–∏—Ç/—Å - 3 M–±–∏—Ç/—Å&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;–ü—Ä–æ—Ç–æ–∫–æ–ª –æ–±–º–µ–Ω–∞ –¥–∞–Ω–Ω—ã–º–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç 16-–±–∏—Ç CRC&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;–ò–º–µ–µ—Ç—Å—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å Flash —Ç–æ–ª—å–∫–æ –ø–æ —Ç–µ–º –∞–¥—Ä–µ—Å–∞–º, –∫–æ—Ç–æ—Ä—ã–µ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å (&lt;em&gt;Incremental Bootloading&lt;/em&gt;) - —ç—Ç–æ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —É—Å–∫–æ—Ä—è–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;M–∏–Ω–∏–º—É–º —Å–æ–µ–¥–∏–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ - –º–æ–∂–Ω–æ –æ–±–æ–π—Ç–∏—Å—å –≤—Å–µ–≥–æ —Ç—Ä–µ–º—è –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–∞–º–∏&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;–ü–û –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –ü–ö –∫—Ä–æ—Å—Å–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–æ–µ - –∫–æ–¥ –Ω–∞–ø–∏—Å–∞–Ω –Ω–∞ &lt;strong&gt;–°&lt;/strong&gt; / &lt;strong&gt;–°++&lt;/strong&gt; &lt;strong&gt;Qt&lt;/strong&gt; &lt;strong&gt;SDK&lt;/strong&gt;, –µ—Å—Ç—å –∏—Å—Ö–æ–¥–Ω–∏–∫–∏&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;–®–∞–≥ –ø–µ—Ä–≤—ã–π - —Å—Ö–µ–º–æ—Ç–µ—Ö–Ω–∏–∫–∞&lt;/h3&gt;
&lt;p&gt;–í –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –ø—Ä–µ–¥–ª–∞–≥–∞—é—Ç—Å—è –¥–≤–µ —Å—Ö–µ–º—ã. –î–ª—è —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è —É—Ä–æ–≤–Ω–µ–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –º–∏–∫—Ä–æ—Å—Ö–µ–º–∞ MAX3232:&lt;/p&gt;
&lt;p&gt;&lt;img alt="–°–∫—Ä–∏–Ω—à–æ—Ç" src="https://mazko.github.io/blog/posts/2012/10/03/zamechatelnyi-bootloader-ot-microchip-dlia-pic16-pic18/cheme_3.3v.png" style="width:100%; border:1px solid #ddd;"&gt;&lt;/p&gt;
&lt;p&gt;–ï—Å–ª–∏ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ –ø–∏—Ç–∞–Ω–∏—è –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è –ø–∏—Ç–∞–Ω–∏—è MAX3232, —Ç–æ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç—Å—è –≤–≤–µ—Å—Ç–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π MOSFET —Ç—Ä–∞–Ω–∑–∏—Å—Ç–æ—Ä:&lt;/p&gt;
&lt;p&gt;&lt;img alt="–°–∫—Ä–∏–Ω—à–æ—Ç" src="https://mazko.github.io/blog/posts/2012/10/03/zamechatelnyi-bootloader-ot-microchip-dlia-pic16-pic18/cheme_5v.png" style="width:100%; border:1px solid #ddd;"&gt;&lt;/p&gt;
&lt;p&gt;–û–¥–Ω–∞–∫–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ —Å—Ö–µ–º—ã –º–æ–∂–Ω–æ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —É–ø—Ä–æ—Å—Ç–∏—Ç—å / —É–¥–µ—à–µ–≤–∏—Ç—å, –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–µ—Ä–µ—Ö–æ–¥–Ω–∏–∫ USB-to-serial (–Ω–∞–ø—Ä–∏–º–µ—Ä –Ω–∞ PL2303 –∏–ª–∏ FT232BM). –£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—á–µ—Å–∫–æ–π –µ–¥–∏–Ω–∏—Ü—ã —É PL2303 - 3.3V –∏ –µ—Å–ª–∏ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ –ø–∏—Ç–∞–Ω–∏—è –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö 3 ... 3.3V, MAX3232 –Ω–µ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è. –í —Ç–∞–∫–æ–º —Å–ª—É—á–∞–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º —Ç–æ–ª—å–∫–æ –ø–æ–¥—Ç—è–≥–∏–≤–∞—é—â–∏–π —Ä–µ–∑–∏—Å—Ç–æ—Ä —Å &lt;strong&gt;Vdd&lt;/strong&gt; –Ω–∞ &lt;strong&gt;RX&lt;/strong&gt;, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Å–ª—É—á–∞–π–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ &lt;strong&gt;Bootloader&lt;/strong&gt;'–∞ –ø—Ä–∏ –æ—Ç–∫–ª—é—á—ë–Ω–Ω–æ–º –ø–µ—Ä–µ—Ö–æ–¥–Ω–∏–∫–µ USB-to-serial. –ß—Ç–æ –∫–∞—Å–∞–µ—Ç—Å—è —Å–∏–≥–Ω–∞–ª–∞ RTS (—Å–º. —Å—Ö–µ–º—ã), —Ç–æ –æ–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å–±—Ä–æ—Å–∞ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ (RESET), –∞ –ø–æ—Å–∫–æ–ª—å–∫—É —Ç–∞–∫–æ–≥–æ –∂–µ —ç—Ñ—Ñ–µ–∫—Ç–∞ –º–æ–∂–Ω–æ –¥–æ—Å—Ç–∏—á—å –ø—Ä–æ—Å—Ç–æ –æ—Ç–∫–ª—é—á–∏–≤/–≤–∫–ª—é—á–∏–≤ –ø–∏—Ç–∞–Ω–∏–µ, —Ç–æ –µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ. –í —Å–ª—É—á–∞–µ–µ —Å USB-to-serial –∫–∞–∫ –ø—Ä–∞–≤–∏–ª–æ –∏–º–µ–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ RX, TX –∏ GND, –ø–æ—ç—Ç–æ–º—É —É–¥–æ–±–Ω–µ–π —Å–±—Ä–∞—Å—ã–≤–∞—Ç—å –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –≤—Ä—É—á–Ω—É—é.&lt;/p&gt;
&lt;h3&gt;–®–∞–≥ –≤—Ç–æ—Ä–æ–π - –ø—Ä–æ—à–∏–≤–∫–∞ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞&lt;/h3&gt;
&lt;p&gt;&lt;img alt="–°–∫—Ä–∏–Ω—à–æ—Ç" src="https://mazko.github.io/blog/posts/2012/10/03/zamechatelnyi-bootloader-ot-microchip-dlia-pic16-pic18/18f46k22.png" style="float:left; margin:.5em 1.3em .3em 0;"&gt;–ò—Å—Ö–æ–¥–Ω–∏–∫–∏ &lt;strong&gt;AN1310&lt;/strong&gt; —É–ø–∞–∫–æ–≤–∞–Ω—ã –≤ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π &lt;strong&gt;*.exe&lt;/strong&gt; —Ñ–∞–π–ª, —Ç–∞–∫ —á—Ç–æ –ø–æ–Ω–∞—á–∞–ª—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ –û–° &lt;em&gt;Windows&lt;/em&gt; (–∫–∞–∫ –≤–∞—Ä–∏–∞–Ω—Ç –º–æ–∂–Ω–æ –µ—â—ë –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å &lt;em&gt;Wine&lt;/em&gt; –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∏–Ω—Å—Ç–∞–ª–ª—è—Ü–∏—é —Ç–∞–º, –Ω–æ –í–∞—à –ø–æ–∫–æ—Ä–Ω—ã–π —Å–ª—É–≥–∞ —ç—Ç–æ—Ç —Å–ø–æ—Å–æ–± –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ –Ω–µ –ø—Ä–æ–≤–µ—Ä—è–ª). –ù–µ–ø—Ä–∏—è—Ç–Ω–∞—è —Å–∏—Ç—É–∞—Ü–∏—è —Å &lt;strong&gt;Windows&lt;/strong&gt; —Ç–∞–∫–∂–µ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è –∏ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Å–±–æ—Ä–∫–∏ &lt;strong&gt;Bootloader&lt;/strong&gt;'–∞ - –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å &lt;strong&gt;MPasm&lt;/strong&gt; / &lt;strong&gt;MPLAB&lt;/strong&gt;, —á—Ç–æ–±—ã —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ö–µ–∫—Å. –ü–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ &lt;strong&gt;Bootloader&lt;/strong&gt; –±—É–¥–µ—Ç —É–∂–µ –≤ –ø—Ä–æ—à–∏—Ç –∫—Ä–∏—Å—Ç–∞–ª–ª–µ, –æ–± –û–° &lt;strong&gt;Windows&lt;/strong&gt; –º–æ–∂–Ω–æ —Å–ø–æ–∫–æ–π–Ω–æ –∑–∞–±—ã—Ç—å.&lt;/p&gt;
&lt;p&gt;C–∫–∞—á–∞–Ω–Ω—ã–π —Å —Å–∞–π—Ç–∞ &lt;strong&gt;Microchip&lt;/strong&gt; –∏–Ω—Å—Ç–∞–ª–ª—è—Ç–æ—Ä &lt;strong&gt;Serial Bootloader AN1310 v1.05r.exe&lt;/strong&gt; –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞ –ü–ö —Ä–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ—Ç –∏—Å—Ö–æ–¥–Ω—ã–µ –∫–æ–¥—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—à–∏–≤–∫–∏ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ —Å—é–¥–∞:&lt;/p&gt;
&lt;div style="clear:both;"&gt;
&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;C:\Microchip Solutions\Serial Bootloader AN1310 vX.XX\PICxx Bootloader\
&lt;/pre&gt;&lt;/div&gt;


&lt;ol style="padding-top: 1em;"&gt;
  &lt;li&gt;
    &lt;p style="padding-top:0; margin-top:0;"&gt;–ö–æ–¥ –Ω–∞–ø–∏—Å–∞–Ω –Ω–∞ –∞—Å—Å–µ–º–±–ª–µ—Ä–µ - MPasm, –¥–ª—è –µ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —Å–±–æ—Ä–∫–∏ —É–¥–æ–±–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å MPLAB IDE&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;–í –º–µ–Ω—é Configure -&amp;gt; Select Device‚Ä¶ –≤—ã–±—Ä–∞—Ç—å –º–æ–¥–µ–ª—å –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä PIC18F46K22)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;–í –º–µ–Ω—é Configure -&amp;gt; Configuration Bits‚Ä¶.&lt;/p&gt;

&lt;table style="border: 4px double black; border-collapse: collapse; width: 100%; margin-top: 1.5em; margin-bottom: 1.5em;" cellpadding="5"&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style="padding: .3em;border: 4px double black;"&gt;Watchdog Timer&lt;/td&gt;
&lt;td style="padding: .3em;border: 4px double black;"&gt;‚ÄúDisabled‚Äù, –æ–¥–Ω–∞–∫–æ –µ–≥–æ –º–æ–∂–Ω–æ –∑–∞–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="padding: .3em;border: 4px double black;"&gt;Extended Instruction Set Enable bit&lt;/td&gt;
&lt;td style="padding: .3em;border: 4px double black;"&gt;‚ÄúDisabled‚Äù&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="padding: .3em;border: 4px double black;"&gt;Oscillator Selection bits&lt;/td&gt;
&lt;td style="padding: .3em;border: 4px double black;"&gt;–ß–µ–º –±–æ–ª—å—à–µ —Ç–∞–∫—Ç–æ–≤–∞—è —á–∞—Å—Ç–æ—Ç–∞, —Ç–µ–º –≤—ã—à–µ –ø—Ä–µ–¥–µ–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å UART&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="padding: .3em;border: 4px double black;"&gt;Fail-Safe Clock Monitor Enable bit&lt;/td&gt;
&lt;td style="padding: .3em;border: 4px double black;"&gt;‚ÄúEnabled‚Äù, –µ—Å–ª–∏ –∏–º–µ–µ—Ç—Å—è&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="padding: .3em;border: 4px double black;"&gt;Low-Voltage Program (LVP)&lt;/td&gt;
&lt;td style="padding: .3em;border: 4px double black;"&gt;‚ÄúDisabled‚Äù, –µ—Å–ª–∏ –∏–º–µ–µ—Ç—Å—è&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="padding: .3em;border: 4px double black;"&gt;Table Read-Protect&lt;/td&gt;
&lt;td style="padding: .3em;border: 4px double black;"&gt;‚ÄúDisabled‚Äù, –µ—Å–ª–∏ –∏–º–µ–µ—Ç—Å—è&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/li&gt;

  &lt;li&gt;
    &lt;p&gt;–°–æ–±—Ä–∞—Ç—å –ø—Ä–æ–µ–∫—Ç –∏ –ø—Ä–æ—à–∏—Ç—å –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –ø—Ä–æ–≥—Ä–∞–º–º–∞—Ç–æ—Ä–æ–º )))&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img alt="–°–∫—Ä–∏–Ω—à–æ—Ç" src="https://mazko.github.io/blog/posts/2012/10/03/zamechatelnyi-bootloader-ot-microchip-dlia-pic16-pic18/mplab_config_bits.png" style="width:100%; border:1px solid #ddd;"&gt;&lt;/p&gt;
&lt;p&gt;–í —Å–ª—É—á–∞–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –º–æ–∂–Ω–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥ &lt;strong&gt;bootconfig.inc&lt;/strong&gt;. –ù–∞–ø—Ä–∏–º–µ—Ä, &lt;strong&gt;PIC18F46K22&lt;/strong&gt; –∏–º–µ–µ—Ç –Ω–∞ –±–æ—Ä—Ç—É –¥–≤–∞ &lt;strong&gt;USART&lt;/strong&gt; –º–æ–¥—É–ª—è, –∞ &lt;strong&gt;Bootloader&lt;/strong&gt; –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø–µ—Ä–≤—ã–π. –í —ç—Ç–æ–º –∂–µ —Ñ–∞–π–ª–µ –º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –æ–¥–∏–Ω –∏–∑ –¥–≤—É—Ö —Ä–µ–∂–∏–º–æ–≤ —Ä–∞–±–æ—Ç—ã  &lt;strong&gt;Bootloader&lt;/strong&gt;'–∞:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é, —Ö–µ–∫—Å &lt;strong&gt;Bootloader&lt;/strong&gt;'–∞ —Ä–∞—Å–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è –≤ –∫–æ–Ω—Ü–µ Flash-–ø–∞–º—è—Ç–∏, –≤ —ç—Ç–æ–º —Å–ª—É—á–∞–µ –æ—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ –º–æ–∂–µ—Ç —Å–∞–º–∞ –æ–±—Å–ª—É–∂–∏–≤–∞—Ç—å –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è, —Ç.–µ. —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏ –µ—ë —Ä–∞–±–æ—Ç–∞ –Ω–∏—á–µ–º –Ω–µ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç —Ä–∞–±–æ—Ç—ã –±–µ–∑ &lt;strong&gt;Bootloader&lt;/strong&gt;'–∞. –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ, —á—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–Ω–∞—Ç—å –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä—É –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã - —É—á–∞—Å—Ç–æ–∫ –∑–∞–Ω—è—Ç–æ–π Flash-–ø–∞–º—è—Ç–∏, –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ HI-TECH –° –¥–ª—è —ç—Ç–æ–π —Ü–µ–ª–∏ –º–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ —á—Ç–æ-—Ç–æ –≤—Ä–æ–¥–µ &lt;code&gt;--ROM=default,-F800-FBFF&lt;/code&gt;. –û–¥–Ω–∞–∫–æ –ø–æ–¥–æ–±–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è &lt;strong&gt;Bootloader&lt;/strong&gt;'–∞ –∏–º–µ–µ—Ç –æ–¥–∏–Ω —Å—É—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ–∫ - –≤ —Å–ª—É—á–∞–µ –∞–ø–ø–∞—Ä–∞—Ç–Ω–æ–≥–æ —Å–±–æ—è (–Ω–∞–ø—Ä–∏–º–µ—Ä –æ—Ç–∫–ª—é—á–∏–ª–∏ –ø–∏—Ç–∞–Ω–∏–µ) –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –∑–∞–ø–∏—Å–∏ –µ–≥–æ –ø—Ä–æ—à–∏–≤–∫–∞ –º–æ–∂–µ—Ç –ø–æ–≤—Ä–µ–¥–∏—Ç—å—Å—è - –≤ —ç—Ç–æ–º —Å–ª—É—á–∞–µ —Å–Ω–æ–≤–∞ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –ø—Ä–æ–≥—Ä–∞–º–º–∞—Ç–æ—Ä. –î–∞–∂–µ –µ—Å–ª–∏ —Å –ø–æ–º–æ—â—å—é –±–∏—Ç–æ–≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∞–ø–ø–∞—Ä–∞—Ç–Ω–æ –∑–∞—â–∏—Ç–∏—Ç—å –∫–æ–Ω–µ—Ü Flash-–ø–∞–º—è—Ç–∏, –æ—Å—Ç–∞—ë—Ç—Å—è –∫–∞–∫ –º–∏–Ω–∏–º—É–º –æ–¥–Ω–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è (&lt;strong&gt;GOTO&lt;/strong&gt;), —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–Ω–∞—è –ø–æ –∞–¥—Ä–µ—Å—É 0000h, –∑–∞—â–∏—Ç–∏—Ç—å –∫–æ—Ç–æ—Ä—É—é –Ω–µ –∫–æ—Å–Ω—É–≤—à–∏—Å—å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–π (0008h, 0018h) –º—ã –Ω–µ –º–æ–∂–µ–º - –∞–ø–ø–∞—Ä–∞—Ç–Ω–æ –∑–∞—â–∏—â–∞—Ç—å Flash-–ø–∞–º—è—Ç—å –æ—Ç –∑–∞–ø–∏—Å–∏ –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –±–ª–æ–∫–∞–º–∏.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;–í —ç—Ç–æ–π —Å–≤—è–∑–∏ —Ü–µ–ª–µ—Å–æ–æ–±—Ä–∞–∑–Ω–æ –∑–∞–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å –≤—Ç–æ—Ä–æ–π –≤–∞—Ä–∏–∞–Ω—Ç &lt;strong&gt;Bootloader&lt;/strong&gt;'–∞, –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –æ–Ω –æ–±–æ–∑–Ω–∞—á–µ–Ω –∫–∞–∫ &lt;strong&gt;REMAPPED&lt;/strong&gt;. –û–Ω —Ä–∞—Å–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è –≤ –Ω–∞—á–∞–ª–µ Flash-–ø–∞–º—è—Ç–∏ –∏ —Å–∞–º –æ–±—Å–ª—É–∂–∏–≤–∞–µ—Ç –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è, —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ—Ç –∏—Ö –ø–æ –¥—Ä—É–≥–∏–º –∞–¥—Ä–µ—Å–∞–º, –Ω–∞–ø—Ä–∏–º–µ—Ä: 0008h =&amp;gt; 0808h, 0018h =&amp;gt; 0818h. –¢–∞–∫–æ–π –ø–æ–¥—Ö–æ–¥ –¥–æ–±–∞–≤–ª—è–µ—Ç —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫—É—é(–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è GOTO) –∑–∞–¥–µ—Ä–∂–∫—É –≤ –ø—Ä–æ—Ü–µ—Å—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–π, –æ–¥–Ω–∞–∫–æ –∏–º–µ–µ—Ç –¥–≤–∞ –æ—á–µ–≤–∏–¥–Ω—ã—Ö –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞. –í–æ-–ø–µ—Ä–≤—ã—Ö, –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ —É –≤—Å–µ—Ö –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤ Flash –∏–º–µ–µ—Ç boot-–±–ª–æ–∫, –æ–±—ä—ë–º –∫–æ—Ç–æ—Ä–æ–≥–æ –º–µ–Ω—å—à–µ –¥—Ä—É–≥–∏—Ö - –æ–Ω –∫–∞–∫ —Ä–∞–∑ –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω –Ω–∞ &lt;strong&gt;Bootloader&lt;/strong&gt;'—ã. –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –±–æ–ª–µ–µ —Ä–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –∏ —ç–∫–æ–Ω–æ–º–Ω–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ä–µ—Å—É—Ä—Å—ã Flash-–ø–∞–º—è—Ç–∏ –º–µ–∂–¥—É –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–º –∏ &lt;strong&gt;Bootloader&lt;/strong&gt;'–æ–º. –í–æ-–≤—Ç–æ—Ä—ã—Ö, –≤–µ—Å—å –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ–æ–±—Ö–æ–¥–∏–º –¥–ª—è —Ä–∞–±–æ—Ç—ã &lt;strong&gt;Bootloader&lt;/strong&gt;'–∞ –º–æ–∂–Ω–æ –∞–ø–ø–∞—Ä–∞—Ç–Ω–æ –∑–∞—â–∏—Ç–∏—Ç—å –æ—Ç –∑–∞–ø–∏—Å–∏, –Ω–∏—á—Ç–æ –Ω–µ c–º–æ–∂–µ—Ç –µ–≥–æ –ø–æ–≤—Ä–µ–¥–∏—Ç—å.
–ß—Ç–æ–±—ã –∑–∞–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å &lt;strong&gt;REMAPPED Bootloader&lt;/strong&gt;, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤ &lt;strong&gt;bootconfig.inc&lt;/strong&gt; —É–∫–∞–∑–∞—Ç—å &lt;code&gt;#define BOOTLOADER_ADDRESS 0&lt;/code&gt;. –¢–∞–∫–∂–µ, –∏—Å—Ö–æ–¥—è –∏–∑ —Ä–∞–∑–º–µ—Ä–∞ boot-–±–ª–æ–∫–∞, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å, –∫—É–¥–∞ &lt;strong&gt;Bootloader&lt;/strong&gt; –¥–æ–ª–∂–µ–Ω –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞—Ç—å –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è, –æ–±–æ–∑–Ω–∞—á–∏–≤: &lt;code&gt;AppVector 0x800&lt;/code&gt;, &lt;code&gt;AppHighIntVector 0x808&lt;/code&gt;  –∏ &lt;code&gt;AppLowIntVector 0x818&lt;/code&gt;. –û–±–æ –≤—Å—ë–º —ç—Ç–æ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–æ–±—â–∏—Ç—å –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä—É –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã. –î–ª—è HI-TECH –° —ç—Ç–æ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å –≤–æ—Ç —Ç–∞–∫: &lt;code&gt;--RUNTIME=default,+download --CODEOFFSET=800 --ROM=default,-0-7FF&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;bootconfig.inc&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;; Copyright (c) 2002-2011,  Microchip Technology Inc.
;
; Microchip licenses this software to you solely for use with Microchip
; products.  The software is owned by Microchip and its licensors, and
; is protected under applicable copyright laws.  All rights reserved.
;
; SOFTWARE IS PROVIDED &amp;quot;AS IS.&amp;quot;  MICROCHIP EXPRESSLY DISCLAIMS ANY
; WARRANTY OF ANY KIND, WHETHER EXPRESS OR IMPLIED, INCLUDING BUT
; NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS
; FOR A PARTICULAR PURPOSE, OR NON-INFRINGEMENT.  IN NO EVENT SHALL
; MICROCHIP BE LIABLE FOR ANY INCIDENTAL, SPECIAL, INDIRECT OR
; CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, HARM TO YOUR
; EQUIPMENT, COST OF PROCUREMENT OF SUBSTITUTE GOODS, TECHNOLOGY
; OR SERVICES, ANY CLAIMS BY THIRD PARTIES (INCLUDING BUT NOT LIMITED
; TO ANY DEFENSE THEREOF), ANY CLAIMS FOR INDEMNITY OR CONTRIBUTION,
; OR OTHER SIMILAR COSTS.
;
; To the fullest extent allowed by law, Microchip and its licensors
; liability shall not exceed the amount of fees, if any, that you
; have paid directly to Microchip to use this software.
;
; MICROCHIP PROVIDES THIS SOFTWARE CONDITIONALLY UPON YOUR ACCEPTANCE
; OF THESE TERMS.

; Enable this to work around timing bug found in some PIC18Fxx20&amp;#39;s
;#define TBLWT_BUG

; If you don&amp;#39;t have an RS232 transceiver, you might want this option
;#define INVERT_UART

; Sets OSCCON&amp;lt;IRCF2:IRCF0&amp;gt; for maximum INTOSC frequency (8MHz)
#define USE_MAX_INTOSC

; Sets OSCTUNE.PLLEN bit at start up for frequency multiplication.
#define USE_PLL

; RB0 = 1 required to enable MAX3221 TX output on PICDEM LCD 2 demo board
;#define PICDEM_LCD2

; enable software boot block write protection
#define USE_SOFTBOOTWP

; enable software config words write protection
;#define USE_SOFTCONFIGWP

; Autobaud will be used by default. 
; To save code space or to force a specific baud rate to be used, 
; you can optionally define a BAUDRG value instead. 
; Most PIC18&amp;#39;s support BRG16 mode and use the 
; following equation:
;       BAUDRG = Fosc / (4 * Baud Rate) - 1
;
; Old PIC18&amp;#39;s without BRG16 mode need this equation instead:
;       BAUDRG = Fosc / (16 * Baud Rate) - 1
;
; Examples:
;#define BAUDRG .51  ; 19.2Kbps from 4MHz (BRG16 = 1, BRGH = 1)
;#define BAUDRG .103 ; 115.2Kbps from 48MHz (BRG16 = 1, BRGH = 1)
;#define BAUDRG .85  ; 115.2Kbps from 40MHz (BRG16 = 1, BRGH = 1)
;#define BAUDRG .68  ; 115.2Kbps from 32MHz (BRG16 = 1, BRGH = 1)
;#define BAUDRG .16  ; 115.2Kbps from 8MHz (BRG16 = 1, BRGH = 1)
;#define BAUDRG .11  ; 1Mbps from 48MHz (BRG16 = 1, BRGH = 1)
;#define BAUDRG .9   ; 1Mbps from 40MHz (BRG16 = 1, BRGH = 1)
;#define BAUDRG .4   ; 2Mbps from 40MHz (BRG16 = 1, BRGH = 1)
;#define BAUDRG .3   ; 3Mbps from 48MHz (BRG16 = 1, BRGH = 1)
;#define BAUDRG .12  ; 19.2Kbps from 4MHz (BRG16 = 0, BRGH = 1)
;#define BAUDRG .10  ; 115.2Kbps from 19.6608MHz (BRG16 = 0, BRGH = 1)

; Bootloader must start at the beginning of a FLASH Erase Block. 
; If unspecified, bootloader will automatically be located at the 
; end of program memory address space.

; bootloader at beginning, application start/ISR vectors
; require remapping
#define BOOTLOADER_ADDRESS   0

; useful for running under debugger 
; (debug executive wants to reside at the end of memory space too)
;#define BOOTLOADER_ADDRESS   END_FLASH - (ERASE_FLASH_BLOCKSIZE * 20)

; use on J parts to locate inside flash config erase block
;#define BOOTLOADER_ADDRESS  (END_FLASH - ERASE_FLASH_BLOCKSIZE)

#ifdef BOOTLOADER_ADDRESS
  #if BOOTLOADER_ADDRESS == 0
    ; For Bootloader located at program memory address 0, 
    ; the application firmware must provide remapped reset
    ; and interrupt vectors outside of the Boot Block. The following 
    ; #defines tell the bootloader firmware where application 
    ; entry points are to be expected:

    ; application start up code should be located here.
    #define AppVector           0x800

    ; application high priority interrupt should be located here
    #define AppHighIntVector    0x808

    ; application low priority interrupt should be located here
    #define AppLowIntVector     0x818
  #endif
#endif

; Define UART pins and registers. 
; Modify the following lines if you want to use a different UART module.
;
; Note: If your UART&amp;#39;s RX pin happens to be multiplexed with analog 
;       ANx input functionality, you may need to edit the 
;      &amp;quot;preprocess.inc&amp;quot; DigitalInput macro. Code there needs to 
;       enable the digital input buffer (refer to ADC chapter 
;       of your device&amp;#39;s datasheet).
;
#define UARTNUM 2
#if UARTNUM == 1
    #define UxSPBRG         SPBRG
    #define UxSPBRGH        SPBRGH
    #define UxRCSTA         RCSTA
    #define UxTXSTA         TXSTA
    #define UxRCREG         RCREG
    #define UxTXREG         TXREG
    #define UxPIR           PIR1
    #define UxRCIF          RCIF
    #define UxTXIF          TXIF
    #define UxBAUDCON       BAUDCON

; RX on RC7 is used by default for most PIC18&amp;#39;s.
;    #define RXPORT         PORTC
;    #define RXPIN          .7

;    #define RXPORT          PORTB   ; PIC18F14K50: RX on RB5/AN11
;    #define RXPIN           .5

; RX/AN11 multiplexed -- must enable digital input buffer
;    #define RXANSEL         ANSELH
; ANSELH&amp;lt;3&amp;gt; controls AN11 digital input buffer
;    #define RXAN            .3
#endif

#if UARTNUM == 2
    #define UxSPBRG         SPBRG2
    #define UxSPBRGH        SPBRGH2
    #define UxRCSTA         RCSTA2
    #define UxTXSTA         TXSTA2
    #define UxRCREG         RCREG2
    #define UxTXREG         TXREG2
    #define UxPIR           PIR3
    #define UxRCIF          RC2IF
    #define UxTXIF          TX2IF
    #define UxBAUDCON       BAUDCON2

; RG2 is default RX2 pin for some high pin count PIC18&amp;#39;s.
;    #define RXPORT          PORTG
;    #define RXPIN           .2

; RX2 pin PPS&amp;#39;ed to RD4/RP21 on PIC18F46J11 for example.
    #define RXPORT          PORTD
    #define RXPIN           .7

; On PICs where RX is multiplexed with ANx analog inputs,
    #define RXANSEL         ANSELD
; the digital input buffer needs to be enabled via ANSELx SFRs
    #define RXAN            .7

; devices that use PPS to remap UART2 pins will need these 
; lines defined:

; PPS code for TX2/CK2 output function
;    #define PPS_UTX         .5
;    #define PPS_UTX_PIN     RPOR23  ; UART TX assigned to RP23 pin
;    #define PPS_URX_PIN     .21     ; UART RX assigned to RP21 pin
; PPS register for RX2/CK2 input function
;    #define PPS_URX         RPINR16
#endif

; If you get linker errors complaining 
; &amp;quot;can not fit the absolute section,&amp;quot; you might want to 
; increase BOOTLOADERSIZE below or set the 
; BOOTLOADER_ADDRESS above to a smaller address number.

; Because we need to know the total size of the 
; bootloader before the assembler has finished compiling
; the source code, we have to estimate the final bootloader 
; size and provide it here as BOOTLOADERSIZE. This number 
; is in bytes (twice the instruction word count). 
;
; If you see the bootloader is reserving more FLASH memory 
; than it really needs (you&amp;#39;ll see a bunch of FFFF/NOP 
; instructions at the end of the bootloader memory region),
; you can try reducing BOOTLOADERSIZE.
#define BOOTLOADERSIZE  .708

#define MAJOR_VERSION   .1  ; Bootloader Firmware Version
#define MINOR_VERSION   .5
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;–®–∞–≥ —Ç—Ä–µ—Ç–∏–π - –∑–∞–ø—É—Å–∫ –∏ —Ä–∞–±–æ—Ç–∞ —Å Bootloader'–æ–º&lt;/h3&gt;
&lt;p&gt;–ò—Ç–∞–∫, –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–≤–∞ —Ä–µ–∂–∏–º–∞ —Ä–∞–±–æ—Ç—ã –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞: —Ä–µ–∂–∏–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã –∏ —Ä–µ–∂–∏–º &lt;strong&gt;Bootloader&lt;/strong&gt;'–∞. –ü–æ—Å–ª–µ –ø–æ–¥–∞—á–∏ –ø–∏—Ç–∞–Ω–∏—è –Ω–∞ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä, –ª–∏–±–æ –ø–æ—Å–ª–µ &lt;em&gt;Reset&lt;/em&gt;, –∑–∞–≥—Ä—É–∑—á–∏–∫ &lt;strong&gt;Bootloader&lt;/strong&gt;'–∞ –ø–æ –Ω–µ–∫–æ—Ç–æ—Ä—ã–º –ø—Ä–∏–∑–Ω–∞–∫–∞–º –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ä–µ—à–µ–Ω–∏–µ, –∫–∞–∫–æ–π –∏–∑ –Ω–∏—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å. –û –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∑–∞–ø—É—Å–∫–∞ &lt;strong&gt;Bootloader&lt;/strong&gt;'–∞ –≥–æ–≤–æ—Ä—è—Ç —Å–ª–µ–¥—É—é—â–∏–µ –ø—Ä–∏–∑–Ω–∞–∫–∏:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;O—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã –Ω–µ—Ç, –Ω–∞–ø—Ä–∏–º–µ—Ä –ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;–ï—Å–ª–∏ –Ω–∞ –≤—Ö–æ–¥–µ RX –ª–æ–≥–∏—á–µ—Å–∫–∏–π –Ω–æ–ª—å (–≤ —Ç–µ—Ä–º–∏–Ω–∞—Ö RS-232 —Å–æ—Å—Ç–æ—è–Ω–∏–µ ‚ÄúBreak")&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;–¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å &lt;strong&gt;Bootloader&lt;/strong&gt;, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–∞–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–µ–π—Å—Ç–≤–∏–π: —Ñ–∏–∑–∏—á–µ—Å–∫–∏ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –∫ –ü–ö, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–æ–≥–∏—á–µ—Å–∫–∏–π –Ω–æ–ª—å –Ω–∞ RX, —ç—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –ø–æ—Å—Ä–µ–¥—Å—Ç–≤–æ–º –∫–Ω–æ–ø–æ—á–∫–∏ &lt;img alt="–ö–Ω–æ–ø–∫–∞ –ü–∞—É–∑–∞" src="https://mazko.github.io/blog/posts/2012/10/03/zamechatelnyi-bootloader-ot-microchip-dlia-pic16-pic18/shots/break_btn.png"&gt;, –ø–æ—Å–ª–µ —á–µ–≥–æ –≤–≤–µ—Å—Ç–∏ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ RESET (–≤ –ø—Ä–æ—Å—Ç–µ–π—à–µ–º —Å–ª—É—á–∞–µ - –≤–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –ø–∏—Ç–∞–Ω–∏–µ). –° —ç—Ç–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞ –∫ –Ω–µ–º—É –º–æ–∂–Ω–æ –ø–æ–¥–∫–ª—é—á–∞—Ç—å—Å—è —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã –ü–ö &lt;img alt="–ö–Ω–æ–ø–∫–∞ –ü–∞—É–∑–∞" src="https://mazko.github.io/blog/posts/2012/10/03/zamechatelnyi-bootloader-ot-microchip-dlia-pic16-pic18/shots/boot_btn.png"&gt;&lt;/p&gt;
&lt;p&gt;–ü–û –¥–ª—è –ü–ö –ø–æ—Å—Ç–∞–≤–ª—è–µnc—è –≤ –∏—Å—Ö–æ–¥–Ω–∏–∫–∞—Ö, –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –µ–≥–æ –º–æ–∂–Ω–æ –ø–æ–¥–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ &lt;strong&gt;QTCreator&lt;/strong&gt;, –∞ –¥–ª—è Windows —É–∂–µ –µ—Å—Ç—å –≥–æ—Ç–æ–≤—ã–π –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π .exe —Ñ–∞–π–ª. –ï—Å–ª–∏ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ –≤ Linux –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–µ—Ä–µ—Ö–æ–¥–Ω–∏–∫ –Ω–∞ PL2303, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Å–ª–µ–¥—É—é—â–µ–µ:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;~$ sudo modprobe -r pl2303
~$ sudo modprobe pl2303
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–ï—Å–ª–∏ –≤ &lt;strong&gt;Linux&lt;/strong&gt; –æ–±–æ–ª–æ—á–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å &lt;strong&gt;Bootloader&lt;/strong&gt;'–æ–º –≤–æ–æ–±—â–µ –Ω–µ –≤–∏–¥–∏—Ç USB-to-serial –ø–µ—Ä–µ—Ö–æ–¥–Ω–∏–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä &lt;code&gt;/dev/ttyUSB0&lt;/code&gt;), —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ —Ç–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—Å—Ç–æ –Ω–µ –æ–±–ª–∞–¥–∞–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º–∏ –ø—Ä–∞–≤–∞–º–∏. –ü–æ—Å–∫–æ–ª—å–∫—É –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É –∏—Ö-–ø–æ–¥ &lt;strong&gt;root&lt;/strong&gt;'a –Ω–µ—É–¥–æ–±–Ω–æ, –Ω–∏–∂–µ –æ–ø–∏—Å–∞–Ω –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Å–ª—É—á–∞–π –ª–µ—á–µ–Ω–∏—è OpenSUSE 12.1 - –ø–æ–ª–Ω—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏ –Ω–∞ USB-to-serial –æ–±–ª–∞–¥–∞–µ—Ç –≥—Ä—É–ø–ø–∞ &lt;em&gt;dialout&lt;/em&gt;, –ø–æ—ç—Ç–æ–º—É –≤ –Ω–µ—ë –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–∏—Å—Ç–µ–º—ã, –ø–æ—Å–ª–µ —á–µ–≥–æ, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤—Å—Ç—É–ø–∏–ª–∏ –≤ —Å–∏–ª—É, –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –ø–µ—Ä–µ–ª–æ–≥–∏–Ω–∏—Ç—å—Å—è:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;oleg@linux-ubuc:~&amp;gt; ls -l /dev/ttyUSB?
crw-rw---- &lt;span class="m"&gt;1&lt;/span&gt; root dialout &lt;span class="m"&gt;188&lt;/span&gt;, &lt;span class="m"&gt;0&lt;/span&gt; –º–∞—Ä—Ç–∞  &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;:13 /dev/ttyUSB0
oleg@linux-ubuc:~&amp;gt; sudo /usr/sbin/groupmod -A &lt;span class="nv"&gt;$USER&lt;/span&gt; dialout
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;–í Ubuntu 12.04 –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –º–æ–∂–Ω–æ —Ç–∞–∫: &lt;code&gt;sudo adduser $USER dialout&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;–ù–∞ —ç—Ç–æ–º –≤—Å—ë, –Ω–∞–¥—ë–∂–Ω—ã—Ö –¥–µ–≤–∞–π—Å–æ–≤ –í–∞–º !&lt;/p&gt;
&lt;p&gt;–ù–∞ –≤—Å—è–∫–∏–π –ø–æ–∂–∞—Ä–Ω—ã–π –∏—Å—Ö–æ–¥–Ω–∏–∫–∏ &lt;a href="https://mazko.github.io/blog/posts/2012/10/03/zamechatelnyi-bootloader-ot-microchip-dlia-pic16-pic18/bootloader.zip"&gt;—Ç—É—Ç&lt;/a&gt;.&lt;/p&gt;</content><category term="Bootloader"></category><category term="UART"></category></entry></feed>